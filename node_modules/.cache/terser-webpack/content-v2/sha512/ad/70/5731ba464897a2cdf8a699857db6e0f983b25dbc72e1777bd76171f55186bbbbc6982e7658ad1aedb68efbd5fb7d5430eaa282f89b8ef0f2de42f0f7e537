{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{B9dj:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,\"PathologyPageModule\",function(){return pathology_module_PathologyPageModule});var common=__webpack_require__(\"ofXK\"),fesm2015_forms=__webpack_require__(\"3Pt+\"),ionic_angular=__webpack_require__(\"TEn/\"),router=__webpack_require__(\"tyNb\"),tslib_es6=__webpack_require__(\"mrSG\"),edit_pathology_page=__webpack_require__(\"tWnK\"),core=__webpack_require__(\"fXoL\"),user_data_service=__webpack_require__(\"DPk/\");const routes=[{path:\"\",component:(()=>{class PathologyPage{constructor(modalCtrl,userDataService){this.modalCtrl=modalCtrl,this.userDataService=userDataService,this.medicalRecord={pathology:\"No content\",airwayCondition:\"No content\",otherMedicalConditions:\"No content\"}}ngOnInit(){return Object(tslib_es6.a)(this,void 0,void 0,function*(){yield this.userDataService.loadMedicalRecord(),Object.keys(this.userDataService.medicalRecordValue).forEach(key=>{Object.keys(this.medicalRecord).includes(key)&&(this.medicalRecord[key]=this.userDataService.medicalRecordValue[key]),console.log(key,this.medicalRecord[key])})})}edit(){return Object(tslib_es6.a)(this,void 0,void 0,function*(){(yield this.modalCtrl.create({component:edit_pathology_page.a,backdropDismiss:!1,componentProps:{isModal:!0}})).present()})}}return PathologyPage.ɵfac=function(t){return new(t||PathologyPage)(core.Ib(ionic_angular.P),core.Ib(user_data_service.a))},PathologyPage.ɵcmp=core.Cb({type:PathologyPage,selectors:[[\"app-pathology\"]],decls:28,vars:3,consts:[[\"slot\",\"start\"],[\"defaultHref\",\"medical-record\"],[\"slot\",\"end\"],[3,\"click\"]],template:function(rf,ctx){1&rf&&(core.Nb(0,\"ion-header\"),core.Nb(1,\"ion-toolbar\"),core.Nb(2,\"ion-buttons\",0),core.Jb(3,\"ion-back-button\",1),core.Mb(),core.Nb(4,\"ion-title\"),core.mc(5,\"Pathology\"),core.Mb(),core.Nb(6,\"ion-buttons\",2),core.Nb(7,\"ion-button\",3),core.Vb(\"click\",function(){return ctx.edit()}),core.mc(8,\"Edit\"),core.Mb(),core.Mb(),core.Mb(),core.Mb(),core.Nb(9,\"ion-content\"),core.Nb(10,\"ion-card\"),core.Nb(11,\"ion-card-header\"),core.Nb(12,\"ion-card-title\"),core.mc(13,\"Reason for Tracheostomy\"),core.Mb(),core.Mb(),core.Nb(14,\"ion-card-content\"),core.mc(15),core.Mb(),core.Mb(),core.Nb(16,\"ion-card\"),core.Nb(17,\"ion-card-header\"),core.Nb(18,\"ion-card-title\"),core.mc(19,\"Airway Condition for Intubation\"),core.Mb(),core.Mb(),core.Nb(20,\"ion-card-content\"),core.mc(21),core.Mb(),core.Mb(),core.Nb(22,\"ion-card\"),core.Nb(23,\"ion-card-header\"),core.Nb(24,\"ion-card-title\"),core.mc(25,\"Other Medical Conditions\"),core.Mb(),core.Mb(),core.Nb(26,\"ion-card-content\"),core.mc(27),core.Mb(),core.Mb(),core.Mb()),2&rf&&(core.xb(15),core.oc(\" \",ctx.medicalRecord.pathology,\" \"),core.xb(6),core.oc(\" \",ctx.medicalRecord.airwayCondition,\" \"),core.xb(6),core.oc(\" \",ctx.medicalRecord.otherMedicalConditions,\" \"))},directives:[ionic_angular.v,ionic_angular.M,ionic_angular.h,ionic_angular.e,ionic_angular.f,ionic_angular.K,ionic_angular.g,ionic_angular.p,ionic_angular.i,ionic_angular.k,ionic_angular.m,ionic_angular.j],styles:[\"ion-card-title[_ngcontent-%COMP%]{font-size:medium;font-weight:700;color:#ff7800}ion-card-header[_ngcontent-%COMP%]{padding-top:15px;padding-bottom:10px}ion-card-content[_ngcontent-%COMP%]{padding-bottom:15px;color:#000}\"]}),PathologyPage})()}];let pathology_routing_module_PathologyPageRoutingModule=(()=>{class PathologyPageRoutingModule{}return PathologyPageRoutingModule.ɵmod=core.Gb({type:PathologyPageRoutingModule}),PathologyPageRoutingModule.ɵinj=core.Fb({factory:function(t){return new(t||PathologyPageRoutingModule)},imports:[[router.i.forChild(routes)],router.i]}),PathologyPageRoutingModule})(),pathology_module_PathologyPageModule=(()=>{class PathologyPageModule{}return PathologyPageModule.ɵmod=core.Gb({type:PathologyPageModule}),PathologyPageModule.ɵinj=core.Fb({factory:function(t){return new(t||PathologyPageModule)},imports:[[common.b,fesm2015_forms.d,ionic_angular.N,pathology_routing_module_PathologyPageRoutingModule]]}),PathologyPageModule})()}}]);","name":"25-es2015.e3f91835be7b154e8b0c.js","input":"(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[25],{\n\n/***/ \"B9dj\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, \"PathologyPageModule\", function() { return /* binding */ pathology_module_PathologyPageModule; });\n\n// EXTERNAL MODULE: ./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js\nvar common = __webpack_require__(\"ofXK\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js + 1 modules\nvar fesm2015_forms = __webpack_require__(\"3Pt+\");\n\n// EXTERNAL MODULE: ./node_modules/@ionic/angular/__ivy_ngcc__/fesm2015/ionic-angular.js + 5 modules\nvar ionic_angular = __webpack_require__(\"TEn/\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js + 15 modules\nvar router = __webpack_require__(\"tyNb\");\n\n// EXTERNAL MODULE: ./node_modules/tslib/tslib.es6.js\nvar tslib_es6 = __webpack_require__(\"mrSG\");\n\n// EXTERNAL MODULE: ./src/app/edit-pathology/edit-pathology.page.ts\nvar edit_pathology_page = __webpack_require__(\"tWnK\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js + 1 modules\nvar core = __webpack_require__(\"fXoL\");\n\n// EXTERNAL MODULE: ./src/app/services/user-data.service.ts\nvar user_data_service = __webpack_require__(\"DPk/\");\n\n// CONCATENATED MODULE: ./src/app/pathology/pathology.page.ts\n\n\n\n\n\nlet pathology_page_PathologyPage = /*@__PURE__*/ (() => {\n    class PathologyPage {\n        constructor(modalCtrl, userDataService) {\n            this.modalCtrl = modalCtrl;\n            this.userDataService = userDataService;\n            this.medicalRecord = {\n                pathology: 'No content',\n                airwayCondition: 'No content',\n                otherMedicalConditions: 'No content',\n            };\n        }\n        ngOnInit() {\n            return Object(tslib_es6[\"a\" /* __awaiter */])(this, void 0, void 0, function* () {\n                yield this.userDataService.loadMedicalRecord();\n                Object.keys(this.userDataService.medicalRecordValue).forEach(key => {\n                    if (Object.keys(this.medicalRecord).includes(key)) {\n                        this.medicalRecord[key] = this.userDataService.medicalRecordValue[key];\n                    }\n                    console.log(key, this.medicalRecord[key]);\n                });\n            });\n        }\n        edit() {\n            return Object(tslib_es6[\"a\" /* __awaiter */])(this, void 0, void 0, function* () {\n                const modal = yield this.modalCtrl.create({\n                    component: edit_pathology_page[\"a\" /* EditPathologyPage */],\n                    backdropDismiss: false,\n                    componentProps: {\n                        isModal: true\n                    },\n                });\n                modal.present();\n            });\n        }\n    }\n    PathologyPage.ɵfac = function PathologyPage_Factory(t) { return new (t || PathologyPage)(core[\"Ib\" /* ɵɵdirectiveInject */](ionic_angular[\"P\" /* ModalController */]), core[\"Ib\" /* ɵɵdirectiveInject */](user_data_service[\"a\" /* UserDataService */])); };\n    PathologyPage.ɵcmp = core[\"Cb\" /* ɵɵdefineComponent */]({ type: PathologyPage, selectors: [[\"app-pathology\"]], decls: 28, vars: 3, consts: [[\"slot\", \"start\"], [\"defaultHref\", \"medical-record\"], [\"slot\", \"end\"], [3, \"click\"]], template: function PathologyPage_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"Nb\" /* ɵɵelementStart */](0, \"ion-header\");\n                core[\"Nb\" /* ɵɵelementStart */](1, \"ion-toolbar\");\n                core[\"Nb\" /* ɵɵelementStart */](2, \"ion-buttons\", 0);\n                core[\"Jb\" /* ɵɵelement */](3, \"ion-back-button\", 1);\n                core[\"Mb\" /* ɵɵelementEnd */]();\n                core[\"Nb\" /* ɵɵelementStart */](4, \"ion-title\");\n                core[\"mc\" /* ɵɵtext */](5, \"Pathology\");\n                core[\"Mb\" /* ɵɵelementEnd */]();\n                core[\"Nb\" /* ɵɵelementStart */](6, \"ion-buttons\", 2);\n                core[\"Nb\" /* ɵɵelementStart */](7, \"ion-button\", 3);\n                core[\"Vb\" /* ɵɵlistener */](\"click\", function PathologyPage_Template_ion_button_click_7_listener() { return ctx.edit(); });\n                core[\"mc\" /* ɵɵtext */](8, \"Edit\");\n                core[\"Mb\" /* ɵɵelementEnd */]();\n                core[\"Mb\" /* ɵɵelementEnd */]();\n                core[\"Mb\" /* ɵɵelementEnd */]();\n                core[\"Mb\" /* ɵɵelementEnd */]();\n                core[\"Nb\" /* ɵɵelementStart */](9, \"ion-content\");\n                core[\"Nb\" /* ɵɵelementStart */](10, \"ion-card\");\n                core[\"Nb\" /* ɵɵelementStart */](11, \"ion-card-header\");\n                core[\"Nb\" /* ɵɵelementStart */](12, \"ion-card-title\");\n                core[\"mc\" /* ɵɵtext */](13, \"Reason for Tracheostomy\");\n                core[\"Mb\" /* ɵɵelementEnd */]();\n                core[\"Mb\" /* ɵɵelementEnd */]();\n                core[\"Nb\" /* ɵɵelementStart */](14, \"ion-card-content\");\n                core[\"mc\" /* ɵɵtext */](15);\n                core[\"Mb\" /* ɵɵelementEnd */]();\n                core[\"Mb\" /* ɵɵelementEnd */]();\n                core[\"Nb\" /* ɵɵelementStart */](16, \"ion-card\");\n                core[\"Nb\" /* ɵɵelementStart */](17, \"ion-card-header\");\n                core[\"Nb\" /* ɵɵelementStart */](18, \"ion-card-title\");\n                core[\"mc\" /* ɵɵtext */](19, \"Airway Condition for Intubation\");\n                core[\"Mb\" /* ɵɵelementEnd */]();\n                core[\"Mb\" /* ɵɵelementEnd */]();\n                core[\"Nb\" /* ɵɵelementStart */](20, \"ion-card-content\");\n                core[\"mc\" /* ɵɵtext */](21);\n                core[\"Mb\" /* ɵɵelementEnd */]();\n                core[\"Mb\" /* ɵɵelementEnd */]();\n                core[\"Nb\" /* ɵɵelementStart */](22, \"ion-card\");\n                core[\"Nb\" /* ɵɵelementStart */](23, \"ion-card-header\");\n                core[\"Nb\" /* ɵɵelementStart */](24, \"ion-card-title\");\n                core[\"mc\" /* ɵɵtext */](25, \"Other Medical Conditions\");\n                core[\"Mb\" /* ɵɵelementEnd */]();\n                core[\"Mb\" /* ɵɵelementEnd */]();\n                core[\"Nb\" /* ɵɵelementStart */](26, \"ion-card-content\");\n                core[\"mc\" /* ɵɵtext */](27);\n                core[\"Mb\" /* ɵɵelementEnd */]();\n                core[\"Mb\" /* ɵɵelementEnd */]();\n                core[\"Mb\" /* ɵɵelementEnd */]();\n            }\n            if (rf & 2) {\n                core[\"xb\" /* ɵɵadvance */](15);\n                core[\"oc\" /* ɵɵtextInterpolate1 */](\" \", ctx.medicalRecord.pathology, \" \");\n                core[\"xb\" /* ɵɵadvance */](6);\n                core[\"oc\" /* ɵɵtextInterpolate1 */](\" \", ctx.medicalRecord.airwayCondition, \" \");\n                core[\"xb\" /* ɵɵadvance */](6);\n                core[\"oc\" /* ɵɵtextInterpolate1 */](\" \", ctx.medicalRecord.otherMedicalConditions, \" \");\n            }\n        }, directives: [ionic_angular[\"v\" /* IonHeader */], ionic_angular[\"M\" /* IonToolbar */], ionic_angular[\"h\" /* IonButtons */], ionic_angular[\"e\" /* IonBackButton */], ionic_angular[\"f\" /* IonBackButtonDelegate */], ionic_angular[\"K\" /* IonTitle */], ionic_angular[\"g\" /* IonButton */], ionic_angular[\"p\" /* IonContent */], ionic_angular[\"i\" /* IonCard */], ionic_angular[\"k\" /* IonCardHeader */], ionic_angular[\"m\" /* IonCardTitle */], ionic_angular[\"j\" /* IonCardContent */]], styles: [\"ion-card-title[_ngcontent-%COMP%]{font-size:medium;font-weight:700;color:#ff7800}ion-card-header[_ngcontent-%COMP%]{padding-top:15px;padding-bottom:10px}ion-card-content[_ngcontent-%COMP%]{padding-bottom:15px;color:#000}\"] });\n    return PathologyPage;\n})();\n\n// CONCATENATED MODULE: ./src/app/pathology/pathology-routing.module.ts\n\n\n\n\nconst routes = [\n    {\n        path: '',\n        component: pathology_page_PathologyPage\n    }\n];\nlet pathology_routing_module_PathologyPageRoutingModule = /*@__PURE__*/ (() => {\n    class PathologyPageRoutingModule {\n    }\n    PathologyPageRoutingModule.ɵmod = core[\"Gb\" /* ɵɵdefineNgModule */]({ type: PathologyPageRoutingModule });\n    PathologyPageRoutingModule.ɵinj = core[\"Fb\" /* ɵɵdefineInjector */]({ factory: function PathologyPageRoutingModule_Factory(t) { return new (t || PathologyPageRoutingModule)(); }, imports: [[router[\"i\" /* RouterModule */].forChild(routes)], router[\"i\" /* RouterModule */]] });\n    return PathologyPageRoutingModule;\n})();\n\n// CONCATENATED MODULE: ./src/app/pathology/pathology.module.ts\n\n\n\n\n\nlet pathology_module_PathologyPageModule = /*@__PURE__*/ (() => {\n    class PathologyPageModule {\n    }\n    PathologyPageModule.ɵmod = core[\"Gb\" /* ɵɵdefineNgModule */]({ type: PathologyPageModule });\n    PathologyPageModule.ɵinj = core[\"Fb\" /* ɵɵdefineInjector */]({ factory: function PathologyPageModule_Factory(t) { return new (t || PathologyPageModule)(); }, imports: [[\n                common[\"b\" /* CommonModule */],\n                fesm2015_forms[\"d\" /* FormsModule */],\n                ionic_angular[\"N\" /* IonicModule */],\n                pathology_routing_module_PathologyPageRoutingModule\n            ]] });\n    return PathologyPageModule;\n})();\n\n\n/***/ })\n\n}]);","inputSourceMap":null}