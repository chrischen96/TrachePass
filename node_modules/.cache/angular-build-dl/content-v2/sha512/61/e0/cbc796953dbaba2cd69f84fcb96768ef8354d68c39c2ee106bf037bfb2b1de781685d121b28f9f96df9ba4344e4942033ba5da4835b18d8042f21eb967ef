{"version":3,"sources":["webpack:///src/app/edit-tracheostomy-details/edit-tracheostomy-details.page.scss","webpack:///src/app/edit-tracheostomy-details/edit-tracheostomy-details.page.html","webpack:///src/app/services/user-data.service.ts","webpack:///src/app/edit-tracheostomy-details/edit-tracheostomy-details.page.ts"],"names":["Storage","UserDataService","userProfileValue","userProfileKey","userProfileString","medicalRecordValue","medicalRecordKey","medicalRecordString","versionHistoryValue","versionHistoryKey","exporter","exporterString","JSON","stringify","userProfile","medicalRecord","get","key","userProfileGet","parse","value","console","log","versionHistoryGet","oldDataGet","oldDataValue","toSave","time","Date","toISOString","slice","type","saveVersion","set","medicalRecordGet","unshift","length","providedIn","EditTracheostomyDetailsPage","modalCtrl","fb","userDataService","subTypeList","sizeIDList","shaftLength","type1","type2","type3","type4","subtype5","type5","subtype6","type6","tubeTypes","form","group","tubeType","required","subType","sizeID","suctionLength","scheduleForChange","customize","loadMedicalRecord","Object","keys","controls","forEach","setValue","dismiss","saveMedicalRecord","location","reload","patchValue","selector","template"],"mappings":"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","file":"default~edit-tracheostomy-details-edit-tracheostomy-details-module~tracheostomy-details-tracheostomy~a3467248-es5.js","sourcesContent":["export default \"ion-input:last-child {\\n  text-align: end;\\n}\\n\\nion-input {\\n  color: dodgerblue;\\n}\\n\\nion-select {\\n  max-width: 70%;\\n  padding: 0%;\\n  padding-right: 10px;\\n  color: dodgerblue;\\n}\\n\\nion-label {\\n  padding: 0%;\\n  min-width: 90px;\\n}\\n\\n.length {\\n  text-align: end;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2VkaXQtdHJhY2hlb3N0b215LWRldGFpbHMucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZUFBQTtBQUNKOztBQUVBO0VBQ0ksaUJBQUE7QUFDSjs7QUFFQTtFQUNJLGNBQUE7RUFDQSxXQUFBO0VBQ0EsbUJBQUE7RUFDQSxpQkFBQTtBQUNKOztBQUVBO0VBQ0ksV0FBQTtFQUNBLGVBQUE7QUFDSjs7QUFFQTtFQUNJLGVBQUE7QUFDSiIsImZpbGUiOiJlZGl0LXRyYWNoZW9zdG9teS1kZXRhaWxzLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1pbnB1dDpsYXN0LWNoaWxkIHtcbiAgICB0ZXh0LWFsaWduOiBlbmQ7XG59XG5cbmlvbi1pbnB1dCB7XG4gICAgY29sb3I6ZG9kZ2VyYmx1ZTtcbn1cblxuaW9uLXNlbGVjdCB7XG4gICAgbWF4LXdpZHRoOiA3MCU7XG4gICAgcGFkZGluZzogMCU7XG4gICAgcGFkZGluZy1yaWdodDogMTBweDtcbiAgICBjb2xvcjogZG9kZ2VyYmx1ZTtcbn1cblxuaW9uLWxhYmVse1xuICAgIHBhZGRpbmc6IDAlO1xuICAgIG1pbi13aWR0aDogOTBweDtcbn1cblxuLmxlbmd0aCB7XG4gICAgdGV4dC1hbGlnbjogZW5kO1xufSJdfQ== */\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button color=\\\"danger\\\" (click)=\\\"dismiss()\\\">Cancel</ion-button>\\n    </ion-buttons>\\n    <ion-title>Edit</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"save()\\\">Done</ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <form [formGroup]=\\\"form\\\">\\n    <ion-list>\\n      <ion-list-header lines=\\\"full\\\">\\n        <ion-label>\\n          Tracheostomy Details\\n        </ion-label>\\n      </ion-list-header>\\n\\n      <ion-item>\\n        <ion-label>Manual input</ion-label>\\n        <ion-toggle formControlName=\\\"customize\\\" (ionChange)=\\\"toggleCustom()\\\"></ion-toggle>\\n      </ion-item>\\n\\n      <div *ngIf=\\\"!form.value.customize\\\">\\n        <ion-item>\\n          <ion-label>Tube Type: </ion-label>\\n          <ion-select (ionChange)=\\\"selectedTubeType()\\\" formControlName=\\\"tubeType\\\">\\n            <div *ngFor=\\\"let tubetype of tubeTypes | keyvalue\\\">\\n              <!-- <ion-text>{{tubetype.tubeTypeName}}</ion-text> -->\\n              <ion-select-option value=\\\"{{tubetype.key}}\\\">{{tubetype.key}}</ion-select-option>\\n            </div>\\n          </ion-select>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label>Sub Type: </ion-label>\\n          <ion-select (ionChange)=\\\"selectedSubTubeType()\\\" formControlName=\\\"subType\\\">\\n            <div *ngFor=\\\"let subtype of subTypeList | keyvalue\\\">\\n              <!-- <ion-text>{{tubetype.tubeTypeName}}</ion-text> -->\\n              <ion-select-option value=\\\"{{subtype.key}}\\\">{{subtype.key}}</ion-select-option>\\n            </div>\\n          </ion-select>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label>Size - ID (mm): </ion-label>\\n          <ion-select (ionChange)=\\\"selectedSize()\\\" formControlName=\\\"sizeID\\\">\\n            <div *ngFor=\\\"let sizeID of sizeIDList | keyvalue\\\">\\n              <ion-select-option value=\\\"{{sizeID.key}}\\\">{{sizeID.key}}</ion-select-option>\\n            </div>\\n          </ion-select>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label *ngIf=\\\" form.value.tubeType=='Bivona Hyperflex' \\\">\\n            Max usable length (mm): \\n          </ion-label>\\n          <ion-label *ngIf=\\\" form.value.tubeType=='Shiley Uncuffed' || \\n          form.value.tubeType=='Shiley Cuffed' || \\n          form.value.tubeType=='Adult Portex Blue Line Ultra' || \\n          form.value.tubeType=='Adult Bivona' \\\">\\n            Length (mm): \\n          </ion-label>\\n          <ion-label *ngIf=\\\" form.value.tubeType!='Bivona Hyperflex' && \\n          form.value.tubeType!='Shiley Uncuffed' && \\n          form.value.tubeType!='Shiley Cuffed' &&  \\n          form.value.tubeType!='Adult Portex Blue Line Ultra' &&  \\n          form.value.tubeType!='Adult Bivona' \\\">\\n            Shaft Length (mm): \\n          </ion-label>\\n          <ion-input class=\\\"length\\\" formControlName=\\\"shaftLength\\\">\\n          </ion-input>\\n        </ion-item> \\n      </div>\\n\\n      <div *ngIf=\\\"form.value.customize\\\">\\n        <ion-item>\\n          <ion-label>Tube Type: </ion-label>\\n          <ion-input type=\\\"text\\\" formControlName=\\\"tubeType\\\"></ion-input>\\n        </ion-item>\\n        \\n        <ion-item>\\n          <ion-label>Sub Type: </ion-label>\\n          <ion-input type=\\\"text\\\" formControlName=\\\"subType\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item>\\n          <ion-label>Size - ID (mm): </ion-label>\\n          <ion-input type=\\\"text\\\" formControlName=\\\"sizeID\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item>\\n          <ion-label>Shaft Length (mm): </ion-label>\\n          <ion-input type=\\\"text\\\" formControlName=\\\"shaftLength\\\"></ion-input>\\n        </ion-item>\\n      </div>\\n\\n      <ion-item>\\n        <ion-label>Suction Length (mm): </ion-label>\\n        <ion-input type=\\\"text\\\" formControlName=\\\"suctionLength\\\"></ion-input>\\n      </ion-item>\\n\\n    </ion-list>\\n  </form>\\n</ion-content>\\n\";","import { Injectable } from '@angular/core';\n\nimport { Plugins, Capacitor, } from '@capacitor/core';\n\nconst { Storage } = Plugins;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserDataService {\n\n  public userProfileValue = {};\n  public userProfileKey: string = \"userProfile\";\n  public userProfileString: string = \"\";\n\n  public medicalRecordValue = {};\n  public medicalRecordKey:string = \"medicalRecord\";\n  public medicalRecordString: string = \"\";\n\n  public versionHistoryValue = [];\n  public versionHistoryKey:string = 'versionHistory';\n\n  public exporter = {};\n  public exporterString = \"\";\n\n  constructor() { }\n  async exportData() {\n    this.userProfileString = JSON.stringify(this.userProfileValue);\n    this.medicalRecordString = JSON.stringify(this.medicalRecordValue);\n\n    this.exporter = {\n      userProfile: this.userProfileString,\n      medicalRecord: this.medicalRecordString,\n    }\n    this.exporterString = JSON.stringify(this.exporter);\n  }\n\n  async loadUserProfile(){\n    const userProfileGet= await Storage.get({ key: this.userProfileKey });\n    this.userProfileValue = JSON.parse(userProfileGet.value) || {};\n    console.log(\"finished loading\");\n    const versionHistoryGet = await Storage.get({ key: this.versionHistoryKey });\n    this.versionHistoryValue = JSON.parse(versionHistoryGet.value) || [];\n  } //load user profile from storage\n\n  async saveUserProfile() {\n    const oldDataGet = await Storage.get({ key: this.userProfileKey});\n    const oldDataValue = JSON.parse(oldDataGet.value) || {};\n    console.log(oldDataValue);\n    const toSave = {\n      time: new Date().toISOString().slice(0,16),\n      type: 'User Profile',\n      value: oldDataValue,\n    }\n    this.saveVersion(toSave);\n    Storage.set({\n      key: this.userProfileKey,\n      value: JSON.stringify(this.userProfileValue),\n    })\n  } //save updated user profile to storage\n\n  async loadMedicalRecord(){\n    const medicalRecordGet= await Storage.get({ key: this.medicalRecordKey });\n    this.medicalRecordValue = JSON.parse(medicalRecordGet.value) || {};\n    console.log(\"finished loading\");\n    const versionHistoryGet = await Storage.get({ key: this.versionHistoryKey });\n    this.versionHistoryValue = JSON.parse(versionHistoryGet.value) || [];\n  } //load medical record from storage\n\n  async saveMedicalRecord() {\n    const oldDataGet = await Storage.get({ key: this.medicalRecordKey});\n    const oldDataValue = JSON.parse(oldDataGet.value) || {};\n    const toSave = {\n      time: new Date().toISOString().slice(0,16),\n      type: 'Medical Record',\n      value: oldDataValue,\n    }\n    this.saveVersion(toSave);\n    Storage.set({\n      key: this.medicalRecordKey,\n      value: JSON.stringify(this.medicalRecordValue),\n    })\n  } //save new medical record to storage\n\n  saveVersion(toSave: any){\n    this.versionHistoryValue.unshift(toSave);\n    console.log(this.versionHistoryValue);\n    console.log(this.versionHistoryValue.length);\n    if (this.versionHistoryValue.length > 10) {\n      console.log(\"too long\")\n      this.versionHistoryValue = this.versionHistoryValue.slice(0,10);\n      console.log(this.versionHistoryValue);\n    }\n    Storage.set({\n      key: this.versionHistoryKey,\n      value: JSON.stringify(this.versionHistoryValue)\n    })\n  }\n\n  convertToString() {\n    this.userProfileString = JSON.stringify(this.userProfileValue);\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { pickerController } from '@ionic/core';\nimport { FormBuilder, FormGroup, FormControl, Validators, ReactiveFormsModule} from '@angular/forms'\nimport { UserDataService } from '../services/user-data.service'; \n\n@Component({\n  selector: 'app-edit-tracheostomy-details',\n  templateUrl: './edit-tracheostomy-details.page.html',\n  styleUrls: ['./edit-tracheostomy-details.page.scss'],\n})\nexport class EditTracheostomyDetailsPage implements OnInit {\n  public form: FormGroup;\n  public subTypeList: Object = {};\n  public sizeIDList: Object =  {};\n  public shaftLength: string = '';\n\n  constructor(\n    private modalCtrl:ModalController,\n    public fb: FormBuilder,\n    public userDataService:UserDataService,\n  ) {\n    this.form = this.fb.group({\n      tubeType: ['', Validators.required],\n      subType: ['', Validators.required],\n      sizeID: ['', Validators.required],\n      shaftLength: ['', Validators.required],\n      suctionLength: ['', Validators.required],\n      scheduleForChange: ['', Validators.required],\n      customize: ['', Validators.required],\n    })\n   }\n\n  async ngOnInit() {\n    await this.userDataService.loadMedicalRecord();\n    Object.keys(this.form.controls).forEach(key => {\n      this.form.get(key).setValue(this.userDataService.medicalRecordValue[key]);\n      if (this.userDataService.medicalRecordValue['customize'] == null){\n        this.form.get('customize').setValue(false);\n      }\n      console.log(key, this.form.get(key).value)\n    });\n    if (this.form.value['customize'] == false) {\n      console.log(this.form.value[\"customize\"]);\n      console.log(this.form.value[\"tubeType\"]);\n      this.subTypeList = this.tubeTypes[this.form.value[\"tubeType\"]];\n      console.log(this.subTypeList);\n      this.sizeIDList = this.subTypeList[this.form.value[\"subType\"]];\n      console.log(this.sizeIDList);\n      this.shaftLength = this.sizeIDList[this.form.value[\"sizeID\"]];\n      console.log(this.shaftLength);\n    }\n  }\n\n  dismiss(){\n    this.modalCtrl.dismiss();\n  }\n\n  save(){\n    Object.keys(this.form.controls).forEach(key => {\n      this.userDataService.medicalRecordValue[key]=this.form.value[key];\n      console.log(key, this.form.get(key).value)\n    });\n    this.userDataService.saveMedicalRecord();\n    this.modalCtrl.dismiss();\n    location.reload();\n  }\n\n  toggleCustom() {\n    this.form.patchValue({\n      tubeType:\"\",\n      subType: \"\",\n      sizeID: \"\",\n      shaftLength:\"\",\n    });\n    console.log(this.form.value['customize']);\n  }\n\n  selectedTubeType() {\n\n    console.log(this.form.value.tubeType);\n    this.subTypeList = this.tubeTypes[this.form.value.tubeType];\n    this.form.get('subType').setValue('');\n    this.form.get('sizeID').setValue('');\n    this.form.get('shaftLength').setValue('');\n    this.shaftLength = '';\n  }\n\n  selectedSubTubeType(){\n    console.log(this.subTypeList);\n    console.log(this.form.value.subType)\n    this.sizeIDList = this.subTypeList[this.form.value.subType];\n    this.form.get('sizeID').setValue('');\n    this.form.get('shaftLength').setValue('');\n    this.shaftLength = '';\n  } \n\n  selectedSize(){\n    this.shaftLength = this.sizeIDList[this.form.value.sizeID];\n    this.form.get('shaftLength').setValue(this.shaftLength);\n  }\n\n  // Bivona Uncuffed, Bivona Fome-Cuf, Bivona Aire-Cuf, Bivona TTS cuff\n  // Bivona Flextend also share the same size\n  public type1 = {\n    \"Neo (neonatal)\":{\n      \"2.5\":\"30\",\n      \"3.0\":\"32\",\n      \"3.5\":\"34\",\n      \"4.0\":\"36\",\n    },\n    \"Ped (paediatric)\": {\n      \"2.5\":\"38\",\n      \"3.0\":\"39\",\n      \"3.5\":\"40\",\n      \"4.0\":\"41\",\n      \"4.5\":\"42\",\n      \"5.0\":\"44\",\n      \"5.5\":\"46\",\n    },\n  }\n\n  // Bivona Hyperflex\n  public type2 = {\n    \"N/A\": {\n      \"2.5\":\"55\",\n      \"3.0\":\"60\",\n      \"3.5\":\"65\",\n      \"4.0\":\"70\",\n      \"4.5\":\"75\",\n      \"5.0\":\"80\",\n      \"5.5\":\"85\",\n    },\n  }\n\n  //shiley uncuffed\n  public type3 = {\n    \"Neo (neonatal)\":{\n      \"4.5\":\"36\",\n    },\n    \"Ped (Paediatric)\": {\n      \"3.0\":\"39\",\n      \"3.5\":\"40\",\n      \"4.0\":\"41\",\n      \"4.5\":\"42\",\n      \"5.0\":\"44\",\n      \"5.5\":\"46\",\n    },\n    \"Ped - Long\": {\n      \"5.0\":\"50\",\n      \"5.5\":\"52\",\n      \"6.0\":\"54\",\n      \"6.5\":\"56\",\n    },\n  }\n  //shiley cuffed\n  public type4 = {\n    \"Ped (Paediatric)\": {\n      \"3.0\":\"39\",\n      \"3.5\":\"40\",\n      \"4.0\":\"41\",\n      \"4.5\":\"42\",\n      \"5.0\":\"44\",\n      \"5.5\":\"46\",\n    },\n    \"Ped - Long\": {\n      \"5.0\":\"50\",\n      \"5.5\":\"52\",\n      \"6.0\":\"54\",\n      \"6.5\":\"56\",\n    },\n  }\n\n  //Adul Portex Blue Line Ultra\n  public subtype5 = {\n    \"6.0\":\"64.5\",\n    \"7.0\":\"70\"\n  }\n  public type5 = {\n    \"Cuffed unfenstrated\":this.subtype5,\n    \"Cuffed fenstrated\":this.subtype5,\n    \"Uncuffed fenstrated\":this.subtype5,\n  }\n\n  //Adult Bivona\n  public subtype6 = {\n    \"5.0\":\"60\",\n    \"6.0\":\"70\",\n    \"7.0\":\"80\",\n  }\n  public type6 = {\n    \"Cuffed unfenstrated\":this.subtype6,\n    \"Cuffed fenstrated\":this.subtype6,\n    \"Uncuffed fenstrated\":this.subtype6,\n  }\n  \n  //logic of chain select\n  public tubeTypes = {\n    \"Bivona Uncuffed\" : this.type1,\n    \"Bivona Fome-Cuf\" : this.type1,\n    \"Bivona Aire-Cuf\" : this.type1,\n    \"Bivona TTS cuff\": this.type1,\n    \"Bivona Flextend\" : this.type1,\n    \"Bivona Hyperflex\" : this.type2,\n    \"Shiley Uncuffed\": this.type3,\n    \"Shiley Cuffed\": this.type4,\n    \"Adult Portex Blue Line Ultra\": this.type5,\n    \"Adult Bivona\": this.type6,\n  }\n\n}\n"]}