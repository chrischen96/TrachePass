{"version":3,"sources":["webpack:///src/app/test-field-data-input/test-field-data-input.page.ts","webpack:///src/app/test-field-data-input/test-field-data-input-routing.module.ts","webpack:///src/app/test-field-data-input/test-field-data-input.page.html","webpack:///src/app/test-field-data-input/test-field-data-input.module.ts","webpack:///src/app/test-field-data-input/test-field-data-input.page.scss"],"names":["TestFieldDataInputPage","userDataService","formBuilder","router","type1","tubeTypes","editInfo","group","patientName","nhsNum","carer","phoneNo","relationship","customize","tubeType","subType","sizeID","shaftLength","suctionLength","notes","loadUserProfile","updateDefault","console","log","patchValue","user","subtype","Object","keys","controls","forEach","key","get","value","saveValue","navigate","selector","template","routes","path","component","TestFieldDataInputPageRoutingModule","imports","forChild","exports","TestFieldDataInputPageModule","declarations"],"mappings":"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","file":"test-field-data-input-test-field-data-input-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { UserDataService } from '../services/user-data.service'; \nimport { Validators, FormBuilder, FormGroup, FormControl, ReactiveFormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n//notes https://ionicthemes.com/tutorials/about/forms-and-validation-in-ionic\n@Component({\n  selector: 'app-test-field-data-input',\n  templateUrl: './test-field-data-input.page.html',\n  styleUrls: ['./test-field-data-input.page.scss'],\n})\nexport class TestFieldDataInputPage implements OnInit {\n  //initialize form grup\n  public editInfo : FormGroup;\n  \n  //calling data service nd form control to build form\n  constructor(public userDataService: UserDataService, public formBuilder: FormBuilder, private router: Router) {\n    //crreating form control\n    this.editInfo = this.formBuilder.group({\n      //use different valaditator\n      patientName: ['', ],\n      nhsNum: ['', ],\n      carer: ['', ],\n      phoneNo: ['', ],\n      relationship: ['', ],\n      customize: ['',],\n      tubeType: ['', ],\n      subType: ['', ],\n      sizeID:['' , ],\n      shaftLength:['', ],\n      suctionLength:['', ],\n      notes:['', ],\n    });\n  }\n  \n  async ngOnInit() {\n    //load user data must await!!\n    await this.userDataService.loadUserProfile();\n    //updating the form default value with new value\n    this.updateDefault();\n  }\n\n  //updating default value\n  updateDefault() {\n    console.log(\"updating\");\n    this.editInfo.patchValue({\n      patientName: this.userDataService.user[\"patientName\"] || \"\",\n      nhsNum: this.userDataService.user[\"nhsNum\"] || \"\",\n      carer: this.userDataService.user[\"carer\"] || \"\",\n      phoneNo: this.userDataService.user[\"phoneNo\"] || \"\",\n      customize: this.userDataService.user[\"customize\"] == true, \n      relationship: this.userDataService.user[\"relationship\"] || \"\",\n      tubeType: this.userDataService.user[\"tubeType\"] || \"Bivona Uncuffed\",\n      subtype: this.userDataService.user[\"tubeType\"] || \"Neo\",\n      sizeID: this.userDataService.user[\"sizeID\"] || \"2.5 mm\",\n      shaftLength: this.userDataService.user[\"shaftLength\"] || \"\",\n      suctionLength: this.userDataService.user[\"suctionLength\"] || \"\",\n      notes: this.userDataService.user[\"notes\"] || \"\",\n    })\n  }\n\n  // loop and set all values in the DB\n  async processForm() {\n    Object.keys(this.editInfo.controls).forEach(key => {\n      //console.log(\"saving\")\n      //this.saveValue(String(key), String(this.testing.get(key).value));\n      //console.log(String(key), String(this.testing.get(key).value), this.UserDataService.getValue(key));\n      this.userDataService.user[key] = this.editInfo.get(key).value;\n      console.log(key, this.editInfo.get(key).value)\n    });\n    this.userDataService.saveValue();\n    this.updateDefault();\n    //go ack to the other page\n    this.router.navigate(['form-temp']);\n  }\n  async toggleCustom() {\n    //console.log(\"true to false\");\n    if (this.editInfo.value.customize == false){\n      console.log(\"true to false\");\n      this.editInfo.patchValue({\n        subtype: \"Neo\",\n      });\n      this.editInfo.patchValue({\n        sizeID: \"2.5 mm\",\n      });\n    }\n  }\n  \n  // Bivona Uncuffed, Bivona Fome-Cuf, Bivona Aire-Cuf, Bivona TTS cuff\n\n  public type1 = {\"Neo\":\n    {\n      \"2.5 mm\":\"30 mm\",\n      \"3.0 mm\":\"32 mm\",\n      \"3.5 mm\":\"34 mm\",\n      \"4.0 mm\":\"36 mm\",\n    },\n    \"Ped\": {\n      \"2.5 mm\":\"38 mm\",\n      \"3.0 mm\":\"39 mm\",\n      \"3.5 mm\":\"40 mm\",\n      \"4.0 mm\":\"41 mm\",\n      \"4.5 mm\":\"42 mm\",\n      \"5.0 mm\":\"44 mm\",\n      \"5.5 mm\":\"46 mm\",\n    },\n    \"\": {\n      \"\":\"\",\n    }\n  }\n  //logic of chain select\n  public tubeTypes = {\n    \"\" : this.type1,\n    \"Bivona Uncuffed\": this.type1,\n    \"Bivona Fome-Cuf\": this.type1,\n    \"Bivona Aire-Cuf\": this.type1,\n    \"Bivona TTS cuff\": this.type1,\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TestFieldDataInputPage } from './test-field-data-input.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TestFieldDataInputPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TestFieldDataInputPageRoutingModule {}\n","export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">  \\n      <ion-menu-button color=\\\"dark\\\"></ion-menu-button>   \\n    </ion-buttons>  \\n    <ion-title>Edit Patient Information</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <!--This is the group for form conrol remember to add ReactiveFormModule to the import of the page module-->\\n  <form [formGroup]=\\\"editInfo\\\" (ngSubmit)=\\\"processForm()\\\">\\n    <ion-item-group>\\n      <ion-toolbar>\\n        <ion-title>Patient Information</ion-title>\\n      </ion-toolbar>\\n      <ion-item>\\n        <ion-label>Patient Name: </ion-label>\\n        <ion-input type=\\\"text\\\" formControlName=\\\"patientName\\\"></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label>NHS Number: </ion-label>\\n        <ion-input type=\\\"text\\\" formControlName=\\\"nhsNum\\\"></ion-input>\\n      </ion-item>\\n    </ion-item-group>\\n    <ion-item-group>\\n      <ion-toolbar>\\n        <ion-title>Carer Information</ion-title>\\n      </ion-toolbar>\\n      <ion-item>\\n        <ion-label>Carer: </ion-label>\\n        <ion-input type=\\\"text\\\" formControlName=\\\"carer\\\"></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label>Phone Number: </ion-label>\\n        <ion-input type=\\\"text\\\" formControlName=\\\"phoneNo\\\"></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label>Relationship: </ion-label>\\n        <ion-input type=\\\"text\\\" formControlName=\\\"relationship\\\"></ion-input>\\n      </ion-item>\\n    </ion-item-group>\\n    <ion-item-group>\\n      <ion-toolbar>\\n        <ion-title>Tube Information</ion-title>\\n      </ion-toolbar>\\n      <ion-item>\\n        <ion-label>Toogle Custom Value</ion-label>\\n        <ion-toggle formControlName=\\\"customize\\\" (click)=\\\"toggleCustom()\\\"></ion-toggle>\\n      </ion-item>\\n      <div *ngIf=\\\"!editInfo.value.customize\\\">\\n        <ion-item>\\n          <ion-label>Tube Type: </ion-label>\\n          <ion-select formControlName=\\\"tubeType\\\">\\n            <div *ngFor=\\\"let tubetype of tubeTypes | keyvalue\\\">\\n              <!-- <ion-text>{{tubetype.tubeTypeName}}</ion-text> -->\\n              <ion-select-option value=\\\"{{tubetype.key}}\\\">{{tubetype.key}}</ion-select-option>\\n            </div>\\n          </ion-select>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label>Sub Type: </ion-label>\\n          <ion-select formControlName=\\\"subType\\\">\\n            <div *ngFor=\\\"let subtype of tubeTypes[editInfo.value.tubeType] | keyvalue\\\">\\n              <!-- <ion-text>{{tubetype.tubeTypeName}}</ion-text> -->\\n              <ion-select-option value=\\\"{{subtype.key}}\\\">{{subtype.key}}</ion-select-option>\\n            </div>\\n          </ion-select>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label>Size/ID (mm): </ion-label>\\n          <ion-select formControlName=\\\"sizeID\\\">\\n            <ng-container>\\n            <div *ngFor=\\\"let sizeID of tubeTypes[editInfo.value.tubeType][editInfo.value.subType] | keyvalue\\\">\\n              <ion-select-option value=\\\"{{sizeID.key}}\\\">{{sizeID.key}}</ion-select-option>\\n            </div>\\n          </ng-container>\\n          </ion-select>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label>Shaft Length (mm): </ion-label>\\n          <ion-select formControlName=\\\"shaftLength\\\">\\n            <ng-container>\\n              <ion-select-option value=\\\"{{tubeTypes[editInfo.value.tubeType][editInfo.value.subType][editInfo.value.sizeID]}}\\\">{{tubeTypes[editInfo.value.tubeType][editInfo.value.subType][editInfo.value.sizeID]}}</ion-select-option>\\n          </ng-container>\\n          </ion-select>\\n        </ion-item>\\n      </div>\\n      <div *ngIf=\\\"editInfo.value.customize\\\">\\n        <ion-item>\\n          <ion-label>Tube Type: </ion-label>\\n          <ion-input type=\\\"text\\\" formControlName=\\\"tubeType\\\"></ion-input>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label>Sub Type: </ion-label>\\n          <ion-input type=\\\"text\\\" formControlName=\\\"subType\\\"></ion-input>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label>Size/ID (mm): </ion-label>\\n          <ion-input type=\\\"text\\\" formControlName=\\\"sizeID\\\"></ion-input>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label>Shaft Length (mm): </ion-label>\\n          <ion-input type=\\\"text\\\" formControlName=\\\"shaftLength\\\"></ion-input>\\n        </ion-item>\\n      </div>\\n      <ion-item>\\n        <ion-label>Suction Length: </ion-label>\\n        <ion-input type=\\\"text\\\" formControlName=\\\"suctionLength\\\"></ion-input>\\n      </ion-item>\\n    </ion-item-group>\\n    <ion-item-group>\\n      <ion-toolbar>\\n        <ion-title>Notes On Patient</ion-title>\\n      </ion-toolbar>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Insert Comment Here.</ion-label>\\n        <ion-textarea rows=\\\"12\\\" formControlName=\\\"notes\\\"></ion-textarea>\\n      </ion-item>\\n    </ion-item-group>\\n    <!--change the ??.valid otherwise it will cause error-->\\n    <ion-button color=\\\"success\\\" expand=\\\"full\\\" type=\\\"submit\\\" [disabled]=\\\"!editInfo.valid\\\">Submit</ion-button>\\n  </form>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// must import this two module in the form page and add to @NgModule\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TestFieldDataInputPageRoutingModule } from './test-field-data-input-routing.module';\n\nimport { TestFieldDataInputPage } from './test-field-data-input.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TestFieldDataInputPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [TestFieldDataInputPage]\n})\nexport class TestFieldDataInputPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0ZXN0LWZpZWxkLWRhdGEtaW5wdXQucGFnZS5zY3NzIn0= */\";"]}