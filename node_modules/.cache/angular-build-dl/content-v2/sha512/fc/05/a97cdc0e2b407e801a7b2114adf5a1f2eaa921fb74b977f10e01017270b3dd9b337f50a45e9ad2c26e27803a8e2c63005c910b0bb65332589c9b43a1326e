{"version":3,"sources":["webpack:///src/app/edit-tracheostomy-details/edit-tracheostomy-details.page.scss","webpack:///src/app/edit-tracheostomy-details/edit-tracheostomy-details.page.html","webpack:///src/app/services/user-data.service.ts","webpack:///src/app/edit-tracheostomy-details/edit-tracheostomy-details.page.ts"],"names":["Storage","UserDataService","userProfileValue","userProfileKey","userProfileString","medicalRecordValue","medicalRecordKey","get","key","userProfileGet","JSON","parse","value","console","log","set","stringify","medicalRecordGet","providedIn","EditTracheostomyDetailsPage","modalCtrl","fb","userDataService","subtypeList","sizeIDList","shaftLength","type1","type2","type3","type4","subtype5","type5","subtype6","type6","tubeTypes","form","group","tubeType","required","subType","sizeID","suctionLength","scheduleForChange","customize","loadMedicalRecord","Object","keys","controls","forEach","setValue","dismiss","saveMedicalRecord","location","reload","patchValue","selector","template"],"mappings":"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","file":"default~edit-tracheostomy-details-edit-tracheostomy-details-module~tracheostomy-details-tracheostomy~a3467248-es5.js","sourcesContent":["export default \"ion-input:last-child {\\n  text-align: end;\\n}\\n\\nion-input {\\n  color: dodgerblue;\\n}\\n\\nion-select {\\n  max-width: 70%;\\n  padding: 0%;\\n  padding-right: 10px;\\n  color: dodgerblue;\\n}\\n\\nion-label {\\n  padding: 0%;\\n  min-width: 90px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2VkaXQtdHJhY2hlb3N0b215LWRldGFpbHMucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZUFBQTtBQUNKOztBQUVBO0VBQ0ksaUJBQUE7QUFDSjs7QUFFQTtFQUNJLGNBQUE7RUFDQSxXQUFBO0VBQ0EsbUJBQUE7RUFDQSxpQkFBQTtBQUNKOztBQUVBO0VBQ0ksV0FBQTtFQUNBLGVBQUE7QUFDSiIsImZpbGUiOiJlZGl0LXRyYWNoZW9zdG9teS1kZXRhaWxzLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1pbnB1dDpsYXN0LWNoaWxkIHtcbiAgICB0ZXh0LWFsaWduOiBlbmQ7XG59XG5cbmlvbi1pbnB1dCB7XG4gICAgY29sb3I6ZG9kZ2VyYmx1ZTtcbn1cblxuaW9uLXNlbGVjdCB7XG4gICAgbWF4LXdpZHRoOiA3MCU7XG4gICAgcGFkZGluZzogMCU7XG4gICAgcGFkZGluZy1yaWdodDogMTBweDtcbiAgICBjb2xvcjogZG9kZ2VyYmx1ZTtcbn1cblxuaW9uLWxhYmVse1xuICAgIHBhZGRpbmc6IDAlO1xuICAgIG1pbi13aWR0aDogOTBweDtcbn0iXX0= */\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button color=\\\"danger\\\" (click)=\\\"dismiss()\\\">Cancel</ion-button>\\n    </ion-buttons>\\n    <ion-title>Edit</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"save()\\\">Done</ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <form [formGroup]=\\\"form\\\">\\n    <ion-list>\\n      <ion-list-header lines=\\\"full\\\">\\n        <ion-label>\\n          Tracheostomy Details\\n        </ion-label>\\n      </ion-list-header>\\n\\n      <ion-item>\\n        <ion-label>Manual input</ion-label>\\n        <ion-toggle formControlName=\\\"customize\\\" (ionChange)=\\\"toggleCustom()\\\"></ion-toggle>\\n      </ion-item>\\n\\n      <div *ngIf=\\\"!form.value.customize\\\">\\n        <ion-item>\\n          <ion-label>Tube Type: </ion-label>\\n          <ion-select (ionChange)=\\\"selectedTubeType()\\\" formControlName=\\\"tubeType\\\">\\n            <div *ngFor=\\\"let tubetype of tubeTypes | keyvalue\\\">\\n              <!-- <ion-text>{{tubetype.tubeTypeName}}</ion-text> -->\\n              <ion-select-option value=\\\"{{tubetype.key}}\\\">{{tubetype.key}}</ion-select-option>\\n            </div>\\n          </ion-select>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label>Sub Type: </ion-label>\\n          <ion-select (ionChange)=\\\"selectedSubTubeType()\\\" formControlName=\\\"subType\\\">\\n            <div *ngFor=\\\"let subtype of subtypeList | keyvalue\\\">\\n              <!-- <ion-text>{{tubetype.tubeTypeName}}</ion-text> -->\\n              <ion-select-option value=\\\"{{subtype.key}}\\\">{{subtype.key}}</ion-select-option>\\n            </div>\\n          </ion-select>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label>Size - ID (mm): </ion-label>\\n          <ion-select (ionChange)=\\\"selectedSize()\\\" formControlName=\\\"sizeID\\\">\\n            <div *ngFor=\\\"let sizeID of sizeIDList | keyvalue\\\">\\n              <ion-select-option value=\\\"{{sizeID.key}}\\\">{{sizeID.key}}</ion-select-option>\\n            </div>\\n          </ion-select>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label>Shaft Length (mm): </ion-label>\\n          <ion-select formControlName=\\\"shaftLength\\\">\\n            <ng-container>\\n              <ion-select-option value=\\\"{{shaftLength}}\\\">{{shaftLength}}</ion-select-option>\\n            </ng-container>\\n          </ion-select>\\n        </ion-item> \\n      </div>\\n\\n      <div *ngIf=\\\"form.value.customize\\\">\\n        <ion-item>\\n          <ion-label>Tube Type: </ion-label>\\n          <ion-input type=\\\"text\\\" formControlName=\\\"tubeType\\\"></ion-input>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label>Sub Type: </ion-label>\\n          <ion-input type=\\\"text\\\" formControlName=\\\"subType\\\"></ion-input>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label>Size - ID (mm): </ion-label>\\n          <ion-input type=\\\"text\\\" formControlName=\\\"sizeID\\\"></ion-input>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label>Shaft Length (mm): </ion-label>\\n          <ion-input type=\\\"text\\\" formControlName=\\\"shaftLength\\\"></ion-input>\\n        </ion-item>\\n      </div>\\n\\n      <ion-item>\\n        <ion-label>Suction Length (mm): </ion-label>\\n        <ion-input type=\\\"text\\\" formControlName=\\\"suctionLength\\\"></ion-input>\\n      </ion-item>\\n\\n<!--       <ion-item>\\n        <ion-label>Tube Size (mm)</ion-label>\\n        <ion-input placeholder=\\\"Enter size\\\" formControlName=\\\"tubeSize\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label>Tube Type</ion-label>\\n        <ion-input placeholder=\\\"Select Type\\\" (click)=\\\"openPicker()\\\" formControlName=\\\"tubeType\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label>Suction Length (mm)</ion-label>\\n        <ion-input placeholder=\\\"Enter length\\\" formControlName=\\\"suctionLength\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label>Shaft Length (mm)</ion-label>\\n        <ion-input placeholder=\\\"Enter length\\\" formControlName=\\\"shaftLength\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-item lines=\\\"none\\\">\\n        <ion-label>Schedule Date</ion-label>\\n        <ion-datetime placeholder=\\\"Select Date\\\" \\n          display-format=\\\"D MMM YYYY\\\" \\n          picker-format=\\\"D MMM YYYY\\\" \\n          style=\\\"color: dodgerblue;\\\"\\n          formControlName=\\\"scheduleForChange\\\"></ion-datetime>\\n      </ion-item> -->\\n    </ion-list>\\n  </form>\\n</ion-content>\\n\";","import { Injectable } from '@angular/core';\n\nimport { Plugins, Capacitor, } from '@capacitor/core';\n\nconst { Storage } = Plugins;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserDataService {\n\n  public userProfileValue = {};\n  private userProfileKey: string = \"userProfile\";\n  public userProfileString: string = \"\";\n\n  public medicalRecordValue = {};\n  private medicalRecordKey:string = \"medicalRecord\";\n\n  constructor() { }\n\n  async loadUserProfile(){\n    const userProfileGet= await Storage.get({ key: this.userProfileKey });\n    this.userProfileValue = JSON.parse(userProfileGet.value) || {};\n    console.log(\"finished loading\");\n  } //load user profile from storage\n\n  saveUserProfile() {\n    Storage.set({\n      key: this.userProfileKey,\n      value: JSON.stringify(this.userProfileValue),\n    })\n  } //save updated user profile to storage\n\n  async loadMedicalRecord(){\n    const medicalRecordGet= await Storage.get({ key: this.medicalRecordKey });\n    this.medicalRecordValue = JSON.parse(medicalRecordGet.value) || {};\n    console.log(\"finished loading\");\n  } //load medical record from storage\n\n  saveMedicalRecord() {\n    Storage.set({\n      key: this.medicalRecordKey,\n      value: JSON.stringify(this.medicalRecordValue),\n    })\n  } //save new medical record to storage\n\n  convertToString() {\n    this.userProfileString = JSON.stringify(this.userProfileValue);\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { pickerController } from '@ionic/core';\nimport { FormBuilder, FormGroup, FormControl, Validators, ReactiveFormsModule} from '@angular/forms'\nimport { UserDataService } from '../services/user-data.service'; \n\n@Component({\n  selector: 'app-edit-tracheostomy-details',\n  templateUrl: './edit-tracheostomy-details.page.html',\n  styleUrls: ['./edit-tracheostomy-details.page.scss'],\n})\nexport class EditTracheostomyDetailsPage implements OnInit {\n  private form: FormGroup;\n  public subtypeList: Object = {};\n  public sizeIDList: Object =  {};\n  public shaftLength: String = \"\";\n/*   private type = [\n    [\n      'Bivona Uncuffed',\n      'Bivona Fome-Cuf',\n      'Bivona Aire-Cuf',\n      'Bivona TTS cuff',\n      'Bivona Flextend'\n    ],\n    [\n      \"Neo (neonatal)\",\n      \"Ped (paediatric)\",\n      \"Cuffed unfenstrated\",\n      \"Cuffed fenestrated\",\n      \"Uncuffed fenestrated\"\n    ]\n  ]; */\n\n  constructor(\n    private modalCtrl:ModalController,\n    public fb: FormBuilder,\n    public userDataService:UserDataService,\n  ) {\n    this.form = this.fb.group({\n      tubeType: ['', Validators.required],\n      subType: ['', Validators.required],\n      sizeID: ['', Validators.required],\n      shaftLength: ['', Validators.required],\n      suctionLength: ['', Validators.required],\n      scheduleForChange: ['', Validators.required],\n      customize: ['', Validators.required],\n    })\n   }\n\n  async ngOnInit() {\n    await this.userDataService.loadMedicalRecord();\n    Object.keys(this.form.controls).forEach(key => {\n      this.form.get(key).setValue(this.userDataService.medicalRecordValue[key]);\n      if (this.userDataService.medicalRecordValue['customize'] == null){\n        this.form.get('customize').setValue(false);\n      }\n      console.log(key, this.form.get(key).value)\n    });\n    if (this.form.value['customize'] == false) {\n      console.log(this.form.value[\"customize\"]);\n      console.log(this.form.value[\"tubeType\"]);\n      this.subtypeList = this.tubeTypes[this.form.value[\"tubeType\"]];\n      console.log(this.subtypeList);\n      this.sizeIDList = this.subtypeList[this.form.value[\"subType\"]];\n      console.log(this.sizeIDList);\n      this.shaftLength = this.sizeIDList[this.form.value[\"sizeID\"]];\n      console.log(this.shaftLength);\n    }\n  }\n\n  dismiss(){\n    this.modalCtrl.dismiss();\n  }\n\n  save(){\n    Object.keys(this.form.controls).forEach(key => {\n      this.userDataService.medicalRecordValue[key]=this.form.value[key];\n      console.log(key, this.form.get(key).value)\n    });\n    this.userDataService.saveMedicalRecord();\n    this.modalCtrl.dismiss();\n    location.reload();\n  }\n\n  toggleCustom() {\n    this.form.patchValue({\n      tubeType:\"\",\n      subType: \"\",\n      sizeID: \"\",\n      shaftLength:\"\",\n    });\n    console.log(this.form.value['customize']);\n  }\n\n  selectedTubeType() {\n    //console.log(this.tubeTypes[this.form.value.tubeType]);\n    console.log(this.form.value.tubeType);\n    this.subtypeList = this.tubeTypes[this.form.value.tubeType];\n  }\n  selectedSubTubeType(){\n    console.log(this.subtypeList);\n    console.log(this.form.value.subType)\n    this.sizeIDList = this.subtypeList[this.form.value.subType];\n  } \n\n  selectedSize(){\n    this.shaftLength = this.sizeIDList[this.form.value.sizeID];\n  }\n\n  // Bivona Uncuffed, Bivona Fome-Cuf, Bivona Aire-Cuf, Bivona TTS cuff\n  // Bivona Flextend also share the same size\n  public type1 = {\n    /* \"\": {\"\":\"\"}, */\n    \"Neo (neonatal)\":{\n/*       \"2.5\":\"30\",\n      \"3.0\":\"32\",\n      \"3.5\":\"34\", */\n      \"4.0\":\"36\",\n    },\n    \"Ped (paediatric)\": {\n      \"2.5\":\"38\",\n      \"3.0\":\"39\",\n      \"3.5\":\"40\",\n      \"4.0\":\"41\",\n      \"4.5\":\"42\",\n      \"5.0\":\"44\",\n      \"5.5\":\"46\",\n    },\n  }\n  // Bivona Hyperflex\n  public type2 = {\n    /* \"\": {\"\":\"\"}, */\n    \"One Size\": {\n      \"2.5\":\"55\",\n      \"3.0\":\"60\",\n      \"3.5\":\"65\",\n      \"4.0\":\"70\",\n      \"4.5\":\"75\",\n      \"5.0\":\"80\",\n      \"5.5\":\"85\",\n    },\n  }\n\n  //shiley\n  public type3 = {\n    /* \"\": {\"\":\"\"}, */\n    \"Neo (neonatal)\":{\n/*       \"3.0\":\"30\",\n      \"3.5\":\"32\",\n      \"4.0\":\"34\", */\n      \"4.5\":\"36\",\n    },\n    \"Ped (Paediatric)\": {\n      \"3.0\":\"39\",\n      \"3.5\":\"40\",\n      \"4.0\":\"41\",\n      \"4.5\":\"42\",\n      \"5.0\":\"44\",\n      \"5.5\":\"46\",\n    },\n    \"Ped - Long\": {\n      \"5.0\":\"50\",\n      \"5.5\":\"52\",\n      \"6.0\":\"54\",\n      \"6.5\":\"56\",\n    },\n  }\n  //shiley cuffed\n  public type4 = {\n    /* \"\": {\"\":\"\"}, */\n    \"Ped (Paediatric)\": {\n      \"3.0\":\"39\",\n      \"3.5\":\"40\",\n      \"4.0\":\"41\",\n      \"4.5\":\"42\",\n      \"5.0\":\"44\",\n      \"5.5\":\"46\",\n    },\n    \"Ped - Long\": {\n      \"5.0\":\"50\",\n      \"5.5\":\"52\",\n      \"6.0\":\"54\",\n      \"6.5\":\"56\",\n    },\n  }\n\n  //Adul Portex Blue Line Ultra\n  public subtype5 = {\n    \"6.0\":\"64.5\",\n    \"7.0\":\"70\"\n  }\n  public type5 = {\n    \"Cuffed unfenstrated\":this.subtype5,\n    \"Cuffed fenstrated\":this.subtype5,\n    \"Uncuffed fenstrated\":this.subtype5,\n  }\n\n  //Adult Bivona\n  public subtype6 = {\n    \"5.0\":\"60\",\n    \"6.0\":\"70\",\n    \"7.0\":\"80\",\n  }\n  public type6 = {\n    \"Cuffed unfenstrated\":this.subtype6,\n    \"Cuffed fenstrated\":this.subtype6,\n    \"Uncuffed fenstrated\":this.subtype6,\n  }\n  \n  //logic of chain select\n  public tubeTypes = {\n    /* \"\":this.type1, */\n    \"Bivona Uncuffed\": this.type1,\n    \"Bivona Fome-Cuf\": this.type1,\n    \"Bivona Aire-Cuf\": this.type1,\n    \"Bivona TTS cuff\": this.type1,\n    \"Bivona Flextend\": this.type1,\n    \"Bivona Hyperflex\": this.type2,\n    \"Shiley Uncuffed\": this.type3,\n    \"Shiley Cuffed\": this.type4,\n    \"Adult Portex Blue Line Ultra\": this.type5,\n    \"Adult Bivona\": this.type6,\n  }\n\n/*   async openPicker(numColumns = 2, numOptions = 5, columnOptions = this.type){\n    const picker = await pickerController.create({\n      columns: this.getColumns(numColumns, numOptions, columnOptions),\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel'\n        },\n        {\n          text: 'Confirm',\n          handler: (value) => {\n            this.form.controls['tubeType'].setValue(value['col-0']['text']+' '+value['col-1']['text']);\n            console.log(value);\n          }\n        }\n      ]\n    });\n    await picker.present();\n  }\n\n  getColumns(numColumns, numOptions, columnOptions) {\n    let columns = [];\n    for (let i = 0; i < numColumns; i++) {\n      columns.push({\n        name: `col-${i}`,\n        options: this.getColumnOptions(i, numOptions, columnOptions)\n      });\n    }\n    return columns;\n  }\n\n  getColumnOptions(columnIndex, numOptions, columnOptions) {\n    let options = [];\n    for (let i = 0; i < numOptions; i++) {\n      options.push({\n        text: columnOptions[columnIndex][i % numOptions],\n        value: i\n      })\n    }\n    return options;\n  } */\n\n}\n"]}