{"version":3,"sources":["./src/app/edit-tracheostomy-details/edit-tracheostomy-details.page.scss","./node_modules/@ionic/core/dist/esm/button-active-a6787d69.js","./src/app/edit-pathology/edit-pathology.page.scss","./node_modules/@ionic/core/dist/esm/theme-ff3fc52f.js","./src/app/edit-tracheostomy-details/edit-tracheostomy-details.page.html","./src/app/edit-operative-history/edit-operative-history.page.ts","./src/app/services/user-data.service.ts","./src/app/edit-pathology/edit-pathology.page.html","./src/app/services/appointment.service.ts","./src/app/edit-tracheostomy-details/edit-tracheostomy-details.page.ts","./node_modules/@ionic/core/dist/esm/framework-delegate-4584ab5a.js","./node_modules/@ionic/core/dist/esm/spinner-configs-cd7845af.js","./node_modules/@ionic/core/dist/esm/haptic-27b3f981.js","./src/app/edit-pathology/edit-pathology.page.ts","./src/app/edit-operative-history/edit-operative-history.page.scss","./src/app/edit-operative-history/edit-operative-history.page.html"],"names":[],"mappings":"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CAAgC,mBAAmB;AACnD;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,kCAAkC,sCAAsC;AACxE,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,kCAAkC,sCAAsC;AACxE,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEyB;;;;;;;;;;;;;AC7GzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,QAAQ;AACjC,GAAG;AACH;AACA,iBAAiB,iBAAiB;AAClC,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;;AAEoI;;;;;;;;;;;;;;;;;;;;;;;ACzG3E;AACR;IAOpC,iBAAiB,SAAjB,iBAAiB;IAG5B,YAAoB,SAAyB;QAAzB,cAAS,GAAT,SAAS,CAAgB;IAAI,CAAC;IAElD,QAAQ;IACR,CAAC;IAED,OAAO;QACL,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;IAED,IAAI;QACF,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;CAEF;;YAvBQ,8DAAe;;;sBAQrB,mDAAK;;AADK,iBAAiB;IAL7B,+DAAS,CAAC;QACT,QAAQ,EAAE,oBAAoB;QAC9B,sFAAyC;;KAE1C,CAAC;GACW,iBAAiB,CAgB7B;AAhB6B;;;;;;;;;;;;;ACR9B;AAAe,6GAA8C,uIAAuI,E;;;;;;;;;;;;ACApM;AAAe,o7BAAq3B,E","file":"common-es2015.js","sourcesContent":["export default \"ion-input:last-child {\\n  text-align: end;\\n}\\n\\nion-input {\\n  color: dodgerblue;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2VkaXQtdHJhY2hlb3N0b215LWRldGFpbHMucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZUFBQTtBQUNKOztBQUVBO0VBQ0ksaUJBQUE7QUFDSiIsImZpbGUiOiJlZGl0LXRyYWNoZW9zdG9teS1kZXRhaWxzLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1pbnB1dDpsYXN0LWNoaWxkIHtcbiAgICB0ZXh0LWFsaWduOiBlbmQ7XG59XG5cbmlvbi1pbnB1dCB7XG4gICAgY29sb3I6ZG9kZ2VyYmx1ZTtcbn0iXX0= */\";","import { c as writeTask } from './index-e806d1f6.js';\nimport { createGesture } from './index-f49d994d.js';\nimport { h as hapticSelectionEnd, a as hapticSelectionStart, b as hapticSelectionChanged } from './haptic-27b3f981.js';\n\nconst createButtonActiveGesture = (el, isButton) => {\n  let currentTouchedButton;\n  let initialTouchedButton;\n  const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\n    if (typeof document === 'undefined') {\n      return;\n    }\n    const target = document.elementFromPoint(x, y);\n    if (!target || !isButton(target)) {\n      clearActiveButton();\n      return;\n    }\n    if (target !== currentTouchedButton) {\n      clearActiveButton();\n      setActiveButton(target, hapticFeedbackFn);\n    }\n  };\n  const setActiveButton = (button, hapticFeedbackFn) => {\n    currentTouchedButton = button;\n    if (!initialTouchedButton) {\n      initialTouchedButton = currentTouchedButton;\n    }\n    const buttonToModify = currentTouchedButton;\n    writeTask(() => buttonToModify.classList.add('ion-activated'));\n    hapticFeedbackFn();\n  };\n  const clearActiveButton = (dispatchClick = false) => {\n    if (!currentTouchedButton) {\n      return;\n    }\n    const buttonToModify = currentTouchedButton;\n    writeTask(() => buttonToModify.classList.remove('ion-activated'));\n    /**\n     * Clicking on one button, but releasing on another button\n     * does not dispatch a click event in browsers, so we\n     * need to do it manually here. Some browsers will\n     * dispatch a click if clicking on one button, dragging over\n     * another button, and releasing on the original button. In that\n     * case, we need to make sure we do not cause a double click there.\n     */\n    if (dispatchClick && initialTouchedButton !== currentTouchedButton) {\n      currentTouchedButton.click();\n    }\n    currentTouchedButton = undefined;\n  };\n  return createGesture({\n    el,\n    gestureName: 'buttonActiveDrag',\n    threshold: 0,\n    onStart: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart),\n    onMove: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged),\n    onEnd: () => {\n      clearActiveButton(true);\n      hapticSelectionEnd();\n      initialTouchedButton = undefined;\n    }\n  });\n};\n\nexport { createButtonActiveGesture as c };\n","export default \"ion-item {\\n  margin-top: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2VkaXQtcGF0aG9sb2d5LnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGVBQUE7QUFDSiIsImZpbGUiOiJlZGl0LXBhdGhvbG9neS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24taXRlbXtcbiAgICBtYXJnaW4tdG9wOiA1cHg7XG59Il19 */\";","const hostContext = (selector, el) => {\n  return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n  return (typeof color === 'string' && color.length > 0) ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n  if (classes !== undefined) {\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array\n      .filter(c => c != null)\n      .map(c => c.trim())\n      .filter(c => c !== '');\n  }\n  return [];\n};\nconst getClassMap = (classes) => {\n  const map = {};\n  getClassList(classes).forEach(c => map[c] = true);\n  return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n  if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n    const router = document.querySelector('ion-router');\n    if (router) {\n      if (ev != null) {\n        ev.preventDefault();\n      }\n      return router.push(url, direction, animation);\n    }\n  }\n  return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button (click)=\\\"dismiss()\\\">Cancel</ion-button>\\n    </ion-buttons>\\n    <ion-title>Edit</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"save()\\\">Done</ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list>\\n    <ion-list-header lines=\\\"full\\\">\\n      <ion-label>\\n        Tracheostomy Details\\n      </ion-label>\\n    </ion-list-header>\\n\\n    <ion-item>\\n      <ion-label>Tube Size (mm)</ion-label>\\n      <ion-input placeholder=\\\"Enter size\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label>Tube Type</ion-label>\\n      <ion-input placeholder=\\\"Select Type\\\" (click)=\\\"openPicker()\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label>Suction Length (mm)</ion-label>\\n      <ion-input placeholder=\\\"Enter length\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item lines=\\\"none\\\">\\n      <ion-label>Schedule Date</ion-label>\\n      <ion-datetime placeholder=\\\"Select Date\\\" \\n        display-format=\\\"D MMM YYYY\\\" \\n        picker-format=\\\"D MMM YYYY\\\" \\n        style=\\\"color: dodgerblue;\\\"></ion-datetime>\\n    </ion-item>\\n\\n\\n  </ion-list>\\n</ion-content>\\n\";","import { Component, OnInit, Input } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-edit-operative-history',\n  templateUrl: './edit-operative-history.page.html',\n  styleUrls: ['./edit-operative-history.page.scss'],\n})\nexport class EditOperativeHistoryPage implements OnInit {\n\n  constructor(private modalCtrl:ModalController) { }\n\n  ngOnInit() {\n  }\n\n  dismiss(){\n    this.modalCtrl.dismiss();\n  }\n\n  save(){\n    this.modalCtrl.dismiss();\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Plugins, Capacitor, } from '@capacitor/core';\n\nconst { Storage } = Plugins;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserDataService {\n\n  public userProfileValue = {};\n  private userProfileKey: string = \"userProfile\";\n  public userProfileString: string = \"\";\n\n  public medicalRecordValue = {};\n  private medicalRecordKey:string = \"medicalRecord\";\n\n  constructor() { }\n\n  async loadUserProfile(){\n    const userProfileGet= await Storage.get({ key: this.userProfileKey });\n    this.userProfileValue = JSON.parse(userProfileGet.value) || {};\n    console.log(\"finished loading\");\n  } //load user profile from storage\n\n  saveUserProfile() {\n    Storage.set({\n      key: this.userProfileKey,\n      value: JSON.stringify(this.userProfileValue),\n    })\n  } //save updated user profile to storage\n\n  async loadMedicalRecord(){\n    const medicalRecordGet= await Storage.get({ key: this.medicalRecordKey });\n    this.medicalRecordValue = JSON.parse(medicalRecordGet.value) || {};\n    console.log(\"finished loading\");\n  } //load medical record from storage\n\n  saveMedicalRecord() {\n    Storage.set({\n      key: this.userProfileKey,\n      value: JSON.stringify(this.medicalRecordValue),\n    })\n  } //save new medical record to storage\n\n  convertToString() {\n    this.userProfileString = JSON.stringify(this.userProfileValue);\n  }\n}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button (click)=\\\"dismiss()\\\">Cancel</ion-button>\\n    </ion-buttons>\\n    <ion-title>Edit</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"save()\\\">Done</ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list>\\n    <ion-list-header lines=\\\"full\\\">\\n      <ion-label>\\n        Pathology\\n      </ion-label>\\n    </ion-list-header>\\n\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\">Reason for Tracheostomy</ion-label>\\n      <ion-textarea rows=\\\"6\\\" placeholder=\\\"Enter the reason\\\"></ion-textarea>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\">Upper Airway Condition</ion-label>\\n      <ion-textarea rows=\\\"6\\\" placeholder=\\\"Enter condition\\\"></ion-textarea>\\n    </ion-item>\\n\\n    <ion-item lines=\\\"none\\\">\\n      <ion-label position=\\\"stacked\\\">Other Medical Conditions</ion-label>\\n      <ion-textarea rows=\\\"6\\\" placeholder=\\\"Enter conditions\\\"></ion-textarea>\\n    </ion-item>\\n  </ion-list>\\n</ion-content>\\n\";","import { Injectable } from '@angular/core';\n\nimport { LocalNotification, LocalNotificationPendingList, Plugins, } from '@capacitor/core';\n\nconst { Storage, LocalNotifications } = Plugins;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppointmentService {\n\n  public appiontment = {};\n  //set the strage key for photos can be changed\n  private APPOINTMENT_STORAGE: string = \"appointment\";\n\n  constructor() { }\n\n  public async loadAppointment(){\n    // create a promise that load the data from database\n    const appiontmentJSON = await Storage.get({ key: this.APPOINTMENT_STORAGE });\n    // set the current session value using data from DB, if it doesn't exist it wll initialize a empty array\n    this.appiontment = JSON.parse(appiontmentJSON.value) || {};\n    console.log(\"finished loading\");\n  }\n\n  public async saveValue() {\n    // console.log(\"setting data\")\n    // convert to strig\n    const JSONString = JSON.stringify(this.appiontment);\n    // store the value in to the pair\n    Storage.set({\n      key: this.APPOINTMENT_STORAGE,\n      value: JSONString\n    })\n  }\n\n  public async setReminder(appointmentTimeStr, appointmentDateStr,reminderTime, doctor, location) {\n    var notificationTitle = \"Appointment at \" + appointmentTimeStr + ' on ' + appointmentDateStr;\n    var notificationText  = \"You have an appointment at \" + appointmentTimeStr + ' on ' + appointmentDateStr + \" with Dr. \" + doctor + \" at \" + location;\n    //const pendingList : LocalNotificationPendingList = await LocalNotifications.getPending();\n    //const clear = await LocalNotifications.cancel(pendingList);\n    //console.log(\"cleared all previous\", clear)\n    await LocalNotifications.schedule({\n      notifications:[\n        {\n          id: 1,\n          title: notificationTitle,\n          body: notificationText,\n          schedule: {at: new Date(reminderTime)},\n        }\n      ]\n    })\n    console.log(\"reminder set\");\n    const pendingList : LocalNotificationPendingList = await LocalNotifications.getPending();\n    console.log(pendingList);\n  }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { pickerController } from '@ionic/core'\n\n@Component({\n  selector: 'app-edit-tracheostomy-details',\n  templateUrl: './edit-tracheostomy-details.page.html',\n  styleUrls: ['./edit-tracheostomy-details.page.scss'],\n})\nexport class EditTracheostomyDetailsPage implements OnInit {\n  private type = [\n    [\n      'Bivona Uncuffed',\n      'Bivona Fome-Cuf',\n      'Bivona Aire-Cuf',\n      'Bivona TTS cuff',\n      'Bivona Flextend'\n    ],\n    [\n      \"Neo (neonatal)\",\n      \"Ped (paediatric)\",\n      \"Cuffed unfenstrated\",\n      \"Cuffed fenestrated\",\n      \"Uncuffed fenestrated\"\n    ]\n  ];\n\n  constructor(private modalCtrl:ModalController) { }\n\n  ngOnInit() {\n  }\n\n  dismiss(){\n    this.modalCtrl.dismiss();\n  }\n\n  save(){\n    this.modalCtrl.dismiss();\n  }\n\n  async openPicker(numColumns = 2, numOptions = 5, columnOptions = this.type){\n    const picker = await pickerController.create({\n      columns: this.getColumns(numColumns, numOptions, columnOptions),\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel'\n        },\n        {\n          text: 'Confirm',\n          handler: (value) => {\n            console.log(value);\n          }\n        }\n      ]\n    });\n    await picker.present();\n  }\n\n  getColumns(numColumns, numOptions, columnOptions) {\n    let columns = [];\n    for (let i = 0; i < numColumns; i++) {\n      columns.push({\n        name: `col-${i}`,\n        options: this.getColumnOptions(i, numOptions, columnOptions)\n      });\n    }\n    return columns;\n  }\n\n  getColumnOptions(columnIndex, numOptions, columnOptions) {\n    let options = [];\n    for (let i = 0; i < numOptions; i++) {\n      options.push({\n        text: columnOptions[columnIndex][i % numOptions],\n        value: i\n      })\n    }\n    return options;\n  }\n\n}\n","const attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n  if (delegate) {\n    return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n  }\n  if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n    throw new Error('framework delegate is missing');\n  }\n  const el = (typeof component === 'string')\n    ? container.ownerDocument && container.ownerDocument.createElement(component)\n    : component;\n  if (cssClasses) {\n    cssClasses.forEach(c => el.classList.add(c));\n  }\n  if (componentProps) {\n    Object.assign(el, componentProps);\n  }\n  container.appendChild(el);\n  if (el.componentOnReady) {\n    await el.componentOnReady();\n  }\n  return el;\n};\nconst detachComponent = (delegate, element) => {\n  if (element) {\n    if (delegate) {\n      const container = element.parentElement;\n      return delegate.removeViewFromDom(container, element);\n    }\n    element.remove();\n  }\n  return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","const spinners = {\n  'bubbles': {\n    dur: 1000,\n    circles: 9,\n    fn: (dur, index, total) => {\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      const angle = 2 * Math.PI * index / total;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circles': {\n    dur: 1000,\n    circles: 8,\n    fn: (dur, index, total) => {\n      const step = index / total;\n      const animationDelay = `${(dur * step) - dur}ms`;\n      const angle = 2 * Math.PI * step;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circular': {\n    dur: 1400,\n    elmDuration: true,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 20,\n        cx: 48,\n        cy: 48,\n        fill: 'none',\n        viewBox: '24 24 48 48',\n        transform: 'translate(0,0)',\n        style: {}\n      };\n    }\n  },\n  'crescent': {\n    dur: 750,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 26,\n        style: {}\n      };\n    }\n  },\n  'dots': {\n    dur: 750,\n    circles: 3,\n    fn: (_, index) => {\n      const animationDelay = -(110 * index) + 'ms';\n      return {\n        r: 6,\n        style: {\n          'left': `${9 - (9 * index)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 17,\n        y2: 29,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines-small': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 12,\n        y2: 20,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","const HapticEngine = {\n  getEngine() {\n    const win = window;\n    return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n  },\n  available() {\n    return !!this.getEngine();\n  },\n  isCordova() {\n    return !!window.TapticEngine;\n  },\n  isCapacitor() {\n    const win = window;\n    return !!win.Capacitor;\n  },\n  impact(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.impact({ style });\n  },\n  notification(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.notification({ style });\n  },\n  selection() {\n    this.impact({ style: 'light' });\n  },\n  selectionStart() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionStart();\n    }\n    else {\n      engine.gestureSelectionStart();\n    }\n  },\n  selectionChanged() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionChanged();\n    }\n    else {\n      engine.gestureSelectionChanged();\n    }\n  },\n  selectionEnd() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionEnd();\n    }\n    else {\n      engine.gestureSelectionEnd();\n    }\n  }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n  HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n  HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n  HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n  HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n  HapticEngine.impact(options);\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-edit-pathology',\n  templateUrl: './edit-pathology.page.html',\n  styleUrls: ['./edit-pathology.page.scss'],\n})\nexport class EditPathologyPage implements OnInit {\n  @Input()isModal: boolean;\n\n  constructor(private modalCtrl:ModalController) { }\n\n  ngOnInit() {\n  }\n\n  dismiss(){\n    this.modalCtrl.dismiss();\n  }\n\n  save(){\n    this.modalCtrl.dismiss();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJlZGl0LW9wZXJhdGl2ZS1oaXN0b3J5LnBhZ2Uuc2NzcyJ9 */\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button (click)=\\\"dismiss()\\\">Cancel</ion-button>\\n    </ion-buttons>\\n    <ion-title>Add New Record</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"save()\\\">Done</ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list>\\n    <ion-list-header lines=\\\"full\\\">\\n      <ion-label>\\n        Operative History\\n      </ion-label>\\n    </ion-list-header>\\n\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\">Details of Surgery</ion-label>\\n      <ion-textarea rows=\\\"6\\\" placeholder=\\\"Enter details\\\"></ion-textarea>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\">Results of MLBs</ion-label>\\n      <ion-textarea rows=\\\"6\\\" placeholder=\\\"Enter results\\\"></ion-textarea>\\n    </ion-item>\\n  </ion-list>\\n</ion-content>\\n\";"],"sourceRoot":"webpack:///"}