{"version":3,"sources":["webpack:///src/app/edit-patient-info/edit-patient-info.page.scss","webpack:///src/app/services/user-data.service.ts","webpack:///src/app/edit-patient-info/edit-patient-info.page.ts","webpack:///src/app/edit-patient-info/edit-patient-info.page.html"],"names":["Storage","UserDataService","userProfileValue","userProfileKey","userProfileString","medicalRecordValue","medicalRecordKey","get","key","userProfileGet","JSON","parse","value","console","log","set","stringify","medicalRecordGet","providedIn","EditPatientInfoPage","userDataService","loginService","fb","router","modalCtrl","relationOptions","sexOptions","form","group","firstName","required","lastName","birthDate","sex","nhsNumber","relation1","r1Name","relation2","r2Name","consultant","trust","emergencyContact","loadUserProfile","Object","keys","controls","forEach","setValue","numColumns","numOptions","columnOptions","create","columns","getColumns","buttons","text","role","handler","picker","present","i","push","name","options","getColumnOptions","columnIndex","saveUserProfile","dismiss","location","reload","selector","template"],"mappings":"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","file":"default~edit-patient-info-edit-patient-info-module~patient-info-patient-info-module-es5.js","sourcesContent":["export default \"ion-input:last-child {\\n  text-align: end;\\n}\\n\\nion-input {\\n  color: dodgerblue;\\n}\\n\\nion-icon {\\n  position: relative;\\n  left: -15%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2VkaXQtcGF0aWVudC1pbmZvLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGVBQUE7QUFDSjs7QUFFQTtFQUNJLGlCQUFBO0FBQ0o7O0FBRUE7RUFDSSxrQkFBQTtFQUNBLFVBQUE7QUFDSiIsImZpbGUiOiJlZGl0LXBhdGllbnQtaW5mby5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24taW5wdXQ6bGFzdC1jaGlsZCB7XG4gICAgdGV4dC1hbGlnbjogZW5kO1xufVxuXG5pb24taW5wdXQge1xuICAgIGNvbG9yOmRvZGdlcmJsdWU7XG59XG5cbmlvbi1pY29uIHtcbiAgICBwb3NpdGlvbjpyZWxhdGl2ZTtcbiAgICBsZWZ0OiAtMTUlO1xufVxuIl19 */\";","import { Injectable } from '@angular/core';\n\nimport { Plugins, Capacitor, } from '@capacitor/core';\n\nconst { Storage } = Plugins;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserDataService {\n\n  public userProfileValue = {};\n  private userProfileKey: string = \"userProfile\";\n  public userProfileString: string = \"\";\n\n  public medicalRecordValue = {};\n  private medicalRecordKey:string = \"medicalRecord\";\n\n  constructor() { }\n\n  async loadUserProfile(){\n    const userProfileGet= await Storage.get({ key: this.userProfileKey });\n    this.userProfileValue = JSON.parse(userProfileGet.value) || {};\n    console.log(\"finished loading\");\n  } //load user profile from storage\n\n  saveUserProfile() {\n    Storage.set({\n      key: this.userProfileKey,\n      value: JSON.stringify(this.userProfileValue),\n    })\n  } //save updated user profile to storage\n\n  async loadMedicalRecord(){\n    const medicalRecordGet= await Storage.get({ key: this.medicalRecordKey });\n    this.medicalRecordValue = JSON.parse(medicalRecordGet.value) || {};\n    console.log(\"finished loading\");\n  } //load medical record from storage\n\n  saveMedicalRecord() {\n    Storage.set({\n      key: this.medicalRecordKey,\n      value: JSON.stringify(this.medicalRecordValue),\n    })\n  } //save new medical record to storage\n\n  convertToString() {\n    this.userProfileString = JSON.stringify(this.userProfileValue);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { UserDataService } from '../services/user-data.service'; \nimport { LoginService } from '../services/login.service'; \nimport { FormBuilder, FormGroup, FormControl, Validators, ReactiveFormsModule} from '@angular/forms'\nimport { Router} from '@angular/router'\nimport { pickerController } from '@ionic/core'\nimport { ModalController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-edit-patient-info',\n  templateUrl: './edit-patient-info.page.html',\n  styleUrls: ['./edit-patient-info.page.scss'],\n})\nexport class EditPatientInfoPage implements OnInit {\n  public form: FormGroup;\n  private relationOptions = [\n    [\n      'Mother',\n      'Father',\n      'Grandparent',\n      'Care Worker',\n      'Other'\n    ]\n  ];\n  private sexOptions = [\n    [\n      'Male',\n      'Female',\n      'Other'\n    ]\n  ];\n\n  constructor(\n    public userDataService: UserDataService, \n    public loginService: LoginService,\n    public fb: FormBuilder,\n    public router: Router,\n    private modalCtrl:ModalController\n  ) { \n    this.form = this.fb.group({\n      firstName:['', Validators.required],\n      lastName: ['', Validators.required],\n      birthDate: ['', Validators.required],\n      sex: ['', Validators.required],\n      nhsNumber: ['', Validators.required],\n      relation1: ['', Validators.required],\n      r1Name: ['', Validators.required],\n      relation2: ['', Validators.required],\n      r2Name: ['', Validators.required],\n      consultant:['', Validators.required],\n      trust: ['', Validators.required],\n      emergencyContact: ['', Validators.required],\n    }); //need more validate later\n  }\n\n  async ngOnInit() {\n    await this.userDataService.loadUserProfile();\n    Object.keys(this.form.controls).forEach(key => {\n      this.form.get(key).setValue(this.userDataService.userProfileValue[key]);\n      console.log(key, this.form.get(key).value)\n    });\n  }\n\n//picker for relations\n  async openPicker1(numColumns = 1, numOptions = 5, columnOptions = this.relationOptions){\n    const picker = await pickerController.create({\n      columns: this.getColumns(numColumns, numOptions, columnOptions),\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel'\n        },\n        {\n          text: 'Confirm',\n          handler: (value) => {\n            console.log(value);\n            this.form.controls['relation1'].setValue(value['col-0']['text']);\n          }\n        }\n      ]\n    });\n    await picker.present();\n  }\n\n  async openPicker2(numColumns = 1, numOptions = 5, columnOptions = this.relationOptions){\n    const picker = await pickerController.create({\n      columns: this.getColumns(numColumns, numOptions, columnOptions),\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel'\n        },\n        {\n          text: 'Confirm',\n          handler: (value) => {\n            console.log(value);\n            this.form.controls['relation2'].setValue(value['col-0']['text']);\n          }\n        }\n      ]\n    });\n    await picker.present();\n  }\n\n  async openPickerSex(numColumns = 1, numOptions = 3, columnOptions = this.sexOptions){\n    const picker = await pickerController.create({\n      columns: this.getColumns(numColumns, numOptions, columnOptions),\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel'\n        },\n        {\n          text: 'Confirm',\n          handler: (value) => {\n            console.log(value);\n            this.form.controls['sex'].setValue(value['col-0']['text']);\n          }\n        }\n      ]\n    });\n    await picker.present();\n  }\n\n  getColumns(numColumns, numOptions, columnOptions) {\n    let columns = [];\n    for (let i = 0; i < numColumns; i++) {\n      columns.push({\n        name: `col-${i}`,\n        options: this.getColumnOptions(i, numOptions, columnOptions)\n      });\n    }\n    return columns;\n  }\n\n  getColumnOptions(columnIndex, numOptions, columnOptions) {\n    let options = [];\n    for (let i = 0; i < numOptions; i++) {\n      options.push({\n        text: columnOptions[columnIndex][i % numOptions],\n        value: i\n      })\n    }\n    return options;\n  }\n\n  save() {\n    Object.keys(this.form.controls).forEach(key => {\n      this.userDataService.userProfileValue[key]=this.form.value[key];\n      console.log(key, this.form.get(key).value)\n    });\n    this.userDataService.saveUserProfile();\n    this.modalCtrl.dismiss();\n    location.reload();\n  }\n\n  dismiss(){\n    this.modalCtrl.dismiss();\n  }\n}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button color=\\\"danger\\\" (click)=\\\"dismiss()\\\">Cancel</ion-button>\\n    </ion-buttons>\\n    <ion-title style=\\\"padding: 0px 80px;\\\">Patient Information</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"save()\\\">Done</ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <div style=\\\"\\n  display: flex; \\n  justify-content: center;\\n  padding-top: 8%;\\n  padding-bottom: 0%;\\\">\\n    <ion-img \\n    style=\\\"width: 80px; height: 80px;\\\" \\n    src=\\\"assets/icon/icon.png\\\"></ion-img>\\n  </div>\\n\\n  <div>\\n  <form [formGroup]=\\\"form\\\">\\n    <ion-list class=\\\"ion-no-margin\\\">\\n      <ion-list-header lines=\\\"full\\\">\\n        <ion-label>\\n          Patient Details\\n        </ion-label>\\n      </ion-list-header>\\n\\n      <ion-item>\\n        <ion-label>First Name</ion-label>\\n        <ion-input placeholder=\\\"Not Set\\\" formControlName=\\\"firstName\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label>Last Name</ion-label>\\n        <ion-input placeholder=\\\"Not Set\\\" formControlName=\\\"lastName\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label>Date of Birth</ion-label>\\n        <ion-datetime placeholder=\\\"Select Date\\\"\\n        display-format=\\\"D MMM YYYY\\\" \\n        picker-format=\\\"D MMM YYYY\\\" \\n        formControlName=\\\"birthDate\\\" \\n        style=\\\"color: dodgerblue;\\\"></ion-datetime>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label>Sex</ion-label>\\n        <ion-input placeholder=\\\"Not Set\\\" formControlName=\\\"sex\\\" (click)=\\\"openPickerSex()\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label>NHS Number</ion-label>\\n        <ion-input placeholder=\\\"Not Set\\\" formControlName=\\\"nhsNumber\\\"></ion-input>\\n      </ion-item>\\n    </ion-list>\\n\\n    <ion-list class=\\\"ion-no-margin\\\">\\n      <ion-list-header lines=\\\"full\\\">\\n        <ion-label>\\n          Caregiver\\n        </ion-label>\\n      </ion-list-header>\\n\\n      <ion-item>\\n        <ion-input placeholder=\\\"Relationship\\\" formControlName=\\\"relation1\\\" (click)=\\\"openPicker1()\\\"></ion-input>\\n        <ion-icon name=\\\"chevron-forward-outline\\\"></ion-icon>\\n        <ion-input placeholder=\\\"Not Set\\\" formControlName=\\\"r1Name\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-input placeholder=\\\"Relationship\\\" formControlName=\\\"relation2\\\" (click)=\\\"openPicker2()\\\"></ion-input>\\n        <ion-icon name=\\\"chevron-forward-outline\\\"></ion-icon>\\n        <ion-input placeholder=\\\"Not Set\\\" formControlName=\\\"r2Name\\\"></ion-input>\\n      </ion-item>\\n    </ion-list>\\n\\n    <ion-list class=\\\"ion-no-margin\\\">\\n      <ion-list-header lines=\\\"full\\\">\\n        <ion-label>\\n          Hospital Details\\n        </ion-label>\\n      </ion-list-header>\\n\\n      <ion-item>\\n        <ion-label>Consultant</ion-label>\\n        <ion-input placeholder=\\\"Not Set\\\" formControlName=\\\"consultant\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label>Trust</ion-label>\\n        <ion-input placeholder=\\\"Not Set\\\" formControlName=\\\"trust\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label>Emergency Contact</ion-label>\\n        <ion-input placeholder=\\\"Not Set\\\" formControlName=\\\"emergencyContact\\\"></ion-input>\\n      </ion-item>\\n\\n<!--       <ion-button \\n      style=\\\"margin-top: 10%; margin-bottom: 10%; width: 85%; margin-left: auto; margin-right: auto;\\\" \\n      color=\\\"danger\\\" \\n      expand=\\\"block\\\" \\n      type=\\\"submit\\\">\\n        Update\\n      </ion-button> -->\\n    </ion-list>\\n  </form>\\n  <div style=\\\"height: 35px;\\\"></div>\\n  </div>\\n\\n\\n</ion-content>\\n\";"]}