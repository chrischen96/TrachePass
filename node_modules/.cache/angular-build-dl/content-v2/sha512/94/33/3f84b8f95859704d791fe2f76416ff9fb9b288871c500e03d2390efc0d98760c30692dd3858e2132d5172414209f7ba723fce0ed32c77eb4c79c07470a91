{"version":3,"sources":["webpack:///src/app/services/photo.service.ts","webpack:///src/app/photo-record/photo-record.page.html","webpack:///src/app/photo-record/photo-record.page.ts","webpack:///src/app/photo-record/photo-record-routing.module.ts","webpack:///src/app/photo-record/photo-record.page.scss","webpack:///src/app/photo-record/photo-record.module.ts"],"names":["Camera","Filesystem","Storage","PhotoService","platform","photos","PHOTO_STORAGE","convertBlobToBase64","blob","Promise","resolve","reject","reader","FileReader","onerror","onload","result","readAsDataURL","get","key","photoList","JSON","parse","value","is","photo","readFile","path","filepath","directory","Data","webviewPath","data","deleteFile","splice","length","set","stringify","console","log","index","getPhoto","resultType","Uri","source","quality","capturedPhoto","savePicture","savedImageFile","unshift","cameraPhoto","readAsBase64","base64Data","fileName","Date","getTime","writeFile","savedFile","uri","convertFileSrc","webPath","file","fetch","response","providedIn","PhotoRecordPage","photoService","alertController","modalController","editmode","loadSaved","addNewToGallery","reset","removePhoto","create","header","message","buttons","text","role","cssClass","handler","blah","removePhotoFromGallery","alert","present","resetGallery","srcPath","component","componentProps","src","keyboardClose","showBackdrop","modal","selector","template","routes","PhotoRecordPageRoutingModule","imports","forChild","exports","PhotoRecordPageModule","declarations"],"mappings":"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","file":"photo-record-photo-record-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Platform } from '@ionic/angular';\n\nimport { Plugins, CameraResultType, Capacitor, FilesystemDirectory, CameraPhoto, CameraSource } from '@capacitor/core';\n\nconst { Camera, Filesystem, Storage } = Plugins;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PhotoService {\n  //initiate array for storing photo webpath\n  public photos: Photo[] = [];\n  //set the strage key for photos can be changed\n  private PHOTO_STORAGE: string = \"photos\";\n  //setting platform\n  private platform: Platform;\n\n  constructor(platform: Platform) {\n    this.platform = platform;\n  }\n\n  //loading photo\n  public async loadSaved() {\n    // Retrieve cached photo array data\n    const photoList = await Storage.get({ key: this.PHOTO_STORAGE });\n    this.photos = JSON.parse(photoList.value) || [];\n\n    // Easiest way to detect when running on the web:\n    // “when the platform is NOT hybrid, do this”\n    if (!this.platform.is('hybrid')) {\n      // Display the photo by reading into base64 format\n      for (let photo of this.photos) {\n        // Read each saved photo's data from the Filesystem\n        const readFile = await Filesystem.readFile({\n            path: photo.filepath,\n            directory: FilesystemDirectory.Data\n        });\n\n        // Web platform only: Load the photo as base64 data\n        photo.webviewPath = `data:image/jpeg;base64,${readFile.data}`;\n      }\n    }\n  }\n\n  //reset\n  public reset(){\n\n    for (let photo of this.photos) {\n      // Read each saved photo's data from the Filesystem\n      const deleteFile = Filesystem.deleteFile({\n          path: photo.filepath,\n          directory: FilesystemDirectory.Data\n      });\n    }\n    //emptying photo array\n    this.photos.splice(0, this.photos.length);\n    Storage.set({\n      key: this.PHOTO_STORAGE,\n      value: JSON.stringify(this.photos)\n    });\n    console.log(this.photos);\n    console.log(\"done deleting all\");\n  }\n\n  //removing photoN\n  public removePhoto(index) {\n    // remove from file system\n    console.log(\"before\");\n    console.log(this.photos);\n    Filesystem.deleteFile({\n      path: this.photos[index].filepath,\n      directory: FilesystemDirectory.Data\n    });\n    console.log(\"deleted\");\n    console.log(this.photos[index].filepath);\n    console.log(\"editing array\");\n    this.photos.splice(index, 1);\n    Storage.set({\n      key: this.PHOTO_STORAGE,\n      value: JSON.stringify(this.photos)\n    });\n    console.log(\"after\");\n    console.log(this.photos);\n  }\n\n  //edited\n  public async addNewToGallery() {\n    // Take a photo\n    const capturedPhoto = await Camera.getPhoto({\n      resultType: CameraResultType.Uri,\n      source: CameraSource.Camera,\n      quality: 100\n    });\n/*     //adding the path to photo array\n    this.photos.unshift({\n      filepath: \"soon...\",\n      webviewPath: capturedPhoto.webPath\n    }); */\n\n    // Save the picture and add it to photo collection (array pointing it to the file lo)\n    const savedImageFile = await this.savePicture(capturedPhoto);\n    this.photos.unshift(savedImageFile);\n    console.log(\"New Phoo array\");\n    console.log(JSON.stringify(this.photos))\n\n    //str\n    Storage.set({\n      key: this.PHOTO_STORAGE,\n      value: JSON.stringify(this.photos)\n    });\n  }\n\n  //function to save photo\n  private async savePicture(cameraPhoto: CameraPhoto) {\n\n    const base64Data = await this.readAsBase64(cameraPhoto);\n\n    // Write the file to the data directory\n    const fileName = new Date().getTime() + '.jpeg';\n    const savedFile = await Filesystem.writeFile({\n      path: fileName,\n      data: base64Data,\n      directory: FilesystemDirectory.Data\n    });\n    if (this.platform.is('hybrid')) {\n      // Display the new image by rewriting the 'file://' path to HTTP\n      // Details: https://ionicframework.com/docs/building/webview#file-protocol\n      return {\n        filepath: savedFile.uri,\n        webviewPath: Capacitor.convertFileSrc(savedFile.uri),\n      };\n    }\n    else {\n      // Use webPath to display the new image instead of base64 since it's\n      // already loaded into memory\n      return {\n        filepath: fileName,\n        webviewPath: cameraPhoto.webPath\n      };\n    }\n  }\n  //reading as base 64\n  private async readAsBase64(cameraPhoto: CameraPhoto) {\n    if (this.platform.is('hybrid')) {\n      // Read the file into base64 format\n      const file = await Filesystem.readFile({\n        path: cameraPhoto.path\n      });\n\n      return file.data;\n    }\n    else {\n      // Fetch the photo, read as a blob, then convert to base64 format\n      const response = await fetch(cameraPhoto.webPath);\n      const blob = await response.blob();\n\n      return await this.convertBlobToBase64(blob) as string;\n    }\n  }\n  convertBlobToBase64 = (blob: Blob) => new Promise((resolve, reject) => {\n    const reader = new FileReader;\n    reader.onerror = reject;\n    reader.onload = () => {\n        resolve(reader.result);\n    };\n    reader.readAsDataURL(blob);\n  });\n}\n\n//interface\nexport interface Photo {\n  filepath: string;\n  webviewPath: string;\n}\n","export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-button slot=\\\"primary\\\" color=\\\"danger\\\" (click)=\\\"changeMode()\\\">\\n      {{! this.editmode ? \\\"edit\\\" : \\\"done\\\"}}\\n    </ion-button>\\n    <ion-title>\\n       Tracheotomy Photo Record\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content overflow-scroll=\\\"true\\\">\\n  <ion-grid>\\n    <ion-row>\\n    <ion-col size=\\\"6\\\"\\n      *ngFor=\\\"let photo of photoService.photos; index as position; let counter = index\\\">\\n        <ion-img [src]=\\\"photo.webviewPath\\\" (click)=\\\"this.editmode ? this.alertDeleteConfirm(counter):openViewer(photo.webviewPath)\\\"></ion-img>\\n    </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n\\n  <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"center\\\" slot=\\\"fixed\\\">\\n    <ion-fab-button (click)=\\\"addPhotoToGallery()\\\">\\n      <ion-icon name=\\\"camera\\\"></ion-icon>\\n    </ion-fab-button>\\n  </ion-fab>\\n</ion-content>\\n\";","import { Component, OnInit, NgZone } from '@angular/core';\nimport { PhotoService } from '../services/photo.service';\n//for gallery\nimport { ModalController } from '@ionic/angular';\nimport { ViewerModalComponent } from 'ngx-ionic-image-viewer';\n\nimport { AlertController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-photo-record',\n  templateUrl: './photo-record.page.html',\n  styleUrls: ['./photo-record.page.scss'],\n})\nexport class PhotoRecordPage implements OnInit {\n  public editmode = false;\n\n  async ngOnInit() {\n    await this.photoService.loadSaved();\n  }\n\n  // calling photoservice alert service and modal controller at load\n  constructor(public photoService: PhotoService, public alertController: AlertController, public modalController: ModalController) { }\n\n  //change to edit mode\n  changeMode () {\n    if (this.editmode === false) {\n      this.editmode = true;\n    } else {\n      this.editmode = false;\n    }\n    console.log(this.editmode)\n  }\n\n  // calling photoservice through method\n  addPhotoToGallery() {\n    this.photoService.addNewToGallery();\n  }\n\n  resetGallery(){\n    this.photoService.reset();\n    //window.location.reload();\n  }\n\n  removePhotoFromGallery(index){\n    console.log(index);\n    this.photoService.removePhoto(index);\n    //window.location.reload();\n  }\n\n  //warning before delete\n  async alertDeleteConfirm(index) {\n    const alert = await this.alertController.create({\n      header: 'Confirm Delete!',\n      message: 'The selected photo will be <strong>Deleted</strong>!!!',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: (blah) => {\n            console.log('Confirm Cancel: blah');\n          }\n        }, {\n          text: 'Okay',\n          handler: (blah) => {\n            this.removePhotoFromGallery(index);\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n  //warning before reset\n  async alertResetConfirm(index) {\n    const alert = await this.alertController.create({\n      header: 'Confirm Delete!',\n      message: 'The Photo Record will be <strong>Resetted</strong>!!!',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: (blah) => {\n            console.log('Confirm Cancel: blah');\n          }\n        }, {\n          text: 'Okay',\n          handler: (blah) => {\n            this.resetGallery();\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n  //open viewer\n  async openViewer(srcPath) {\n    const modal = await this.modalController.create({\n      component: ViewerModalComponent,\n      componentProps: {\n        src: srcPath\n      },\n      cssClass: 'ion-img-viewer',\n      keyboardClose: true,\n      showBackdrop: true\n    });\n\n    return await modal.present();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PhotoRecordPage } from './photo-record.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PhotoRecordPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PhotoRecordPageRoutingModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwaG90by1yZWNvcmQucGFnZS5zY3NzIn0= */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PhotoRecordPageRoutingModule } from './photo-record-routing.module';\n\nimport { PhotoRecordPage } from './photo-record.page';\n\nimport { LongPressModule } from 'ionic-long-press';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PhotoRecordPageRoutingModule,\n  ],\n  declarations: [PhotoRecordPage]\n})\nexport class PhotoRecordPageModule {}\n"]}