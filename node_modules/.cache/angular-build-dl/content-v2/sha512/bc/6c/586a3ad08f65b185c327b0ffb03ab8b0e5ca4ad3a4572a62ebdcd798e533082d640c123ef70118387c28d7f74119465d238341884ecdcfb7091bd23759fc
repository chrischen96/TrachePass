{"version":3,"sources":["webpack:///src/app/services/photo.service.ts","webpack:///src/app/photo-record/photo-record.page.html","webpack:///src/app/photo-record/photo-record.page.ts","webpack:///src/app/photo-record/photo-record-routing.module.ts","webpack:///src/app/photo-record/photo-record.page.scss","webpack:///src/app/photo-record/photo-record.module.ts"],"names":["Camera","Filesystem","Storage","PhotoService","platform","photos","PHOTO_STORAGE","convertBlobToBase64","blob","Promise","resolve","reject","reader","FileReader","onerror","onload","result","readAsDataURL","is","photo","readFile","path","filepath","directory","Data","webviewPath","data","deleteFile","splice","length","set","key","value","JSON","stringify","console","log","index","getPhoto","resultType","Uri","source","direction","Rear","quality","capturedPhoto","savePicture","savedImageFile","unshift","cameraPhoto","readAsBase64","base64Data","fileName","Date","toISOString","slice","writeFile","savedFile","uri","convertFileSrc","webPath","file","fetch","response","providedIn","PhotoRecordPage","photoService","alertController","modalController","loginService","editmode","loadSaved","addNewToGallery","reset","removePhoto","create","header","message","buttons","text","role","cssClass","handler","blah","removePhotoFromGallery","alert","present","resetGallery","srcPath","component","componentProps","src","keyboardClose","showBackdrop","modal","selector","template","routes","PhotoRecordPageRoutingModule","imports","forChild","exports","PhotoRecordPageModule","declarations"],"mappings":"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","file":"photo-record-photo-record-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Platform } from '@ionic/angular';\nimport { Plugins, CameraResultType, Capacitor, FilesystemDirectory, CameraPhoto, CameraSource, CameraDirection } from '@capacitor/core';\n\nconst { Camera, Filesystem, Storage } = Plugins;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PhotoService {\n  //initiate array for storing photo webpath\n  public photos: Photo[] = [];\n  //set the strage key for photos can be changed\n  private PHOTO_STORAGE: string = \"photos\";\n  //setting platform\n  private platform: Platform;\n\n  constructor(platform: Platform) {\n    this.platform = platform;\n  }\n\n  //loading photo\n  public async loadSaved(photos:Photo[]) {\n    // Retrieve cached photo array data\n    //const photoList = await Storage.get({ key: this.PHOTO_STORAGE });\n    //this.photos = JSON.parse(photoList.value) || [];\n    // Easiest way to detect when running on the web:\n    // “when the platform is NOT hybrid, do this”\n    if (!this.platform.is('hybrid')) {\n      // Display the photo by reading into base64 format\n      for (let photo of photos) {\n        // Read each saved photo's data from the Filesystem\n        const readFile = await Filesystem.readFile({\n            path: photo.filepath,\n            directory: FilesystemDirectory.Data\n        });\n        // Web platform only: Load the photo as base64 data\n        photo.webviewPath = `data:image/jpeg;base64,${readFile.data}`;\n      }\n    }\n  }\n\n  //reset\n  public reset(){\n    for (let photo of this.photos) {\n      // Read each saved photo's data from the Filesystem\n      const deleteFile = Filesystem.deleteFile({\n          path: photo.filepath,\n          directory: FilesystemDirectory.Data\n      });\n    }\n    //emptying photo array\n    this.photos.splice(0, this.photos.length);\n    Storage.set({\n      key: this.PHOTO_STORAGE,\n      value: JSON.stringify(this.photos)\n    });\n    console.log(this.photos);\n    console.log(\"done deleting all\");\n  }\n\n  //removing photo\n  public removePhoto(index) {\n    // remove from file system\n    console.log(\"before\");\n    console.log(this.photos);\n    Filesystem.deleteFile({\n      path: this.photos[index].filepath,\n      directory: FilesystemDirectory.Data\n    });\n    console.log(\"deleted\");\n    console.log(this.photos[index].filepath);\n    console.log(\"editing array\");\n    this.photos.splice(index, 1);\n    Storage.set({\n      key: this.PHOTO_STORAGE,\n      value: JSON.stringify(this.photos)\n    });\n    console.log(\"after\");\n    console.log(this.photos);\n  }\n\n  //edited\n  public async addNewToGallery(photos:Photo[]) {\n    // Take a photo\n    const capturedPhoto = await Camera.getPhoto({\n      resultType: CameraResultType.Uri,\n      source: CameraSource.Camera,\n      direction: CameraDirection.Rear,\n      quality: 100\n    });\n\n    // Save the picture and add it to photo collection (array pointing it to the file lo)\n    const savedImageFile = await this.savePicture(capturedPhoto);\n    photos.unshift(savedImageFile);\n    console.log(\"New Phoo array\");\n    console.log(JSON.stringify(photos))\n    return JSON.stringify(photos);\n    //str\n/*     Storage.set({\n      key: this.PHOTO_STORAGE,\n      value: JSON.stringify(this.photos)\n    }); */\n  }\n\n  //function to save photo\n  private async savePicture(cameraPhoto: CameraPhoto) {\n    const base64Data = await this.readAsBase64(cameraPhoto);\n    // Write the file to the data directory\n    const fileName = new Date().toISOString().slice(0,19) + '.jpeg';\n    const savedFile = await Filesystem.writeFile({\n      path: fileName,\n      data: base64Data,\n      directory: FilesystemDirectory.Data\n    });\n    if (this.platform.is('hybrid')) {\n      // Display the new image by rewriting the 'file://' path to HTTP\n      // Details: https://ionicframework.com/docs/building/webview#file-protocol\n      return {\n        filepath: savedFile.uri,\n        webviewPath: Capacitor.convertFileSrc(savedFile.uri),\n      };\n    }\n    else {\n      // Use webPath to display the new image instead of base64 since it's\n      // already loaded into memory\n      return {\n        filepath: fileName,\n        webviewPath: cameraPhoto.webPath\n      };\n    }\n  }\n\n  //reading as base 64\n  private async readAsBase64(cameraPhoto: CameraPhoto) {\n    if (this.platform.is('hybrid')) {\n      // Read the file into base64 format\n      const file = await Filesystem.readFile({\n        path: cameraPhoto.path\n      });\n      return file.data;\n    }\n    else {\n      // Fetch the photo, read as a blob, then convert to base64 format\n      const response = await fetch(cameraPhoto.webPath);\n      const blob = await response.blob();\n      return await this.convertBlobToBase64(blob) as string;\n    }\n  }\n\n  convertBlobToBase64 = (blob: Blob) => new Promise((resolve, reject) => {\n    const reader = new FileReader;\n    reader.onerror = reject;\n    reader.onload = () => {\n        resolve(reader.result);\n    };\n    reader.readAsDataURL(blob);\n  });\n}\n\n//interface\nexport interface Photo {\n  filepath: string;\n  webviewPath: string;\n}\n","export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/medical-record\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Photo Record\\n    </ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"changeMode()\\\" *ngIf=\\\"!editmode\\\">\\n        Edit\\n      </ion-button>\\n      <ion-button color=\\\"danger\\\" (click)=\\\"changeMode()\\\" *ngIf=\\\"editmode\\\">\\n        Done\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content overflow-scroll=\\\"true\\\">\\n  <ion-grid>\\n    <ion-row>\\n    <ion-col size=\\\"6\\\"\\n      *ngFor=\\\"let photo of photoService.photos; index as position; let counter = index\\\">\\n        <ion-img [src]=\\\"photo.webviewPath\\\" (click)=\\\"this.editmode ? this.alertDeleteConfirm(counter):openViewer(photo.webviewPath)\\\"></ion-img>\\n    </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n  \\n  <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"center\\\" slot=\\\"fixed\\\" style=\\\"margin-bottom: 15%;\\\" *ngIf=\\\"!editmode\\\">\\n    <ion-fab-button (click)=\\\"addPhotoToGallery()\\\">\\n      <ion-icon name=\\\"camera\\\"></ion-icon>\\n    </ion-fab-button>\\n  </ion-fab>\\n</ion-content>\\n\\n\";","import { Component, OnInit, NgZone } from '@angular/core';\nimport { PhotoService } from '../services/photo.service';\n\n//for gallery\nimport { ModalController } from '@ionic/angular';\nimport { ViewerModalComponent } from 'ngx-ionic-image-viewer';\n\nimport { AlertController } from '@ionic/angular';\n\nimport { LoginService } from '../services/login.service'; \n\n@Component({\n  selector: 'app-photo-record',\n  templateUrl: './photo-record.page.html',\n  styleUrls: ['./photo-record.page.scss'],\n})\nexport class PhotoRecordPage implements OnInit {\n  public editmode = false;\n\n  async ngOnInit() {\n    await this.photoService.loadSaved([]);\n  }\n\n  // calling photoservice alert service and modal controller at load\n  constructor(public photoService: PhotoService, public alertController: AlertController, public modalController: ModalController, public loginService: LoginService) {\n    //this.loginService.timeOut();\n   }\n\n  //change to edit mode\n  changeMode () {\n    if (this.editmode === false) {\n      this.editmode = true;\n    } else {\n      this.editmode = false;\n    }\n    console.log(this.editmode)\n  }\n\n  // calling photoservice through method\n  async addPhotoToGallery() {\n    await this.photoService.addNewToGallery([]);\n  }\n\n  resetGallery(){\n    this.photoService.reset();\n    //window.location.reload();\n  }\n\n  removePhotoFromGallery(index){\n    console.log(index);\n    this.photoService.removePhoto(index);\n    //window.location.reload();\n  }\n\n  //warning before delete\n  async alertDeleteConfirm(index) {\n    const alert = await this.alertController.create({\n      header: 'Confirm Delete',\n      message: 'The selected photo will be <strong>Deleted</strong>!',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: (blah) => {\n            console.log('Confirm Cancel: blah');\n          }\n        }, {\n          text: 'Delete',\n          cssClass: 'alert',\n          handler: (blah) => {\n            this.removePhotoFromGallery(index);\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n  //warning before reset\n  async alertResetConfirm(index) {\n    const alert = await this.alertController.create({\n      header: 'Confirm Delete',\n      message: 'The Photo Record will be <strong>Resetted</strong>!',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: (blah) => {\n            console.log('Confirm Cancel: blah');\n          }\n        }, {\n          text: 'Delete',\n          handler: (blah) => {\n            this.resetGallery();\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n  //open viewer\n  async openViewer(srcPath) {\n    const modal = await this.modalController.create({\n      component: ViewerModalComponent,\n      componentProps: {\n        src: srcPath\n      },\n      cssClass: 'ion-img-viewer',\n      keyboardClose: true,\n      showBackdrop: true\n    });\n\n    await modal.present();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PhotoRecordPage } from './photo-record.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PhotoRecordPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PhotoRecordPageRoutingModule {}\n","export default \".alert {\\n  color: red;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3Bob3RvLXJlY29yZC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxVQUFBO0FBQ0oiLCJmaWxlIjoicGhvdG8tcmVjb3JkLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hbGVydCB7XG4gICAgY29sb3I6IHJlZDtcbn0iXX0= */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PhotoRecordPageRoutingModule } from './photo-record-routing.module';\n\nimport { PhotoRecordPage } from './photo-record.page';\n\nimport { LongPressModule } from 'ionic-long-press';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PhotoRecordPageRoutingModule,\n  ],\n  declarations: [PhotoRecordPage]\n})\nexport class PhotoRecordPageModule {}\n"]}