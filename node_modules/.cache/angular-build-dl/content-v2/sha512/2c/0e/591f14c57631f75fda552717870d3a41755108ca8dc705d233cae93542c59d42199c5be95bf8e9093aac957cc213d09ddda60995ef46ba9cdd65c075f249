{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/button-active-a6787d69.js","webpack:///src/app/edit-pathology/edit-pathology.page.scss","webpack:///src/app/edit-medical-conditions/edit-medical-conditions.page.scss","webpack:///node_modules/@ionic/core/dist/esm/theme-ff3fc52f.js","webpack:///src/app/edit-operative-history/edit-operative-history.page.ts","webpack:///src/app/open-version/open-version.page.ts","webpack:///src/app/edit-pathology/edit-pathology.page.html","webpack:///src/app/appointment-reminder/appointment-reminder.page.ts","webpack:///src/app/open-version/open-version.page.html","webpack:///src/app/view-operative-history/view-operative-history.page.ts","webpack:///node_modules/@ionic/core/dist/esm/framework-delegate-4584ab5a.js","webpack:///node_modules/@ionic/core/dist/esm/spinner-configs-cd7845af.js","webpack:///src/app/view-operative-history/view-operative-history.page.html","webpack:///src/app/edit-medical-conditions/edit-medical-conditions.page.ts","webpack:///src/app/view-operative-history/view-operative-history.page.scss","webpack:///node_modules/@ionic/core/dist/esm/haptic-27b3f981.js","webpack:///src/app/appointment-reminder/appointment-reminder.page.html","webpack:///src/app/edit-pathology/edit-pathology.page.ts","webpack:///src/app/open-version/open-version.page.scss","webpack:///src/app/appointment-reminder/appointment-reminder.page.scss","webpack:///src/app/edit-medical-conditions/edit-medical-conditions.page.html","webpack:///src/app/edit-operative-history/edit-operative-history.page.scss","webpack:///src/app/edit-operative-history/edit-operative-history.page.html"],"names":["createButtonActiveGesture","el","isButton","currentTouchedButton","initialTouchedButton","activateButtonAtPoint","x","y","hapticFeedbackFn","document","target","elementFromPoint","clearActiveButton","setActiveButton","button","buttonToModify","classList","add","dispatchClick","remove","click","undefined","gestureName","threshold","onStart","ev","currentX","currentY","onMove","onEnd","hostContext","selector","closest","createColorClasses","color","cssClassMap","length","Object","assign","getClassList","classes","array","Array","isArray","split","filter","c","map","trim","getClassMap","forEach","SCHEME","openURL","url","direction","animation","test","router","querySelector","preventDefault","push","EditOperativeHistoryPage","modalCtrl","fb","userDataService","photoService","history","tuple","operativeHistoryString","operativeHistoryJSON","photos","histories","form","group","date","required","type","details","medicalRecordValue","JSON","parse","addNewToGallery","dismiss","keys","controls","key","value","console","log","i","j","stringify","saveMedicalRecord","location","reload","srcPath","create","component","componentProps","src","cssClass","keyboardClose","showBackdrop","modal","present","template","OpenVersionPage","alertController","header","message","buttons","text","role","handler","replace","alert","Browser","LocalNotifications","AppointmentReminderPage","formBuilder","appointmentService","today","Date","toISOString","appointment","appointmentList","appointmentDate","alarmDateTime","title","doctor","appointments","index","getPending","saveValue","isAppointmentSetted","setReminder","ViewOperativeHistoryPage","get","setValue","loadSaved","attachComponent","delegate","container","cssClasses","attachViewToDom","HTMLElement","Error","ownerDocument","createElement","appendChild","componentOnReady","detachComponent","element","parentElement","removeViewFromDom","Promise","resolve","spinners","dur","circles","fn","total","animationDelay","angle","Math","PI","r","style","sin","cos","step","elmDuration","cx","cy","fill","viewBox","transform","_","lines","y1","y2","SPINNERS","EditMedicalConditionsPage","allergies","medications","otherMedicalConditions","loadMedicalRecord","HapticEngine","getEngine","win","window","TapticEngine","Capacitor","isPluginAvailable","Plugins","Haptics","available","isCordova","isCapacitor","impact","options","engine","toUpperCase","notification","selection","selectionStart","gestureSelectionStart","selectionChanged","gestureSelectionChanged","selectionEnd","gestureSelectionEnd","hapticSelection","hapticSelectionStart","hapticSelectionChanged","hapticSelectionEnd","hapticImpact","EditPathologyPage","tubeSizeList","pathology","intubatation","airwayGrade","tubeSize"],"mappings":"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","file":"common-es5.js","sourcesContent":["import { c as writeTask } from './index-e806d1f6.js';\nimport { createGesture } from './index-f49d994d.js';\nimport { h as hapticSelectionEnd, a as hapticSelectionStart, b as hapticSelectionChanged } from './haptic-27b3f981.js';\n\nconst createButtonActiveGesture = (el, isButton) => {\n  let currentTouchedButton;\n  let initialTouchedButton;\n  const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\n    if (typeof document === 'undefined') {\n      return;\n    }\n    const target = document.elementFromPoint(x, y);\n    if (!target || !isButton(target)) {\n      clearActiveButton();\n      return;\n    }\n    if (target !== currentTouchedButton) {\n      clearActiveButton();\n      setActiveButton(target, hapticFeedbackFn);\n    }\n  };\n  const setActiveButton = (button, hapticFeedbackFn) => {\n    currentTouchedButton = button;\n    if (!initialTouchedButton) {\n      initialTouchedButton = currentTouchedButton;\n    }\n    const buttonToModify = currentTouchedButton;\n    writeTask(() => buttonToModify.classList.add('ion-activated'));\n    hapticFeedbackFn();\n  };\n  const clearActiveButton = (dispatchClick = false) => {\n    if (!currentTouchedButton) {\n      return;\n    }\n    const buttonToModify = currentTouchedButton;\n    writeTask(() => buttonToModify.classList.remove('ion-activated'));\n    /**\n     * Clicking on one button, but releasing on another button\n     * does not dispatch a click event in browsers, so we\n     * need to do it manually here. Some browsers will\n     * dispatch a click if clicking on one button, dragging over\n     * another button, and releasing on the original button. In that\n     * case, we need to make sure we do not cause a double click there.\n     */\n    if (dispatchClick && initialTouchedButton !== currentTouchedButton) {\n      currentTouchedButton.click();\n    }\n    currentTouchedButton = undefined;\n  };\n  return createGesture({\n    el,\n    gestureName: 'buttonActiveDrag',\n    threshold: 0,\n    onStart: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart),\n    onMove: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged),\n    onEnd: () => {\n      clearActiveButton(true);\n      hapticSelectionEnd();\n      initialTouchedButton = undefined;\n    }\n  });\n};\n\nexport { createButtonActiveGesture as c };\n","export default \"ion-item {\\n  margin-top: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2VkaXQtcGF0aG9sb2d5LnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGVBQUE7QUFDSiIsImZpbGUiOiJlZGl0LXBhdGhvbG9neS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24taXRlbXtcbiAgICBtYXJnaW4tdG9wOiA1cHg7XG59Il19 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJlZGl0LW1lZGljYWwtY29uZGl0aW9ucy5wYWdlLnNjc3MifQ== */\";","const hostContext = (selector, el) => {\n  return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n  return (typeof color === 'string' && color.length > 0) ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n  if (classes !== undefined) {\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array\n      .filter(c => c != null)\n      .map(c => c.trim())\n      .filter(c => c !== '');\n  }\n  return [];\n};\nconst getClassMap = (classes) => {\n  const map = {};\n  getClassList(classes).forEach(c => map[c] = true);\n  return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n  if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n    const router = document.querySelector('ion-router');\n    if (router) {\n      if (ev != null) {\n        ev.preventDefault();\n      }\n      return router.push(url, direction, animation);\n    }\n  }\n  return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { FormBuilder, FormGroup, FormControl, Validators, ReactiveFormsModule} from '@angular/forms'\nimport { UserDataService } from '../services/user-data.service'; \nimport { PhotoService } from '../services/photo.service';\nimport { ViewerModalComponent } from 'ngx-ionic-image-viewer';\n\n@Component({\n  selector: 'app-edit-operative-history',\n  templateUrl: './edit-operative-history.page.html',\n  styleUrls: ['./edit-operative-history.page.scss'],\n})\nexport class EditOperativeHistoryPage implements OnInit {\n  public form: FormGroup;\n  public history = {};\n  public tuple = [];\n  public operativeHistoryString = '';\n  public operativeHistoryJSON = {};\n  public photos = [];\n  public histories = [];\n\n  constructor(\n    private modalCtrl:ModalController,\n    public fb: FormBuilder,\n    public userDataService:UserDataService,\n    public photoService: PhotoService,\n  ) { \n    this.form = this.fb.group({\n      date: ['',Validators.required],\n      type: ['',Validators.required],\n      details: ['',Validators.required],\n    });\n    this.history['photos'] = '';\n  }\n\n  ngOnInit() {\n    this.operativeHistoryString = this.userDataService.medicalRecordValue['operativeHistory'];\n    if(this.operativeHistoryString!='' && this.operativeHistoryString!=null){\n      this.operativeHistoryJSON = JSON.parse(this.operativeHistoryString);\n    }\n  }\n\n  async addPhotoToGallery(){\n    this.history['photos'] = await this.photoService.addNewToGallery(this.photos);\n    this.photos = JSON.parse(this.history['photos']);\n  }\n\n  dismiss(){\n    this.modalCtrl.dismiss();\n  }\n\n  async save(){\n    \n    Object.keys(this.form.controls).forEach(key => {\n      this.history[key]=this.form.value[key];\n      console.log(key, this.history[key]);\n    });\n\n    this.histories.push(this.history);\n    \n    Object.keys(this.operativeHistoryJSON).forEach(key => {\n      this.histories.push(this.operativeHistoryJSON[key]);\n      console.log(this.histories);\n    });\n    for(let i=0; i<this.histories.length; i++){\n      for(let j=i+1; j<this.histories.length; j++){\n        if(this.histories[i].date<this.histories[j].date){\n          let history = this.histories[i];\n          this.histories[i]=this.histories[j];\n          this.histories[j]=history;\n        }  \n      }\n    }\n    for(let i=0; i<this.histories.length; i++){\n      this.operativeHistoryJSON[i]=this.histories[i];\n    } // order histories by date\n\n    this.operativeHistoryString = JSON.stringify(this.operativeHistoryJSON);\n    this.userDataService.medicalRecordValue['operativeHistory'] = this.operativeHistoryString;\n    // construct a JSON, then stringify it to store\n\n    console.log(this.userDataService.medicalRecordValue['operativeHistory']);\n    this.userDataService.saveMedicalRecord();\n    this.modalCtrl.dismiss();\n    location.reload();\n  }\n\n  async openViewer(srcPath) {\n    const modal = await this.modalCtrl.create({\n      component: ViewerModalComponent,\n      componentProps: {\n        src: srcPath\n      },\n      cssClass: 'ion-img-viewer',\n      keyboardClose: true,\n      showBackdrop: true\n    });\n    await modal.present();\n  }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { AlertController, ModalController, } from '@ionic/angular';\n\n@Component({\n  selector: 'app-open-version',\n  templateUrl: './open-version.page.html',\n  styleUrls: ['./open-version.page.scss'],\n})\nexport class OpenVersionPage implements OnInit {\n  @Input() date: string;\n  @Input() type: string;\n  @Input() value: any;\n  public histories = [];\n\n  constructor(\n    private modalCtrl: ModalController, \n    public alertController: AlertController,\n  ) { }\n\n  ngOnInit() {\n    console.log(this.value);\n    const operativeHistoryString = this.value['operativeHistory'];\n    console.log(operativeHistoryString);\n    if(operativeHistoryString!='' && operativeHistoryString!=null) {\n      const operativeHistoryJSON = JSON.parse(operativeHistoryString);\n      console.log(operativeHistoryJSON);\n      Object.keys(operativeHistoryJSON).forEach(key => {\n        this.histories.push(operativeHistoryJSON[key]);\n        console.log(this.histories);\n      });\n    }\n  }\n\n  async warningRestore(){\n    const alert = await this.alertController.create({\n      header: 'Confirm Restore',\n      message: 'The record will be replaced by this backup.',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: () => {\n            console.log('Confirm Cancel: blah');\n          }\n        }, {\n          text: 'Confirm',\n          handler: () => {\n            this.replace();\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n  async replace(){\n    this.modalCtrl.dismiss({\n      'restoreValues': true\n    });\n  }\n\n  dismiss(){\n    this.modalCtrl.dismiss({\n      'restoreValues': false\n    });\n  }\n\n}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button color=\\\"danger\\\" (click)=\\\"dismiss()\\\">Cancel</ion-button>\\n    </ion-buttons>\\n    <ion-title>Edit</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"save()\\\">Done</ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <form [formGroup]=\\\"form\\\">\\n    <ion-list>\\n      <ion-list-header lines=\\\"full\\\">\\n        <ion-label>\\n          Reason for Tracheostomy\\n        </ion-label>\\n      </ion-list-header>\\n\\n      <ion-item lines='full'>\\n        <ion-textarea rows=\\\"7\\\"\\n        placeholder=\\\"Enter reasons\\\"\\n        formControlName=\\\"pathology\\\"></ion-textarea>\\n      </ion-item>\\n    </ion-list>\\n\\n    <ion-list>\\n      <ion-list-header lines=\\\"full\\\">\\n        <ion-label>\\n          Airway Condition\\n        </ion-label>\\n      </ion-list-header>\\n\\n      <ion-item>\\n        <ion-label>Is Upper Airway Intubatable?</ion-label>\\n        <ion-toggle formControlName=\\\"intubatation\\\" (ionChange)=\\\"intubatation()\\\"></ion-toggle>\\n      </ion-item>\\n\\n      <div *ngIf=\\\"this.form.value.intubatation==true\\\">\\n        <ion-item>\\n          <ion-label>Airway Grade</ion-label>\\n          <ion-select formControlName='airwayGrade' interface=\\\"action-sheet\\\">\\n            <ion-select-option value=\\\"1\\\">1</ion-select-option>\\n            <ion-select-option value=\\\"2\\\">2</ion-select-option>\\n            <ion-select-option value=\\\"3\\\">3</ion-select-option>\\n            <ion-select-option value=\\\"4\\\">4</ion-select-option>\\n          </ion-select>\\n        </ion-item>\\n  \\n        <ion-item>\\n          <ion-label>Endotracheal tube size</ion-label>\\n          <ion-select formControlName='tubeSize'>\\n            <div *ngFor=\\\"let tubeSize of tubeSizeList\\\">\\n              <ion-select-option  value=\\\"{{tubeSize}}\\\">{{tubeSize}}</ion-select-option>\\n            </div> \\n          </ion-select>\\n        </ion-item>\\n  \\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\" >Details</ion-label>\\n          <ion-textarea rows=\\\"7\\\"\\n          placeholder=\\\"Enter details\\\"\\n          formControlName=\\\"details\\\"></ion-textarea>\\n        </ion-item>\\n      </div>\\n    </ion-list>\\n  </form>\\n</ion-content>\\n\";","import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\n//load browser plugin\nimport { Plugins } from '@capacitor/core';\nconst { Browser, LocalNotifications } = Plugins;\n\nimport {Validators, FormBuilder, FormGroup } from '@angular/forms';\nimport { AppointmentService } from '../services/appointment.service';\n\n@Component({\n  selector: 'app-appointment-reminder',\n  templateUrl: './appointment-reminder.page.html',\n  styleUrls: ['./appointment-reminder.page.scss'],\n})\nexport class AppointmentReminderPage implements OnInit {\n\n  public today = new Date().toISOString();\n  public form : FormGroup;\n  public isLocationSetted: Boolean;\n  public isAppointmentSetted: Boolean;\n  public appointment = {};\n  public appointmentList = [];\n\n  constructor(\n    private formBuilder: FormBuilder, \n    public appointmentService: AppointmentService, \n    public modalCtrl: ModalController,\n  ) {\n    console.log(this.today);\n    this.form = this.formBuilder.group({\n      appointmentDate: [this.today,],\n      alarmDateTime: [''],\n      title: [''],\n      doctor: [''],\n      location: [''],\n    });\n    console.log(this.form.value[\"appointmentDate\"]);\n  }\n\n  ngOnInit() {\n  }\n\n/*   async openMap() {\n    const link = \"https://www.google.com/maps/search/?api=1&query=\" + this.appointmentService.appointment[\"Location\"]\n    const encoded = encodeURI(link)\n    await Browser.open({url: encoded});\n  } */\n\n\n  async save(){\n    Object.keys(this.form.value).forEach(keys => {\n      this.appointment[keys] = this.form.value[keys];\n    })\n    console.log(this.appointment['appointmentDate']);\n    this.appointmentList.push(this.appointment);\n\n    Object.keys(this.appointmentService.appointments).forEach(key => {\n      this.appointmentList.push(this.appointmentService.appointments[key]);\n    })\n\n    const index = this.appointmentList.length;\n    \n    console.log(LocalNotifications.getPending());\n    for(let i=0; i<this.appointmentList.length; i++){\n      for(let j=i+1; j<this.appointmentList.length; j++){\n        if(this.appointmentList[i].appointmentDate<this.appointmentList[j].appointmentDate){\n          let history = this.appointmentList[i];\n          this.appointmentList[i]=this.appointmentList[j];\n          this.appointmentList[j]=history;\n        }  \n      }\n    }\n    for(let i=0; i<this.appointmentList.length; i++){\n      this.appointmentService.appointments[i] = this.appointmentList[i];\n    }\n\n    this.appointmentService.saveValue();\n    this.isAppointmentSetted = true;\n    this.modalCtrl.dismiss();\n    await this.appointmentService.setReminder(this.appointment, index);\n    location.reload();\n  }\n\n  dismiss(){\n    this.modalCtrl.dismiss();\n  }\n\n}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button (click)=\\\"dismiss()\\\">Back</ion-button>\\n    </ion-buttons>\\n    <ion-title style=\\\"padding: 0px 80px;\\\">{{this.date | date:'YYYY/M/d, h:mm a'}}</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"warningRestore()\\\">Restore</ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div *ngIf=\\\"this.type == 'User Profile'\\\" class=\\\"userProfile\\\">\\n    <ion-list>\\n      <ion-list-header lines=\\\"full\\\">\\n        <ion-label>\\n          Patient Details\\n        </ion-label>\\n        <ion-label></ion-label>\\n      </ion-list-header>\\n\\n      <ion-item>\\n        <ion-label>Name</ion-label>\\n        <ion-label>{{this.value.name || 'Not Set'}}</ion-label>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label>Date of Birth</ion-label>\\n        <ion-label>{{(this.value.birthDate  | date : 'd MMM y') || 'Not Set'}}</ion-label>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label>Sex</ion-label>\\n        <ion-label>{{this.value.sex}}</ion-label>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label>NHS Number</ion-label>\\n        <ion-label>{{this.value.nhsNumber||'Not Set'}}</ion-label>\\n      </ion-item>\\n    </ion-list>\\n\\n    <ion-list class=\\\"ion-no-margin\\\">\\n      <ion-list-header lines=\\\"full\\\">\\n        <ion-label>\\n          Caregiver\\n        </ion-label>\\n        <ion-label></ion-label>\\n      </ion-list-header>\\n\\n      <ion-item>\\n        <ion-label>{{this.value.relation1 || 'Not Set'}}</ion-label>\\n        <ion-label>{{this.value.r1Name || 'Not Set'}}</ion-label>\\n      </ion-item>\\n\\n      <ion-item *ngIf=\\\"this.value.relation2 != null || this.value.r2Name != null\\\">\\n        <ion-label>{{this.value.relation2}}</ion-label>\\n        <ion-label>{{this.value.r2Name}}</ion-label>\\n      </ion-item>\\n    </ion-list>\\n\\n    <ion-list class=\\\"ion-no-margin\\\">\\n      <ion-list-header lines=\\\"full\\\">\\n        <ion-label>\\n          Hospital Details\\n        </ion-label>\\n        <ion-label></ion-label>\\n      </ion-list-header>\\n\\n      <ion-item>\\n        <ion-label>Consultant</ion-label>\\n        <ion-label>{{this.value.consultant || 'Not Set'}}</ion-label>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label>Trust</ion-label>\\n        <ion-label>{{this.value.trust || 'Not Set'}}</ion-label>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label>Emergency Contact</ion-label>\\n        <ion-label>{{this.value.emergencyContact || 'Not Set'}}</ion-label>\\n      </ion-item>\\n    </ion-list>\\n  </div>\\n\\n  <div *ngIf=\\\"this.type == 'Medical Record'\\\">\\n    <ion-list class=\\\"ion-no-margin\\\">\\n      <ion-list-header lines=\\\"full\\\">\\n        <ion-label>\\n          Tracheostomy Details\\n        </ion-label>\\n        <ion-label></ion-label>\\n      </ion-list-header>\\n\\n      <ion-item>\\n        <ion-label>Tube Type</ion-label>\\n        <ion-label>{{this.value.tubeType || 'Not Set'}}</ion-label>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label>Subtype</ion-label>\\n        <ion-label>{{this.value.subType || 'Not Set'}}</ion-label>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label>Size - ID (mm)</ion-label>\\n        <ion-label>{{this.value.sizeID || 'Not Set'}}</ion-label>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label>Shaft Length (mm)</ion-label>\\n        <ion-label>{{this.value.shaftLength || 'Not Set'}}</ion-label>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label>Suction Length</ion-label>\\n        <ion-label>{{this.value.suctionLength || 'Not Set'}}</ion-label>\\n      </ion-item>\\n    </ion-list>\\n\\n    <ion-list class=\\\"ion-no-margin\\\">\\n      <ion-list-header lines=\\\"full\\\">\\n        <ion-label>\\n          Medical Conditions\\n        </ion-label>\\n      </ion-list-header>\\n\\n      <ion-item>\\n        <ion-label>\\n          <h2>Allergies</h2>\\n          <p> {{this.value.allergies || 'Not Set'}} </p>\\n        </ion-label>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label>\\n          <h2>Medications</h2>\\n          <p> {{this.value.medications || 'Not Set'}} </p>\\n        </ion-label>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label>\\n          <h2>Other Conditions</h2>\\n          <p> {{this.value.otherMedicalConditions || 'Not Set'}} </p>\\n        </ion-label>\\n      </ion-item>\\n    </ion-list>\\n\\n    <ion-list class=\\\"ion-no-margin\\\">\\n      <ion-list-header lines=\\\"full\\\">\\n        <ion-label>\\n          Airway Pathology\\n        </ion-label>\\n      </ion-list-header>\\n\\n      <ion-item>\\n        <ion-label>\\n          <h2>Pathology</h2>\\n          <p> {{this.value.pathology || 'Not Set'}} </p>\\n        </ion-label>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label>\\n          <h2>Intubatation</h2>\\n          <p> {{this.value.intubatation || 'Not Set'}} </p>\\n        </ion-label>\\n      </ion-item>\\n\\n      <div *ngIf=\\\"this.value.intubatation==true\\\"></div>\\n      <ion-item>\\n        <ion-label>\\n          <h2>Airway Grade:</h2>\\n          <p> {{this.value.airwayGrade || 'Not Set'}} </p>\\n        </ion-label>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label>\\n          <h2>Endotracheal Tube Size:</h2>\\n          <p> {{this.value.tubeSize || 'Not Set'}} </p>\\n        </ion-label>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label>\\n          <h2>Details:</h2>\\n          <p> {{this.value.details || 'Not Set'}} </p>\\n        </ion-label>\\n      </ion-item>\\n    </ion-list>\\n\\n    <ion-list class=\\\"ion-no-margin\\\" *ngIf=\\\"this.value.operativeHistory != null\\\">\\n      <ion-list-header lines=\\\"full\\\">\\n        <ion-label>\\n          Operative History\\n        </ion-label>\\n      </ion-list-header>\\n\\n      <ion-item *ngFor=\\\"let history of histories\\\">\\n        <ion-label>\\n          <h2>{{history.date || 'Not Set'}}</h2>\\n          <h3>{{history.type || 'Not Set'}}</h3>\\n          <p>{{history.details || 'Not Set'}}</p>\\n        </ion-label>\\n      </ion-item>\\n    </ion-list>\\n  </div>\\n</ion-content>\\n\";","import { Component, OnInit, Input } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { FormBuilder, FormGroup, FormControl, Validators, ReactiveFormsModule} from '@angular/forms'\nimport { UserDataService } from '../services/user-data.service'; \nimport { PhotoService } from '../services/photo.service';\nimport { ViewerModalComponent } from 'ngx-ionic-image-viewer';\n\n@Component({\n  selector: 'app-view-operative-history',\n  templateUrl: './view-operative-history.page.html',\n  styleUrls: ['./view-operative-history.page.scss'],\n})\nexport class ViewOperativeHistoryPage implements OnInit {\n  @Input()index: number;\n  public form: FormGroup;\n  public history = {};\n  public tuple = [];\n  public operativeHistoryString = '';\n  public operativeHistoryJSON = {};\n  public photos=[];\n\n  constructor(\n    private modalCtrl:ModalController,\n    public fb: FormBuilder,\n    public userDataService:UserDataService,\n    public photoService: PhotoService,\n  ) { \n    this.form = this.fb.group({\n      date: ['',Validators.required],\n      type: ['',Validators.required],\n      details: ['',Validators.required],\n    });\n  }\n\n  ngOnInit() {\n    this.operativeHistoryString = this.userDataService.medicalRecordValue['operativeHistory'];\n    if(this.operativeHistoryString!='' && this.operativeHistoryString!=null){\n      this.operativeHistoryJSON = JSON.parse(this.operativeHistoryString);\n    };\n    this.history = this.operativeHistoryJSON[this.index];\n    this.form.get('date').setValue(this.history['date']);\n    this.form.get('type').setValue(this.history['type']);\n    this.form.get('details').setValue(this.history['details']);\n    if(this.history['photos']!=\"\"){\n      this.photos=JSON.parse(this.history['photos']);\n    }  \n    this.photoService.loadSaved(this.photos);\n  }\n\n  async addPhotoToGallery(){\n    this.history['photos'] = await this.photoService.addNewToGallery(this.photos);\n    this.photos = JSON.parse(this.history['photos']);\n  }\n\n  async openViewer(srcPath) {\n    const modal = await this.modalCtrl.create({\n      component: ViewerModalComponent,\n      componentProps: {\n        src: srcPath\n      },\n      cssClass: 'ion-img-viewer',\n      keyboardClose: true,\n      showBackdrop: true\n    });\n    await modal.present();\n  }\n\n  async save(){\n    Object.keys(this.form.controls).forEach(key => {\n      this.history[key]=this.form.value[key];\n      console.log(key, this.history[key]);\n    });\n    console.log('photos', this.history['photos'])\n    this.operativeHistoryJSON[this.index] = this.history;\n    this.operativeHistoryString = JSON.stringify(this.operativeHistoryJSON);\n    this.userDataService.medicalRecordValue['operativeHistory'] = this.operativeHistoryString;\n    // construct a JSON, then stringify it to store\n\n    console.log(this.userDataService.medicalRecordValue['operativeHistory']);\n    this.userDataService.saveMedicalRecord();\n    this.modalCtrl.dismiss();\n    location.reload();\n  }\n\n  dismiss(){\n    this.modalCtrl.dismiss();\n  }\n}\n","const attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n  if (delegate) {\n    return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n  }\n  if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n    throw new Error('framework delegate is missing');\n  }\n  const el = (typeof component === 'string')\n    ? container.ownerDocument && container.ownerDocument.createElement(component)\n    : component;\n  if (cssClasses) {\n    cssClasses.forEach(c => el.classList.add(c));\n  }\n  if (componentProps) {\n    Object.assign(el, componentProps);\n  }\n  container.appendChild(el);\n  if (el.componentOnReady) {\n    await el.componentOnReady();\n  }\n  return el;\n};\nconst detachComponent = (delegate, element) => {\n  if (element) {\n    if (delegate) {\n      const container = element.parentElement;\n      return delegate.removeViewFromDom(container, element);\n    }\n    element.remove();\n  }\n  return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","const spinners = {\n  'bubbles': {\n    dur: 1000,\n    circles: 9,\n    fn: (dur, index, total) => {\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      const angle = 2 * Math.PI * index / total;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circles': {\n    dur: 1000,\n    circles: 8,\n    fn: (dur, index, total) => {\n      const step = index / total;\n      const animationDelay = `${(dur * step) - dur}ms`;\n      const angle = 2 * Math.PI * step;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circular': {\n    dur: 1400,\n    elmDuration: true,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 20,\n        cx: 48,\n        cy: 48,\n        fill: 'none',\n        viewBox: '24 24 48 48',\n        transform: 'translate(0,0)',\n        style: {}\n      };\n    }\n  },\n  'crescent': {\n    dur: 750,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 26,\n        style: {}\n      };\n    }\n  },\n  'dots': {\n    dur: 750,\n    circles: 3,\n    fn: (_, index) => {\n      const animationDelay = -(110 * index) + 'ms';\n      return {\n        r: 6,\n        style: {\n          'left': `${9 - (9 * index)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 17,\n        y2: 29,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines-small': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 12,\n        y2: 20,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button color=\\\"danger\\\" (click)=\\\"dismiss()\\\">Cancel</ion-button>\\n    </ion-buttons>\\n    <ion-title>Edit and View</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"save()\\\">Done</ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <form [formGroup]=\\\"form\\\">\\n    <ion-list>\\n      <ion-list-header lines=\\\"full\\\">\\n        <ion-label>\\n          Operative History\\n        </ion-label>\\n      </ion-list-header>\\n\\n      <ion-item>\\n        <ion-label>Date</ion-label>\\n        <ion-datetime placeholder=\\\"Select Date\\\"\\n        display-format=\\\"D MMM YYYY\\\" \\n        picker-format=\\\"D MMM YYYY\\\" \\n        formControlName=\\\"date\\\" \\n        style=\\\"color: dodgerblue;\\\"></ion-datetime>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label>Type</ion-label>\\n        <ion-input \\n          formControlName=\\\"type\\\" \\n          placeholder=\\\"Operation Type\\\"\\n          style=\\\"color: dodgerblue; text-align: end;\\\">\\n        </ion-input>\\n      </ion-item>\\n\\n      <ion-item lines='full'>\\n        <ion-label position=\\\"stacked\\\">Details</ion-label>\\n        <ion-textarea rows=\\\"6\\\" formControlName=\\\"details\\\"></ion-textarea>\\n      </ion-item>\\n    </ion-list>\\n  </form>\\n\\n  <ion-item lines='full' (click)=\\\"addPhotoToGallery()\\\">\\n    <ion-icon name=\\\"add-circle-outline\\\" style=\\\"color:dodgerblue;\\\"></ion-icon>\\n    Add pictures\\n  </ion-item>\\n\\n  <ion-grid>\\n    <ion-row>\\n    <ion-col size=\\\"6\\\"\\n      *ngFor=\\\"let photo of photos; index as position;\\\">\\n        <ion-img [src]=\\\"photo.webviewPath\\\" (click)=\\\"openViewer(photo.webviewPath)\\\"></ion-img>\\n    </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n\\n</ion-content>\";","import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { FormBuilder, FormGroup, FormControl, Validators, ReactiveFormsModule} from '@angular/forms'\nimport { UserDataService } from '../services/user-data.service'; \n\n@Component({\n  selector: 'app-edit-medical-conditions',\n  templateUrl: './edit-medical-conditions.page.html',\n  styleUrls: ['./edit-medical-conditions.page.scss'],\n})\nexport class EditMedicalConditionsPage implements OnInit {\n  public form : FormGroup;\n  \n  constructor(private modalCtrl:ModalController, \n    public fb: FormBuilder,\n    public userDataService:UserDataService,\n  ) {\n    this.form = this.fb.group({\n      allergies: ['',Validators.required],\n      medications: ['', Validators.required],\n      otherMedicalConditions: ['', Validators.required],\n    });\n  }\n\n  async ngOnInit() {\n    await this.userDataService.loadMedicalRecord();\n    Object.keys(this.form.controls).forEach(key => {\n      this.form.get(key).setValue(this.userDataService.medicalRecordValue[key]);\n      console.log(key, this.form.get(key).value)\n    });\n  }\n\n  dismiss(){\n    this.modalCtrl.dismiss();\n  }\n\n  save(){\n    Object.keys(this.form.controls).forEach(key => {\n      this.userDataService.medicalRecordValue[key]=this.form.value[key];\n      console.log(key, this.form.get(key).value)\n    });\n    this.userDataService.saveMedicalRecord();\n    this.modalCtrl.dismiss();\n    location.reload();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ2aWV3LW9wZXJhdGl2ZS1oaXN0b3J5LnBhZ2Uuc2NzcyJ9 */\";","const HapticEngine = {\n  getEngine() {\n    const win = window;\n    return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n  },\n  available() {\n    return !!this.getEngine();\n  },\n  isCordova() {\n    return !!window.TapticEngine;\n  },\n  isCapacitor() {\n    const win = window;\n    return !!win.Capacitor;\n  },\n  impact(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.impact({ style });\n  },\n  notification(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.notification({ style });\n  },\n  selection() {\n    this.impact({ style: 'light' });\n  },\n  selectionStart() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionStart();\n    }\n    else {\n      engine.gestureSelectionStart();\n    }\n  },\n  selectionChanged() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionChanged();\n    }\n    else {\n      engine.gestureSelectionChanged();\n    }\n  },\n  selectionEnd() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionEnd();\n    }\n    else {\n      engine.gestureSelectionEnd();\n    }\n  }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n  HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n  HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n  HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n  HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n  HapticEngine.impact(options);\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button color=\\\"danger\\\" (click)=\\\"dismiss()\\\">Cancel</ion-button>\\n    </ion-buttons>\\n    <ion-title>New Appointment</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"save()\\\">Done</ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <form [formGroup]=\\\"form\\\">\\n    <ion-card>\\n      <ion-item>\\n        <ion-input placeholder='Title' formControlName=\\\"title\\\"></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-input placeholder='Doctor' formControlName=\\\"doctor\\\"></ion-input>\\n      </ion-item>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-input placeholder='Location' formControlName=\\\"location\\\"></ion-input>\\n      </ion-item>\\n    </ion-card>\\n\\n    <ion-card>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-icon name=\\\"calendar-clear-outline\\\" slot=\\\"start\\\"></ion-icon>\\n        <ion-label>Date</ion-label>\\n        <ion-datetime \\n        placeholder=\\\"Select Date\\\"\\n        display-format=\\\"D/MMM/YYYY HH:mm\\\" \\n        formControlName=\\\"appointmentDate\\\"></ion-datetime>\\n      </ion-item>\\n    </ion-card>\\n\\n    <ion-card>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-icon name=\\\"alarm-outline\\\" slot=\\\"start\\\"></ion-icon>\\n        <ion-label>Alarm</ion-label>\\n        <ion-select \\n        formControlName=\\\"alarmDateTime\\\" \\n        interface=\\\"action-sheet\\\"\\n        style=\\\"max-width: 100%;\\\">\\n        <ion-select-option value={{0}}>At time of event</ion-select-option>\\n          <ion-select-option value={{1000*60*30}}>30 minutes before</ion-select-option>\\n          <ion-select-option value={{1000*60*60}}>1 hour before</ion-select-option>\\n          <ion-select-option value={{1000*60*120}}>2 hours before</ion-select-option>\\n          <ion-select-option value={{1000*60*60*24}}>1 day before</ion-select-option>\\n          <ion-select-option value={{1000*60*60*48}}>2 days before</ion-select-option>\\n          <ion-select-option value={{1000*60*60*24*7}}>1 week before</ion-select-option>\\n        </ion-select>\\n      </ion-item>\\n    </ion-card>\\n  </form>\\n</ion-content>\\n\";","import { Component, OnInit, Input } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { FormBuilder, FormGroup, FormControl, Validators, ReactiveFormsModule} from '@angular/forms'\nimport { UserDataService } from '../services/user-data.service'; \n\n@Component({\n  selector: 'app-edit-pathology',\n  templateUrl: './edit-pathology.page.html',\n  styleUrls: ['./edit-pathology.page.scss'],\n})\nexport class EditPathologyPage implements OnInit {\n  @Input()isModal: boolean;\n  public form: FormGroup;\n  public tubeSizeList = ['2.5','3.0','3.5','4.0','4.5','5.0','6.0','7.0','8.0'];\n\n  constructor(private modalCtrl:ModalController, \n    public fb: FormBuilder,\n    public userDataService:UserDataService,\n  ) { \n    this.form = this.fb.group({\n      pathology: ['',Validators.required],\n      intubatation: ['', Validators.required],\n      airwayGrade: ['', Validators.required],\n      tubeSize: ['', Validators.required],\n      details: ['', Validators.required],\n    });\n  }\n\n  async ngOnInit() {\n    await this.userDataService.loadMedicalRecord();\n    Object.keys(this.form.controls).forEach(key => {\n      this.form.get(key).setValue(this.userDataService.medicalRecordValue[key]);\n      console.log(key, this.form.get(key).value)\n    });\n  }\n\n  dismiss(){\n    this.modalCtrl.dismiss();\n  }\n\n  save(){\n    Object.keys(this.form.controls).forEach(key => {\n      this.userDataService.medicalRecordValue[key]=this.form.value[key];\n      console.log(key, this.form.get(key).value)\n    });\n    this.userDataService.saveMedicalRecord();\n    this.modalCtrl.dismiss();\n    location.reload();\n  }\n\n  intubatation(){\n    console.log(this.form.value.intubatation);\n  }\n\n}\n","export default \".userProfile ion-label:last-child {\\n  text-align: end;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL29wZW4tdmVyc2lvbi5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxlQUFBO0FBQ0oiLCJmaWxlIjoib3Blbi12ZXJzaW9uLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi51c2VyUHJvZmlsZSBpb24tbGFiZWw6bGFzdC1jaGlsZHtcbiAgICB0ZXh0LWFsaWduOiBlbmQ7XG59Il19 */\";","export default \"ion-button {\\n  width: 90%;\\n  margin: auto;\\n  margin-top: 10%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2FwcG9pbnRtZW50LXJlbWluZGVyLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFVBQUE7RUFDQSxZQUFBO0VBQ0EsZUFBQTtBQUNKIiwiZmlsZSI6ImFwcG9pbnRtZW50LXJlbWluZGVyLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1idXR0b24ge1xuICAgIHdpZHRoOiA5MCU7XG4gICAgbWFyZ2luOiBhdXRvO1xuICAgIG1hcmdpbi10b3A6IDEwJTtcbn0iXX0= */\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button color=\\\"danger\\\" (click)=\\\"dismiss()\\\">Cancel</ion-button>\\n    </ion-buttons>\\n    <ion-title>Edit</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"save()\\\">Done</ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <form [formGroup]=\\\"form\\\">\\n    <ion-list>\\n      <ion-list-header lines=\\\"full\\\">\\n        <ion-label>\\n          Allergies\\n        </ion-label>\\n      </ion-list-header>\\n\\n      <ion-item lines='full'>\\n        <ion-textarea autoGrow=\\\"true\\\" rows=\\\"2\\\"\\n        placeholder=\\\"Enter any known allergies\\\"\\n        formControlName=\\\"allergies\\\"></ion-textarea>\\n      </ion-item>\\n    </ion-list>\\n\\n    <ion-list>\\n      <ion-list-header lines=\\\"full\\\">\\n        <ion-label>\\n          Medications\\n        </ion-label>\\n      </ion-list-header>\\n\\n      <ion-item lines='full'>\\n        <ion-textarea autoGrow=\\\"true\\\" rows=\\\"2\\\"\\n        placeholder=\\\"Enter current medications\\\"\\n        formControlName=\\\"medications\\\"></ion-textarea>\\n      </ion-item>\\n    </ion-list>\\n\\n    <ion-list>\\n      <ion-list-header lines=\\\"full\\\">\\n        <ion-label>\\n          Other Medical Conditions\\n        </ion-label>\\n      </ion-list-header>\\n\\n      <ion-item lines='full'>\\n        <ion-textarea autoGrow=\\\"true\\\" rows=\\\"2\\\"\\n        placeholder=\\\"Enter other medical conditions\\\"\\n        formControlName=\\\"otherMedicalConditions\\\"></ion-textarea>\\n      </ion-item>\\n    </ion-list>\\n  </form>\\n</ion-content>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJlZGl0LW9wZXJhdGl2ZS1oaXN0b3J5LnBhZ2Uuc2NzcyJ9 */\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button color=\\\"danger\\\" (click)=\\\"dismiss()\\\">Cancel</ion-button>\\n    </ion-buttons>\\n    <ion-title>Add New Record</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"save()\\\">Done</ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <form [formGroup]=\\\"form\\\">\\n    <ion-list>\\n      <ion-list-header lines=\\\"full\\\">\\n        <ion-label>\\n          Operative History\\n        </ion-label>\\n      </ion-list-header>\\n\\n      <ion-item>\\n        <ion-label>Date</ion-label>\\n        <ion-datetime placeholder=\\\"Select Date\\\"\\n        display-format=\\\"D MMM YYYY\\\" \\n        picker-format=\\\"D MMM YYYY\\\" \\n        formControlName=\\\"date\\\" \\n        style=\\\"color: dodgerblue;\\\"></ion-datetime>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label>Type</ion-label>\\n        <ion-input \\n          formControlName=\\\"type\\\" \\n          placeholder=\\\"Operation Type\\\"\\n          style=\\\"color: dodgerblue; text-align: end;\\\">\\n        </ion-input>\\n      </ion-item>\\n\\n      <ion-item lines=\\\"full\\\"> \\n        <ion-label position=\\\"stacked\\\">Details</ion-label>\\n        <ion-textarea rows=\\\"6\\\"\\n        placeholder=\\\"Enter Details\\\" \\n        formControlName=\\\"details\\\"></ion-textarea>\\n      </ion-item>\\n    </ion-list>\\n  </form>\\n\\n  <ion-item lines='full' (click)=\\\"addPhotoToGallery()\\\">\\n    <ion-icon name=\\\"add-circle-outline\\\" style=\\\"color:dodgerblue;\\\"></ion-icon>\\n    Add pictures\\n  </ion-item>\\n\\n  <ion-grid>\\n    <ion-row>\\n    <ion-col size=\\\"6\\\"\\n      *ngFor=\\\"let photo of photos; index as position; let counter = index\\\">\\n        <ion-img [src]=\\\"photo.webviewPath\\\" (click)=\\\"openViewer(photo.webviewPath)\\\"></ion-img>\\n    </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n\\n</ion-content>\\n\";"]}