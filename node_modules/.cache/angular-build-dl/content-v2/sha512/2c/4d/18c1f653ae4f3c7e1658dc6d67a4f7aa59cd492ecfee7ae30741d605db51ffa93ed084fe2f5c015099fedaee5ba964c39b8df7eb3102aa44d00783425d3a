{"version":3,"sources":["webpack:///src/app/settings/settings-routing.module.ts","webpack:///src/app/settings/settings.module.ts","webpack:///src/app/settings/settings.page.scss","webpack:///src/app/services/user-data.service.ts","webpack:///src/app/settings/settings.page.ts","webpack:///src/app/settings/settings.page.html"],"names":["routes","path","component","SettingsPageRoutingModule","imports","forChild","exports","SettingsPageModule","declarations","Storage","UserDataService","userProfileValue","userProfileKey","userProfileString","medicalRecordValue","medicalRecordKey","medicalRecordString","versionHistoryValue","versionHistoryKey","exporter","exporterString","JSON","stringify","userProfile","medicalRecord","get","key","userProfileGet","parse","value","console","log","versionHistoryGet","oldDataGet","oldDataValue","toSave","time","Date","toISOString","slice","type","saveVersion","set","medicalRecordGet","unshift","length","providedIn","SettingsPage","alertController","barcodeScanner","userDataService","LoginService","isResetStorage","barcodeScannerOptions","showTorchButton","showFlipCameraButton","loadUserProfile","create","header","message","buttons","text","role","cssClass","handler","blah","scanCode","alert","present","scan","then","barcodeData","scannedData","err","convertToString","encode","Encode","TEXT_TYPE","encodedData","encodeData","cancel","clear","selector","template"],"mappings":"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","file":"settings-settings-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SettingsPage } from './settings.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SettingsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SettingsPageRoutingModule } from './settings-routing.module';\n\nimport { SettingsPage } from './settings.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SettingsPageRoutingModule\n  ],\n  declarations: [SettingsPage]\n})\nexport class SettingsPageModule {}\n","export default \"div {\\n  width: 80%;\\n  margin: auto;\\n  margin-top: 10%;\\n}\\n\\nion-button ion-icon {\\n  position: absolute;\\n  left: 10%;\\n}\\n\\nion-button ion-text {\\n  position: absolute;\\n  left: 30%;\\n}\\n\\ndiv ion-button {\\n  margin-top: 8%;\\n}\\n\\n#reset {\\n  position: fixed;\\n  left: 50%;\\n  transform: translate(-50%, 0);\\n  bottom: 10%;\\n}\\n\\n#isReset {\\n  width: 80%;\\n  position: fixed;\\n  left: 50%;\\n  transform: translate(-50%, 0);\\n  bottom: 10%;\\n  text-align: center;\\n}\\n\\n#isReset ion-text {\\n  color: red;\\n  font-weight: bold;\\n  font-size: large;\\n}\\n\\n#isReset ion-icon {\\n  color: red;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NldHRpbmdzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFVBQUE7RUFDQSxZQUFBO0VBQ0EsZUFBQTtBQUNKOztBQUVBO0VBQ0ksa0JBQUE7RUFDQSxTQUFBO0FBQ0o7O0FBRUE7RUFDSSxrQkFBQTtFQUNBLFNBQUE7QUFDSjs7QUFFQTtFQUNJLGNBQUE7QUFDSjs7QUFFQTtFQUNJLGVBQUE7RUFDQSxTQUFBO0VBQ0EsNkJBQUE7RUFDQSxXQUFBO0FBQ0o7O0FBRUE7RUFDSSxVQUFBO0VBQ0EsZUFBQTtFQUNBLFNBQUE7RUFDQSw2QkFBQTtFQUNBLFdBQUE7RUFDQSxrQkFBQTtBQUNKOztBQUVBO0VBQ0ksVUFBQTtFQUNBLGlCQUFBO0VBQ0EsZ0JBQUE7QUFDSjs7QUFFQTtFQUNJLFVBQUE7QUFDSiIsImZpbGUiOiJzZXR0aW5ncy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJkaXYge1xuICAgIHdpZHRoOiA4MCU7XG4gICAgbWFyZ2luOiBhdXRvO1xuICAgIG1hcmdpbi10b3A6IDEwJTtcbn1cblxuaW9uLWJ1dHRvbiBpb24taWNvbiB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDEwJTtcbn1cblxuaW9uLWJ1dHRvbiBpb24tdGV4dCB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDMwJTtcbn1cblxuZGl2IGlvbi1idXR0b24ge1xuICAgIG1hcmdpbi10b3A6IDglO1xufVxuXG4jcmVzZXQge1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICBsZWZ0OiA1MCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwwKTtcbiAgICBib3R0b206IDEwJTtcbn1cblxuI2lzUmVzZXQge1xuICAgIHdpZHRoOiA4MCU7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIGxlZnQ6IDUwJTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLDApO1xuICAgIGJvdHRvbTogMTAlO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuI2lzUmVzZXQgaW9uLXRleHR7XG4gICAgY29sb3I6cmVkO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIGZvbnQtc2l6ZTogbGFyZ2U7XG59XG5cbiNpc1Jlc2V0IGlvbi1pY29uIHtcbiAgICBjb2xvcjpyZWQ7XG59Il19 */\";","import { Injectable } from '@angular/core';\n\nimport { Plugins, Capacitor, } from '@capacitor/core';\n\nconst { Storage } = Plugins;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserDataService {\n\n  public userProfileValue = {};\n  public userProfileKey: string = \"userProfile\";\n  public userProfileString: string = \"\";\n\n  public medicalRecordValue = {};\n  public medicalRecordKey:string = \"medicalRecord\";\n  public medicalRecordString: string = \"\";\n\n  public versionHistoryValue = [];\n  public versionHistoryKey:string = 'versionHistory';\n\n  public exporter = {};\n  public exporterString = \"\";\n\n  constructor() { }\n  async exportData() {\n    this.userProfileString = JSON.stringify(this.userProfileValue);\n    this.medicalRecordString = JSON.stringify(this.medicalRecordValue);\n\n    this.exporter = {\n      userProfile: this.userProfileString,\n      medicalRecord: this.medicalRecordString,\n    }\n    this.exporterString = JSON.stringify(this.exporter);\n  }\n\n  async loadUserProfile(){\n    const userProfileGet= await Storage.get({ key: this.userProfileKey });\n    this.userProfileValue = JSON.parse(userProfileGet.value) || {};\n    console.log(\"finished loading\");\n    const versionHistoryGet = await Storage.get({ key: this.versionHistoryKey });\n    this.versionHistoryValue = JSON.parse(versionHistoryGet.value) || [];\n  } //load user profile from storage\n\n  async saveUserProfile() {\n    const oldDataGet = await Storage.get({ key: this.userProfileKey});\n    const oldDataValue = JSON.parse(oldDataGet.value) || {};\n    console.log(oldDataValue);\n    const toSave = {\n      time: new Date().toISOString().slice(0,16),\n      type: 'User Profile',\n      value: oldDataValue,\n    }\n    this.saveVersion(toSave);\n    Storage.set({\n      key: this.userProfileKey,\n      value: JSON.stringify(this.userProfileValue),\n    })\n  } //save updated user profile to storage\n\n  async loadMedicalRecord(){\n    const medicalRecordGet= await Storage.get({ key: this.medicalRecordKey });\n    this.medicalRecordValue = JSON.parse(medicalRecordGet.value) || {};\n    console.log(\"finished loading\");\n    const versionHistoryGet = await Storage.get({ key: this.versionHistoryKey });\n    this.versionHistoryValue = JSON.parse(versionHistoryGet.value) || [];\n  } //load medical record from storage\n\n  async saveMedicalRecord() {\n    const oldDataGet = await Storage.get({ key: this.medicalRecordKey});\n    const oldDataValue = JSON.parse(oldDataGet.value) || {};\n    const toSave = {\n      time: new Date().toISOString().slice(0,16),\n      type: 'Medical Record',\n      value: oldDataValue,\n    }\n    this.saveVersion(toSave);\n    Storage.set({\n      key: this.medicalRecordKey,\n      value: JSON.stringify(this.medicalRecordValue),\n    })\n  } //save new medical record to storage\n\n  saveVersion(toSave: any){\n    this.versionHistoryValue.unshift(toSave);\n    console.log(this.versionHistoryValue);\n    console.log(this.versionHistoryValue.length);\n    if (this.versionHistoryValue.length > 10) {\n      console.log(\"too long\")\n      this.versionHistoryValue = this.versionHistoryValue.slice(0,10);\n      console.log(this.versionHistoryValue);\n    }\n    Storage.set({\n      key: this.versionHistoryKey,\n      value: JSON.stringify(this.versionHistoryValue)\n    })\n  }\n\n  convertToString() {\n    this.userProfileString = JSON.stringify(this.userProfileValue);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  BarcodeScannerOptions,\n  BarcodeScanner\n} from \"@ionic-native/barcode-scanner/ngx\";\nimport { UserDataService } from '../services/user-data.service'; \nimport { LoginService } from '../services/login.service'; \nimport { AlertController } from '@ionic/angular';\nimport { Plugins, Capacitor, } from '@capacitor/core';\nconst { Storage } = Plugins;\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.page.html',\n  styleUrls: ['./settings.page.scss'],\n})\nexport class SettingsPage implements OnInit {\n  public encodeData: any;\n  public scannedData: {} ;\n  public barcodeScannerOptions: BarcodeScannerOptions;\n  public isResetStorage = false;\n\n  constructor(\n    public alertController: AlertController, \n    private barcodeScanner: BarcodeScanner, \n    public userDataService: UserDataService, \n    public LoginService: LoginService,\n  ) {\n    this.barcodeScannerOptions = {\n      showTorchButton: true,\n      showFlipCameraButton: true\n    };\n  }\n\n  async ngOnInit() {\n    //load user data \n    await this.userDataService.loadUserProfile();\n    console.log(\"started app\");\n  }\n\n  //alert\n  async alertScanCode() {\n    const alert = await this.alertController.create({\n      header: 'Confirm Update!',\n      message: 'The record in the App will be replaced by the values scanned from QR Code',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: (blah) => {\n            console.log('Confirm Cancel: blah');\n          }\n        }, {\n          text: 'Confirm',\n          handler: (blah) => {\n            this.scanCode()\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n  //scan qrcode\n  async scanCode() {\n    //await this.LoginService.stopPauseMonitor();\n    await this.barcodeScanner.scan().then( barcodeData => {\n      console.log(barcodeData);\n      //alert(\"Barcode data \" + JSON.stringify(barcodeData));\n      //extracting the text scanned \n      this.scannedData = JSON.parse(barcodeData[\"text\"]);\n      console.log(\"Scanning User Data\");\n      console.log(this.scannedData[\"userProfile\"]);\n      console.log(typeof this.scannedData[\"userProfile\"]);\n      console.log(\"Scanning Medical Data\");\n      console.log(this.scannedData[\"medicalRecord\"]);\n      console.log(typeof this.scannedData[\"medicalRecord\"]);\n      console.log(\"ending Data\");\n      //for each data in the JSON Scanned\n      Storage.set({\n        key: this.userDataService.userProfileKey,\n        value: this.scannedData[\"userProfile\"]\n      })\n      Storage.set({\n        key: this.userDataService.medicalRecordKey,\n        value: this.scannedData[\"medicalRecord\"]\n      })\n    })\n    .catch(err => {\n      console.log(\"Error\", err);\n    });\n    //await this.LoginService.startPauseMonitor();\n  }\n\n  //encode all data fro current user to qr code\n  async encodData() {\n    //await this.LoginService.stopPauseMonitor();\n    this.userDataService.convertToString();\n    await this.barcodeScanner\n      .encode(this.barcodeScanner.Encode.TEXT_TYPE, this.userDataService.userProfileString)\n      .then(\n        encodedData => {\n          console.log(encodedData);\n          this.encodeData = encodedData;\n        },\n        err => {\n          console.log(\"Error occured : \" + err);\n        }\n      );\n    //await this.LoginService.startPauseMonitor();\n  }\n\n  //reset storage\n  async resetStorage(){\n    const alert = await this.alertController.create({\n      header: 'Reset Storage',\n      message: 'All data will be deleted.',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: (cancel) => {\n            console.log('Confirm Cancel: cancel');\n          }\n        }, {\n          text: 'Delete',\n          handler: (blah) => {\n            Storage.clear();\n            this.isResetStorage = true;\n          }\n        }\n      ]\n    });\n    await alert.present();\n    console.log(\"Storage Cleared\");\n  }\n}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"home\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Settings</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n<div>\\n<!--   <ion-button color=\\\"secondary\\\" expand=\\\"block\\\" (click)=\\\"alertScanCode()\\\" style=\\\"margin-bottom: 5%;\\\">\\n    <ion-icon slot=\\\"start\\\" name=\\\"qr-code-outline\\\"></ion-icon>\\n    <ion-text slot=\\\"end\\\">Import from QR Code</ion-text>\\n  </ion-button>\\n\\n  <ion-button color=\\\"secondary\\\" expand=\\\"block\\\" routerLink=\\\"qr-code-gen\\\" style=\\\"margin-bottom: 5%;\\\">\\n    <ion-icon slot=\\\"start\\\" name=\\\"share-outline\\\"></ion-icon>\\n    <ion-text slot=\\\"end\\\">Export To QR Code</ion-text>\\n  </ion-button> -->\\n\\n  <ion-button color=\\\"warning\\\" expand=\\\"block\\\" routerLink=\\\"version-history\\\" style=\\\"margin-bottom: 5%;\\\">\\n    <ion-icon slot=\\\"start\\\" name=\\\"reload-outline\\\"></ion-icon>\\n    <ion-text slot=\\\"end\\\">Version History</ion-text>\\n  </ion-button>\\n\\n  <ion-button color=\\\"danger\\\" expand=\\\"block\\\" routerLink=\\\"change-pw\\\" style=\\\"margin-bottom: 5%;\\\">\\n    <ion-icon slot=\\\"start\\\" name=\\\"lock-closed-outline\\\"></ion-icon>\\n    <ion-text slot=\\\"end\\\">Change Password</ion-text>\\n  </ion-button>\\n</div>\\n\\n<div id=\\\"reset\\\" *ngIf = \\\"!isResetStorage\\\">\\n  <ion-button color=\\\"medium\\\" expand=\\\"block\\\" (click)=\\\"resetStorage()\\\">\\n    <ion-icon slot=\\\"start\\\" name=\\\"trash-outline\\\"></ion-icon>\\n    <ion-text slot=\\\"end\\\">Reset Storage</ion-text>\\n  </ion-button>\\n</div>\\n<div id=\\\"isReset\\\" *ngIf = \\\"isResetStorage\\\">\\n  <ion-text>Storage has been reseted.</ion-text>\\n</div>\\n\\n</ion-content>\\n\";"]}