{"version":3,"sources":["./src/app/edit-pathology/edit-pathology-routing.module.ts","./src/app/services/user-data.service.ts","./src/app/edit-pathology/edit-pathology.module.ts"],"names":[],"mappings":"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","file":"edit-pathology-edit-pathology-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EditPathologyPage } from './edit-pathology.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EditPathologyPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EditPathologyPageRoutingModule {}\n","import { Injectable } from '@angular/core';\n\nimport { Plugins, Capacitor, } from '@capacitor/core';\n\nconst { Storage } = Plugins;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserDataService {\n\n  public userProfileValue = {};\n  private userProfileKey: string = \"userProfile\";\n  public userProfileString: string = \"\";\n\n  public medicalRecordValue = {};\n  private medicalRecordKey:string = \"medicalRecord\";\n\n  public versionHistoryValue = [];\n  private versionHistoryKey:string = 'versionHistory';\n\n  constructor() { }\n\n  async loadUserProfile(){\n    const userProfileGet= await Storage.get({ key: this.userProfileKey });\n    this.userProfileValue = JSON.parse(userProfileGet.value) || {};\n    console.log(\"finished loading\");\n    const versionHistoryGet = await Storage.get({ key: this.versionHistoryKey });\n    this.versionHistoryValue = JSON.parse(versionHistoryGet.value) || [];\n  } //load user profile from storage\n\n  async saveUserProfile() {\n    const oldDataGet = await Storage.get({ key: this.userProfileKey});\n    const oldDataValue = JSON.parse(oldDataGet.value) || {};\n    console.log(oldDataValue);\n    const toSave = {\n      time: new Date().toISOString().slice(0,16),\n      type: 'User Profile',\n      value: oldDataValue,\n    }\n    this.saveVersion(toSave);\n    Storage.set({\n      key: this.userProfileKey,\n      value: JSON.stringify(this.userProfileValue),\n    })\n  } //save updated user profile to storage\n\n  async loadMedicalRecord(){\n    const medicalRecordGet= await Storage.get({ key: this.medicalRecordKey });\n    this.medicalRecordValue = JSON.parse(medicalRecordGet.value) || {};\n    console.log(\"finished loading\");\n    const versionHistoryGet = await Storage.get({ key: this.versionHistoryKey });\n    this.versionHistoryValue = JSON.parse(versionHistoryGet.value) || [];\n  } //load medical record from storage\n\n  async saveMedicalRecord() {\n    const oldDataGet = await Storage.get({ key: this.medicalRecordKey});\n    const oldDataValue = JSON.parse(oldDataGet.value) || {};\n    const toSave = {\n      time: new Date().toISOString().slice(0,16),\n      type: 'Medical Record',\n      value: oldDataValue,\n    }\n    this.saveVersion(toSave);\n    Storage.set({\n      key: this.medicalRecordKey,\n      value: JSON.stringify(this.medicalRecordValue),\n    })\n  } //save new medical record to storage\n\n  saveVersion(toSave: any){\n    this.versionHistoryValue.unshift(toSave);\n    console.log(this.versionHistoryValue);\n    console.log(this.versionHistoryValue.length);\n    if (this.versionHistoryValue.length > 10) {\n      console.log(\"too long\")\n      this.versionHistoryValue = this.versionHistoryValue.slice(0,10);\n      console.log(this.versionHistoryValue);\n    }\n    Storage.set({\n      key: this.versionHistoryKey,\n      value: JSON.stringify(this.versionHistoryValue)\n    })\n  }\n\n  convertToString() {\n    this.userProfileString = JSON.stringify(this.userProfileValue);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule} from '@angular/forms'\nimport { IonicModule } from '@ionic/angular';\n\nimport { EditPathologyPageRoutingModule } from './edit-pathology-routing.module';\n\nimport { EditPathologyPage } from './edit-pathology.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    EditPathologyPageRoutingModule\n  ],\n  declarations: [EditPathologyPage]\n})\nexport class EditPathologyPageModule {}\n"],"sourceRoot":"webpack:///"}