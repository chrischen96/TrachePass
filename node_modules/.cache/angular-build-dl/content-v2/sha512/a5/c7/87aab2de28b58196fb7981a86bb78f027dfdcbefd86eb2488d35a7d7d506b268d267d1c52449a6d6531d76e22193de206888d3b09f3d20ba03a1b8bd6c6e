{"version":3,"sources":["./src/app/services/appointment.service.ts","./src/app/appointment-reminder/appointment-reminder.page.ts","./src/app/appointment-reminder/appointment-reminder.page.html","./src/app/appointment-reminder/appointment-reminder.page.scss"],"names":[],"mappings":"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","file":"default~appointment-reminder-appointment-reminder-module~appointments-appointments-module~saved-appo~92ed99fe-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { LocalNotification, LocalNotificationPendingList, Plugins, } from '@capacitor/core';\n\nconst { Storage, LocalNotifications } = Plugins;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppointmentService {\n\n  public appiontment = {};\n  //set the strage key for photos can be changed\n  private APPOINTMENT_STORAGE: string = \"appointment\";\n\n  constructor() { }\n\n  public async loadAppointment(){\n    // create a promise that load the data from database\n    const appiontmentJSON = await Storage.get({ key: this.APPOINTMENT_STORAGE });\n    // set the current session value using data from DB, if it doesn't exist it wll initialize a empty array\n    this.appiontment = JSON.parse(appiontmentJSON.value) || {};\n    console.log(\"finished loading\");\n  }\n\n  public async saveValue() {\n    // console.log(\"setting data\")\n    // convert to strig\n    const JSONString = JSON.stringify(this.appiontment);\n    // store the value in to the pair\n    Storage.set({\n      key: this.APPOINTMENT_STORAGE,\n      value: JSONString\n    })\n  }\n\n  public async setReminder(appointmentTimeStr, appointmentDateStr,reminderTime, doctor, location) {\n    var notificationTitle = \"Appointment at \" + appointmentTimeStr + ' on ' + appointmentDateStr;\n    var notificationText  = \"You have an appointment at \" + appointmentTimeStr + ' on ' + appointmentDateStr + \" with Dr. \" + doctor + \" at \" + location;\n    //const pendingList : LocalNotificationPendingList = await LocalNotifications.getPending();\n    //const clear = await LocalNotifications.cancel(pendingList);\n    //console.log(\"cleared all previous\", clear)\n    await LocalNotifications.schedule({\n      notifications:[\n        {\n          id: 1,\n          title: notificationTitle,\n          body: notificationText,\n          schedule: {at: new Date(reminderTime)},\n        }\n      ]\n    })\n    console.log(\"reminder set\");\n    const pendingList : LocalNotificationPendingList = await LocalNotifications.getPending();\n    console.log(pendingList);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\n//load browser plugin\nimport { Plugins } from '@capacitor/core';\nconst { Browser } = Plugins;\n\nimport {Validators, FormBuilder, FormGroup } from '@angular/forms';\nimport { AppointmentService } from '../services/appointment.service'; \n\n@Component({\n  selector: 'app-appointment-reminder',\n  templateUrl: './appointment-reminder.page.html',\n  styleUrls: ['./appointment-reminder.page.scss'],\n})\nexport class AppointmentReminderPage implements OnInit {\n\n  public today = new Date().toISOString();\n/*   public todayString = new Date(this.today.toString().slice(0,21)).toISOString();\n  public dateNow = this.todayString.slice(0,10);\n  public timeNow = this.todayString.slice(11,19);\n  public plus1Year = this.today.getFullYear();\n  public plus1YearString = this.plus1Year + 1; */\n  public form : FormGroup;\n  public isLocationSetted: Boolean;\n  public isAppointmentSetted: Boolean;\n  public timeSlots = {\n    '30 minutes before': '${1000*60*30}',\n    '1 hour before': '${1000*60*60}',\n    '2 hours before': '${1000*60*120}',\n    '1 day before': '${1000*60*60*24}',\n    '2 days before': '${1000*60*60*48}',\n    '1 week before': '${1000*60*60*24*7}',\n  };\n\n  constructor(\n    private formBuilder: FormBuilder, \n    public appointmentService: AppointmentService, \n    public modalCtrl: ModalController,\n  ) {\n    this.form = this.formBuilder.group({\n      appointmentDate: [this.today,],\n      appointmentTime: [this.today,],\n      alarmDateTime: [this.today,],\n      title: [''],\n      location: [''],\n      doctor: ['']\n    });\n  }\n\n  async openMap() {\n    \n    const link = \"https://www.google.com/maps/search/?api=1&query=\" + this.appointmentService.appiontment[\"Location\"]    \n    //console.log(link)\n    const encoded = encodeURI(link)\n    //console.log(encoded)\n    await Browser.open({url: encoded});\n  }\n\n\n  logForm(){\n    this.appointmentService.appiontment[\"appointmentDate\"] = this.form.value[\"appointmentDate\"].slice(0,10);\n    this.appointmentService.appiontment[\"appointmentTime\"] = this.form.value[\"appointmentTime\"].slice(11,16);\n    console.log(this.appointmentService.appiontment[\"appointmentDate\"]);\n    console.log(this.appointmentService.appiontment[\"appointmentTime\"]);\n    this.appointmentService.appiontment[\"alarmDateTime\"] = this.form.value[\"alarmDateTime\"];\n    console.log(this.appointmentService.appiontment[\"alarmDateTime\"]);\n    this.appointmentService.appiontment[\"Title\"] = this.form.value[\"title\"];\n    this.appointmentService.appiontment[\"Location\"] = this.form.value[\"location\"];\n    this.appointmentService.appiontment[\"Doctor\"] = this.form.value[\"doctor\"];\n/*     this.appointmentService.appiontment[\"Reminder\"] = new Date(this.form.value[\"reminder\"]).toString().slice(0, 21);\n    const isoReminder = this.appointmentService.appiontment[\"reminderDate\"]+'T'+ this.appointmentService.appiontment[\"reminderTime\"]\n    console.log(isoReminder);\n    const reminderObj = Date.parse(isoReminder);\n    console.log(reminderObj);\n    this.appointmentService.setReminder(\n      this.appointmentService.appiontment[\"appointmentTime\"], \n      this.appointmentService.appiontment[\"appointmentDate\"], \n      reminderObj, \n      this.appointmentService.appiontment[\"Doctor\"], \n      this.appointmentService.appiontment[\"Location\"]) */\n    this.appointmentService.saveValue();\n    this.isAppointmentSetted = true;\n    this.modalCtrl.dismiss();\n  }\n\n  ngOnInit() {\n  }\n\n  dismiss(){\n    this.modalCtrl.dismiss();\n  }\n\n  save(){\n    this.modalCtrl.dismiss();\n  }\n\n}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button color=\\\"danger\\\" (click)=\\\"dismiss()\\\">Cancel</ion-button>\\n    </ion-buttons>\\n    <ion-title>New Appointment</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"logForm()\\\">Done</ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <form [formGroup]=\\\"form\\\">\\n\\n    <ion-card>\\n      <ion-item>\\n        <ion-input placeholder='Title' formControlName=\\\"title\\\"></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-input placeholder='Doctor' formControlName=\\\"doctor\\\"></ion-input>\\n      </ion-item>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-input placeholder='Location' formControlName=\\\"location\\\"></ion-input>\\n      </ion-item>\\n    </ion-card>\\n\\n    <ion-card>\\n      <ion-item>\\n        <ion-icon name=\\\"calendar-clear-outline\\\" slot=\\\"start\\\"></ion-icon>\\n        <ion-label>Date</ion-label>\\n        <ion-datetime \\n        placeholder=\\\"Select Date\\\"\\n        display-format=\\\"D MMM YYYY\\\" \\n        picker-format=\\\"D MMM YYYY\\\" \\n        formControlName=\\\"appointmentDate\\\"></ion-datetime>\\n      </ion-item>\\n\\n      <ion-item lines=\\\"none\\\">\\n        <ion-icon name=\\\"time-outline\\\" slot=\\\"start\\\"></ion-icon>\\n        <ion-label>Time</ion-label>\\n        <ion-datetime \\n        placeholder=\\\"Select Date\\\"\\n        display-format=\\\"HH:mm\\\" \\n        picker-format=\\\"HH:mm\\\"\\n        formControlName=\\\"appointmentTime\\\"></ion-datetime>\\n      </ion-item>\\n    </ion-card>\\n\\n    <ion-card>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-icon name=\\\"alarm-outline\\\" slot=\\\"start\\\"></ion-icon>\\n        <ion-label>Alarm</ion-label>\\n        <ion-select \\n        formControlName=\\\"alarmDateTime\\\" \\n        interface=\\\"action-sheet\\\"\\n        style=\\\"max-width: 100%;\\\">\\n          <ion-select-option value={{1000*60*30}}>30 minutes before</ion-select-option>\\n          <ion-select-option value={{1000*60*60}}>1 hour before</ion-select-option>\\n          <ion-select-option value={{1000*60*120}}>2 hours before</ion-select-option>\\n          <ion-select-option value={{1000*60*60*24}}>1 day before</ion-select-option>\\n          <ion-select-option value={{1000*60*60*48}}>2 days before</ion-select-option>\\n          <ion-select-option value={{1000*60*60*24*7}}>1 week before</ion-select-option>\\n        </ion-select>\\n\\n\\n<!--         <ion-datetime \\n        placeholder=\\\"Select Date and Time\\\"\\n        display-format=\\\"D MMM YYYY HH:mm\\\" \\n        picker-format=\\\"D MMM YYYY HH:mm\\\"\\n        formControlName=\\\"alarmDateTime\\\"></ion-datetime> -->\\n      </ion-item>\\n    </ion-card>\\n\\n<!--     <ion-item>\\n      <ion-label>Date</ion-label>\\n      <ion-datetime formControlName=\\\"appointmentDate\\\" display-format=\\\"YYYY-MM-DD\\\" picker-format=\\\"YYYY-MM-DD\\\" [min]=\\\"this.dateNow\\\"></ion-datetime>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Time</ion-label>\\n      <ion-datetime formControlName=\\\"appointmentTime\\\" display-format=\\\"HH:mm\\\" picker-format=\\\"HH:mm\\\"></ion-datetime>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label>Date</ion-label>\\n      <ion-datetime formControlName=\\\"reminderDate\\\" display-format=\\\"YYYY-MM-DD\\\" picker-format=\\\"YYYY-MM-DD\\\" [min]=\\\"this.dateNow\\\"></ion-datetime>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Time</ion-label>\\n      <ion-datetime formControlName=\\\"reminderTime\\\" display-format=\\\"HH:mm\\\" picker-format=\\\"HH:mm\\\"></ion-datetime>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label>Location</ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"location\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Doctor</ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"doctor\\\"></ion-input>\\n    </ion-item> -->\\n\\n<!--     <ion-item lines=\\\"none\\\" *ngIf=\\\"isAppointmentSetted\\\">\\n      <ion-icon color=\\\"success\\\" slot=\\\"start\\\" name=\\\"checkmark-circle-outline\\\"></ion-icon>\\n      <ion-text color=\\\"success\\\" class=\\\"form-error\\\">\\n        Appointment Saved and Reminder Scheduled.\\n      </ion-text>\\n    </ion-item> -->\\n  </form>\\n</ion-content>\";","export default \"ion-button {\\n  width: 90%;\\n  margin: auto;\\n  margin-top: 10%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2FwcG9pbnRtZW50LXJlbWluZGVyLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFVBQUE7RUFDQSxZQUFBO0VBQ0EsZUFBQTtBQUNKIiwiZmlsZSI6ImFwcG9pbnRtZW50LXJlbWluZGVyLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1idXR0b24ge1xuICAgIHdpZHRoOiA5MCU7XG4gICAgbWFyZ2luOiBhdXRvO1xuICAgIG1hcmdpbi10b3A6IDEwJTtcbn0iXX0= */\";"],"sourceRoot":"webpack:///"}