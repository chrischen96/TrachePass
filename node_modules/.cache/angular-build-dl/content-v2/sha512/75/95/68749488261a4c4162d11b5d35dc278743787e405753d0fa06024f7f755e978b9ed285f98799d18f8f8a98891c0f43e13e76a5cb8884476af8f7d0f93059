{"version":3,"sources":["webpack:///src/app/services/user-data.service.ts","webpack:///src/app/form-temp/form-temp.page.ts","webpack:///src/app/form-temp/form-temp.page.html","webpack:///src/app/form-temp/form-temp-routing.module.ts","webpack:///src/app/form-temp/form-temp.module.ts","webpack:///src/app/form-temp/form-temp.page.scss"],"names":["Storage","UserDataService","userProfileValue","userProfileKey","userProfileString","medicalRecordValue","medicalRecordKey","versionHistoryValue","versionHistoryKey","get","key","userProfileGet","JSON","parse","value","console","log","versionHistoryGet","oldDataGet","oldDataValue","toSave","time","Date","toISOString","slice","type","saveVersion","set","stringify","medicalRecordGet","unshift","length","providedIn","FormTempPage","userDataService","loginService","loadUserProfile","selector","template","routes","path","component","FormTempPageRoutingModule","imports","forChild","exports","FormTempPageModule","declarations"],"mappings":"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","file":"form-temp-form-temp-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { Plugins, Capacitor, } from '@capacitor/core';\n\nconst { Storage } = Plugins;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserDataService {\n\n  public userProfileValue = {};\n  private userProfileKey: string = \"userProfile\";\n  public userProfileString: string = \"\";\n\n  public medicalRecordValue = {};\n  private medicalRecordKey:string = \"medicalRecord\";\n\n  public versionHistoryValue = [];\n  private versionHistoryKey:string = 'versionHistory';\n\n  constructor() { }\n\n  async loadUserProfile(){\n    const userProfileGet= await Storage.get({ key: this.userProfileKey });\n    this.userProfileValue = JSON.parse(userProfileGet.value) || {};\n    console.log(\"finished loading\");\n    const versionHistoryGet = await Storage.get({ key: this.versionHistoryKey });\n    this.versionHistoryValue = JSON.parse(versionHistoryGet.value) || [];\n  } //load user profile from storage\n\n  async saveUserProfile() {\n    const oldDataGet = await Storage.get({ key: this.userProfileKey});\n    const oldDataValue = JSON.parse(oldDataGet.value) || {};\n    console.log(oldDataValue);\n    const toSave = {\n      time: new Date().toISOString().slice(0,16),\n      type: 'User Profile',\n      value: oldDataValue,\n    }\n    this.saveVersion(toSave);\n    Storage.set({\n      key: this.userProfileKey,\n      value: JSON.stringify(this.userProfileValue),\n    })\n  } //save updated user profile to storage\n\n  async loadMedicalRecord(){\n    const medicalRecordGet= await Storage.get({ key: this.medicalRecordKey });\n    this.medicalRecordValue = JSON.parse(medicalRecordGet.value) || {};\n    console.log(\"finished loading\");\n    const versionHistoryGet = await Storage.get({ key: this.versionHistoryKey });\n    this.versionHistoryValue = JSON.parse(versionHistoryGet.value) || [];\n  } //load medical record from storage\n\n  async saveMedicalRecord() {\n    const oldDataGet = await Storage.get({ key: this.medicalRecordKey});\n    const oldDataValue = JSON.parse(oldDataGet.value) || {};\n    const toSave = {\n      time: new Date().toISOString().slice(0,16),\n      type: 'Medical Record',\n      value: oldDataValue,\n    }\n    this.saveVersion(toSave);\n    Storage.set({\n      key: this.medicalRecordKey,\n      value: JSON.stringify(this.medicalRecordValue),\n    })\n  } //save new medical record to storage\n\n  saveVersion(toSave: any){\n    this.versionHistoryValue.unshift(toSave);\n    console.log(this.versionHistoryValue);\n    console.log(this.versionHistoryValue.length);\n    if (this.versionHistoryValue.length > 10) {\n      console.log(\"too long\")\n      this.versionHistoryValue = this.versionHistoryValue.slice(0,10);\n      console.log(this.versionHistoryValue);\n    }\n    Storage.set({\n      key: this.versionHistoryKey,\n      value: JSON.stringify(this.versionHistoryValue)\n    })\n  }\n\n  convertToString() {\n    this.userProfileString = JSON.stringify(this.userProfileValue);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n//import user data service\nimport { UserDataService } from '../services/user-data.service'; \nimport { LoginService } from '../services/login.service'; \n\n\n@Component({\n  selector: 'app-form-temp',\n  templateUrl: './form-temp.page.html',\n  styleUrls: ['./form-temp.page.scss'],\n})\nexport class FormTempPage implements OnInit {\n  constructor(public userDataService: UserDataService, public loginService: LoginService) { }\n  async ngOnInit() {\n    //load user data \n    await this.userDataService.loadUserProfile();\n    //this.loginService.timeOut();\n  }\n}\n","export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">  \\n      <ion-menu-button color=\\\"dark\\\"></ion-menu-button>   \\n    </ion-buttons>  \\n    <ion-title>Patient Record</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list>\\n    <ion-toolbar>\\n      <ion-title>Patient Information</ion-title>\\n    </ion-toolbar>\\n    <ion-item>\\n      <ion-label>Patient Name: </ion-label>\\n      <!--if the value is in the object, load the value else pu in undefined-->\\n      <ion-text>{{this.userDataService.user[\\\"patientName\\\"] || \\\"Undefined\\\"}}</ion-text>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>NHS Number: </ion-label>\\n      <!--if the value is in the object, load the value else pu in undefined-->\\n      <ion-text>{{this.userDataService.user[\\\"nhsNum\\\"] || \\\"Undefined\\\"}}</ion-text>\\n    </ion-item>\\n    <ion-toolbar>\\n      <ion-title>Carer Information</ion-title>\\n    </ion-toolbar>\\n    <ion-item>\\n      <ion-label>Carer: </ion-label>\\n      <!--if the value is in the object, load the value else pu in undefined-->\\n      <ion-text>{{this.userDataService.user[\\\"carer\\\"] || \\\"Undefined\\\"}}</ion-text>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Phone Number: </ion-label>\\n      <!--if the value is in the object, load the value else pu in undefined-->\\n      <ion-text>{{this.userDataService.user[\\\"phoneNo\\\"] || \\\"Undefined\\\"}}</ion-text>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Relationship: </ion-label>\\n      <!--if the value is in the object, load the value else pu in undefined-->\\n      <ion-text>{{this.userDataService.user[\\\"relationship\\\"] || \\\"Undefined\\\"}}</ion-text>\\n    </ion-item>\\n    <ion-toolbar>\\n      <ion-title>Tube Information</ion-title>\\n    </ion-toolbar>\\n    <ion-item>\\n      <ion-label>Tube Type: </ion-label>\\n      <!--if the value is in the object, load the value else pu in undefined-->\\n      <ion-text>{{this.userDataService.user[\\\"tubeType\\\"] || \\\"Undefined\\\"}}</ion-text>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Sub Type: </ion-label>\\n      <!--if the value is in the object, load the value else pu in undefined-->\\n      <ion-text>{{this.userDataService.user[\\\"subType\\\"] || \\\"Undefined\\\"}}</ion-text>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Size/ID (mm): </ion-label>\\n      <!--if the value is in the object, load the value else pu in undefined-->\\n      <ion-text>{{this.userDataService.user[\\\"sizeID\\\"] || \\\"Undefined\\\"}}</ion-text>\\n    </ion-item>\\n   \\n    <ion-item>\\n      <ion-label>Shaft Length (mm): </ion-label>\\n      <!--if the value is in the object, load the value else pu in undefined-->\\n      <ion-text>{{this.userDataService.user[\\\"shaftLength\\\"] || \\\"Undefined\\\"}}</ion-text>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Suction Length: </ion-label>\\n      <!--if the value is in the object, load the value else pu in undefined-->\\n      <ion-text>{{this.userDataService.user[\\\"suctionLength\\\"] || \\\"Undefined\\\"}}</ion-text>\\n    </ion-item>\\n    <ion-toolbar>\\n      <ion-title>Notes On Patient</ion-title>\\n    </ion-toolbar>\\n    <ion-item>\\n      <ion-textarea row=\\\"12\\\" disabled>{{this.userDataService.user[\\\"notes\\\"] || \\\"Undefined\\\"}}</ion-textarea>\\n    </ion-item>\\n  </ion-list>\\n</ion-content>\\n\\n<ion-footer>\\n  <ion-button color=\\\"secondary\\\" expand=\\\"full\\\" href=\\\"test-field-data-input\\\">\\n    <ion-icon slot=\\\"start\\\" name=\\\"create-outline\\\"></ion-icon>\\n    Edit\\n  </ion-button>\\n  <ion-button expand=\\\"full\\\" color=\\\"warning\\\" href=\\\"home\\\">\\n    <ion-icon slot=\\\"start\\\" name=\\\"home-outline\\\"></ion-icon>\\n    Home\\n  </ion-button>\\n</ion-footer>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { FormTempPage } from './form-temp.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FormTempPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class FormTempPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { FormTempPageRoutingModule } from './form-temp-routing.module';\n\nimport { FormTempPage } from './form-temp.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    FormTempPageRoutingModule\n  ],\n  declarations: [FormTempPage]\n})\nexport class FormTempPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJmb3JtLXRlbXAucGFnZS5zY3NzIn0= */\";"]}