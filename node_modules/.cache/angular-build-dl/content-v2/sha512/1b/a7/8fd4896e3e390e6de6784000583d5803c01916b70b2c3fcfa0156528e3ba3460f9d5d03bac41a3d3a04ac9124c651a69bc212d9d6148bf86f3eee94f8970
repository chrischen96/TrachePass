!function(){function t(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function e(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{B9dj:function(n,o,i){"use strict";i.r(o),i.d(o,"PathologyPageModule",function(){return y});var r,c,a,d=i("ofXK"),b=i("3Pt+"),s=i("TEn/"),u=i("tyNb"),l=i("mrSG"),f=i("tWnK"),m=i("fXoL"),p=i("DPk/"),h=[{path:"",component:(r=function(){function n(e,o){t(this,n),this.modalCtrl=e,this.userDataService=o,this.medicalRecord={pathology:"No content",airwayCondition:"No content",otherMedicalConditions:"No content"}}var o,i,r;return o=n,(i=[{key:"ngOnInit",value:function(){return Object(l.a)(this,void 0,void 0,regeneratorRuntime.mark(function t(){var e=this;return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this.userDataService.loadMedicalRecord();case 2:Object.keys(this.userDataService.medicalRecordValue).forEach(function(t){Object.keys(e.medicalRecord).includes(t)&&(e.medicalRecord[t]=e.userDataService.medicalRecordValue[t]),console.log(t,e.medicalRecord[t])});case 3:case"end":return t.stop()}},t,this)}))}},{key:"edit",value:function(){return Object(l.a)(this,void 0,void 0,regeneratorRuntime.mark(function t(){return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this.modalCtrl.create({component:f.a,backdropDismiss:!1,componentProps:{isModal:!0}});case 2:t.sent.present();case 3:case"end":return t.stop()}},t,this)}))}}])&&e(o.prototype,i),r&&e(o,r),n}(),r.\u0275fac=function(t){return new(t||r)(m.Ib(s.P),m.Ib(p.a))},r.\u0275cmp=m.Cb({type:r,selectors:[["app-pathology"]],decls:28,vars:3,consts:[["slot","start"],["defaultHref","medical-record"],["slot","end"],[3,"click"]],template:function(t,e){1&t&&(m.Nb(0,"ion-header"),m.Nb(1,"ion-toolbar"),m.Nb(2,"ion-buttons",0),m.Jb(3,"ion-back-button",1),m.Mb(),m.Nb(4,"ion-title"),m.mc(5,"Pathology"),m.Mb(),m.Nb(6,"ion-buttons",2),m.Nb(7,"ion-button",3),m.Vb("click",function(){return e.edit()}),m.mc(8,"Edit"),m.Mb(),m.Mb(),m.Mb(),m.Mb(),m.Nb(9,"ion-content"),m.Nb(10,"ion-card"),m.Nb(11,"ion-card-header"),m.Nb(12,"ion-card-title"),m.mc(13,"Reason for Tracheostomy"),m.Mb(),m.Mb(),m.Nb(14,"ion-card-content"),m.mc(15),m.Mb(),m.Mb(),m.Nb(16,"ion-card"),m.Nb(17,"ion-card-header"),m.Nb(18,"ion-card-title"),m.mc(19,"Airway Condition for Intubation"),m.Mb(),m.Mb(),m.Nb(20,"ion-card-content"),m.mc(21),m.Mb(),m.Mb(),m.Nb(22,"ion-card"),m.Nb(23,"ion-card-header"),m.Nb(24,"ion-card-title"),m.mc(25,"Other Medical Conditions"),m.Mb(),m.Mb(),m.Nb(26,"ion-card-content"),m.mc(27),m.Mb(),m.Mb(),m.Mb()),2&t&&(m.xb(15),m.oc(" ",e.medicalRecord.pathology," "),m.xb(6),m.oc(" ",e.medicalRecord.airwayCondition," "),m.xb(6),m.oc(" ",e.medicalRecord.otherMedicalConditions," "))},directives:[s.v,s.M,s.h,s.e,s.f,s.K,s.g,s.p,s.i,s.k,s.m,s.j],styles:["ion-card-title[_ngcontent-%COMP%]{font-size:medium;font-weight:700;color:#ff7800}ion-card-header[_ngcontent-%COMP%]{padding-top:15px;padding-bottom:10px}ion-card-content[_ngcontent-%COMP%]{padding-bottom:15px;color:#000}"]}),r)}],M=((a=function e(){t(this,e)}).\u0275mod=m.Gb({type:a}),a.\u0275inj=m.Fb({factory:function(t){return new(t||a)},imports:[[u.i.forChild(h)],u.i]}),a),y=((c=function e(){t(this,e)}).\u0275mod=m.Gb({type:c}),c.\u0275inj=m.Fb({factory:function(t){return new(t||c)},imports:[[d.b,b.d,s.N,M]]}),c)}}])}();