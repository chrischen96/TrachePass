{"version":3,"sources":["webpack:///src/app/operative-history/operative-history.page.ts","webpack:///src/app/operative-history/operative-history-routing.module.ts","webpack:///src/app/operative-history/operative-history.page.scss","webpack:///src/app/services/user-data.service.ts","webpack:///src/app/operative-history/operative-history.module.ts","webpack:///src/app/operative-history/operative-history.page.html"],"names":["OperativeHistoryPage","modalCtrl","userDataService","actionSheetController","operativeHistoryJSON","operativeHistoryString","histories","loadMedicalRecord","medicalRecordValue","console","log","JSON","parse","Object","keys","forEach","key","push","i","length","j","Date","date","getTime","history","create","component","backdropDismiss","componentProps","isModal","modal","present","x","header","buttons","text","role","handler","splice","toString","stringify","saveMedicalRecord","actionSheet","selector","template","routes","path","OperativeHistoryPageRoutingModule","imports","forChild","exports","Storage","UserDataService","userProfileValue","userProfileKey","userProfileString","medicalRecordKey","get","userProfileGet","value","set","medicalRecordGet","providedIn","OperativeHistoryPageModule","declarations"],"mappings":"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","file":"operative-history-operative-history-module-es5.js","sourcesContent":["import { jsDocComment } from '@angular/compiler';\nimport { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { EditOperativeHistoryPage } from '../edit-operative-history/edit-operative-history.page';\nimport { UserDataService } from '../services/user-data.service'\nimport { ActionSheetController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-operative-history',\n  templateUrl: './operative-history.page.html',\n  styleUrls: ['./operative-history.page.scss'],\n})\nexport class OperativeHistoryPage implements OnInit {\n  public operativeHistoryJSON = {};\n  public operativeHistoryString = '';\n  public histories = [];\n\n  constructor(\n    private modalCtrl:ModalController,\n    public userDataService: UserDataService,\n    public actionSheetController: ActionSheetController,\n  ) { }\n\n  async ngOnInit() {\n    await this.userDataService.loadMedicalRecord();\n    this.operativeHistoryString = this.userDataService.medicalRecordValue['operativeHistory'];\n    console.log(this.operativeHistoryString);\n    if(this.operativeHistoryString!='' && this.operativeHistoryString!=null) {\n      this.operativeHistoryJSON = JSON.parse(this.operativeHistoryString);\n      console.log(this.operativeHistoryJSON);\n      Object.keys(this.operativeHistoryJSON).forEach(key => {\n        this.histories.push(JSON.parse(this.operativeHistoryJSON[key]));\n        console.log(this.histories);\n      });\n      for(let i=0; i<this.histories.length; i++){\n        for(let j=i+1; j<this.histories.length; j++){\n          if(new Date(this.histories[i].date).getTime()<new Date(this.histories[j].date).getTime()){\n            let history = this.histories[i];\n            this.histories[i]=this.histories[j];\n            this.histories[j]=history;\n          }\n        }\n      }\n    }\n    console.log(this.histories);\n/*     Object.keys(this.operativeHistoryJSON).forEach(key => {\n      this.operativeHistoryTuple.push(this.operativeHistoryJSON[key]);\n    }) */\n  }\n\n  async edit(){\n    const modal = await this.modalCtrl.create({\n      component: EditOperativeHistoryPage,\n      backdropDismiss: false,\n      componentProps: {\n        isModal: true\n      },\n    });\n    modal.present();\n  }\n\n  async delete(x: number) {\n    const actionSheet = await this.actionSheetController.create({\n      header: 'Edit',\n      buttons: [{ \n        text: 'Delete', \n        role: 'destructive' ,\n        handler: () => {\n/*           if(this.histories.length=1){\n            alert('Cannot delete last record');\n          } */\n          console.log('Delete clicked')\n          console.log(x);\n          this.histories.splice(x,1);\n          console.log(this.histories);\n          this.operativeHistoryJSON = {};\n          for(let i=0; i<this.histories.length; i++){\n            console.log(i.toString());\n            this.operativeHistoryJSON[i.toString()]=JSON.stringify(this.histories[i]);\n          }\n          console.log(this.histories);\n          console.log(this.operativeHistoryJSON);\n          this.userDataService.medicalRecordValue['operativeHistory']=JSON.stringify(this.operativeHistoryJSON);\n          this.userDataService.saveMedicalRecord();\n        }\n      },{ \n        text: 'Cancel', role: 'cancel' ,\n      }]\n    });\n    await actionSheet.present();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { OperativeHistoryPage } from './operative-history.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OperativeHistoryPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OperativeHistoryPageRoutingModule {}\n","export default \"h3:first-child {\\n  font-weight: bold;\\n  color: #797979;\\n  margin-bottom: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL29wZXJhdGl2ZS1oaXN0b3J5LnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGlCQUFBO0VBQ0EsY0FBQTtFQUNBLGtCQUFBO0FBQ0oiLCJmaWxlIjoib3BlcmF0aXZlLWhpc3RvcnkucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaDM6Zmlyc3QtY2hpbGR7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgY29sb3I6IHJnYigxMjEsIDEyMSwgMTIxKTtcbiAgICBtYXJnaW4tYm90dG9tOiA1cHg7XG59Il19 */\";","import { Injectable } from '@angular/core';\n\nimport { Plugins, Capacitor, } from '@capacitor/core';\n\nconst { Storage } = Plugins;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserDataService {\n\n  public userProfileValue = {};\n  private userProfileKey: string = \"userProfile\";\n  public userProfileString: string = \"\";\n\n  public medicalRecordValue = {};\n  private medicalRecordKey:string = \"medicalRecord\";\n\n  constructor() { }\n\n  async loadUserProfile(){\n    const userProfileGet= await Storage.get({ key: this.userProfileKey });\n    this.userProfileValue = JSON.parse(userProfileGet.value) || {};\n    console.log(\"finished loading\");\n  } //load user profile from storage\n\n  saveUserProfile() {\n    Storage.set({\n      key: this.userProfileKey,\n      value: JSON.stringify(this.userProfileValue),\n    })\n  } //save updated user profile to storage\n\n  async loadMedicalRecord(){\n    const medicalRecordGet= await Storage.get({ key: this.medicalRecordKey });\n    this.medicalRecordValue = JSON.parse(medicalRecordGet.value) || {};\n    console.log(\"finished loading\");\n  } //load medical record from storage\n\n  saveMedicalRecord() {\n    Storage.set({\n      key: this.medicalRecordKey,\n      value: JSON.stringify(this.medicalRecordValue),\n    })\n  } //save new medical record to storage\n\n  convertToString() {\n    this.userProfileString = JSON.stringify(this.userProfileValue);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { OperativeHistoryPageRoutingModule } from './operative-history-routing.module';\n\nimport { OperativeHistoryPage } from './operative-history.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    OperativeHistoryPageRoutingModule\n  ],\n  declarations: [OperativeHistoryPage]\n})\nexport class OperativeHistoryPageModule {}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/medical-record\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Operative History</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"edit()\\\">Add</ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-card *ngIf=\\\"histories.length == 0\\\">\\n    <ion-card-header>\\n      <ion-card-title>No History</ion-card-title>\\n    </ion-card-header>\\n  </ion-card>\\n\\n  <ion-card *ngFor=\\\"let history of histories; let i = index\\\" (click)=delete(i)>\\n\\n    <ion-item lines=\\\"full\\\">\\n      <ion-label style=\\\"font-weight: bold; color: mediumseagreen\\\">{{history.date | date : 'd MMM y'}}</ion-label>\\n    </ion-item>\\n\\n    <ion-item lines=\\\"none\\\">\\n      <ion-label>\\n        <h3>{{history.type}} Details</h3>\\n        <h2>{{history.details}}</h2>\\n      </ion-label>\\n    </ion-item>\\n\\n  </ion-card>\\n</ion-content>\\n\";"]}