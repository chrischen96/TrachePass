{"version":3,"sources":["webpack:///src/app/edit-pathology/edit-pathology-routing.module.ts","webpack:///src/app/services/user-data.service.ts","webpack:///src/app/edit-pathology/edit-pathology.module.ts"],"names":["routes","path","component","EditPathologyPageRoutingModule","imports","forChild","exports","Storage","UserDataService","userProfileValue","userProfileKey","userProfileString","medicalRecordValue","medicalRecordKey","get","key","userProfileGet","JSON","parse","value","console","log","set","stringify","medicalRecordGet","providedIn","EditPathologyPageModule","declarations"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,8BAA8B;AAAA;AAAA,O;;AAA9BA,oCAA8B,6DAJ1C,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAI0C,GAA9BH,8BAA8B,CAA9B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCZLI,O,GAAY,uD,CAAZA,O;;UAKKC,eAAe;AAS1B,mCAAc;AAAA;;AAPP,eAAAC,gBAAA,GAAmB,EAAnB;AACC,eAAAC,cAAA,GAAyB,aAAzB;AACD,eAAAC,iBAAA,GAA4B,EAA5B;AAEA,eAAAC,kBAAA,GAAqB,EAArB;AACC,eAAAC,gBAAA,GAA0B,eAA1B;AAES;;AATS;AAAA;AAAA,iBAWpB,2BAAe;;;;;;;;AACG,6BAAMN,OAAO,CAACO,GAAR,CAAY;AAAEC,2BAAG,EAAE,KAAKL;AAAZ,uBAAZ,CAAN;;;AAAhBM,oC;AACN,2BAAKP,gBAAL,GAAwBQ,IAAI,CAACC,KAAL,CAAWF,cAAc,CAACG,KAA1B,KAAoC,EAA5D;AACAC,6BAAO,CAACC,GAAR,CAAY,kBAAZ;;;;;;;;;AACD,WAfyB,CAexB;;AAfwB;AAAA;AAAA,iBAiB1B,2BAAkB;AAChBd,mBAAO,CAACe,GAAR,CAAY;AACVP,iBAAG,EAAE,KAAKL,cADA;AAEVS,mBAAK,EAAEF,IAAI,CAACM,SAAL,CAAe,KAAKd,gBAApB;AAFG,aAAZ;AAID,WAtByB,CAsBxB;;AAtBwB;AAAA;AAAA,iBAwBpB,6BAAiB;;;;;;;;AACG,6BAAMF,OAAO,CAACO,GAAR,CAAY;AAAEC,2BAAG,EAAE,KAAKF;AAAZ,uBAAZ,CAAN;;;AAAlBW,sC;AACN,2BAAKZ,kBAAL,GAA0BK,IAAI,CAACC,KAAL,CAAWM,gBAAgB,CAACL,KAA5B,KAAsC,EAAhE;AACAC,6BAAO,CAACC,GAAR,CAAY,kBAAZ;;;;;;;;;AACD,WA5ByB,CA4BxB;;AA5BwB;AAAA;AAAA,iBA8B1B,6BAAoB;AAClBd,mBAAO,CAACe,GAAR,CAAY;AACVP,iBAAG,EAAE,KAAKF,gBADA;AAEVM,mBAAK,EAAEF,IAAI,CAACM,SAAL,CAAe,KAAKX,kBAApB;AAFG,aAAZ;AAID,WAnCyB,CAmCxB;;AAnCwB;AAAA;AAAA,iBAqC1B,2BAAkB;AAChB,iBAAKD,iBAAL,GAAyBM,IAAI,CAACM,SAAL,CAAe,KAAKd,gBAApB,CAAzB;AACD;AAvCyB;;AAAA;AAAA,S;;;;;;AAAfD,qBAAe,6DAH3B,iEAAW;AACViB,kBAAU,EAAE;AADF,OAAX,CAG2B,GAAfjB,eAAe,CAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCWAkB,uBAAuB;AAAA;AAAA,O;;AAAvBA,6BAAuB,6DAVnC,+DAAS;AACRtB,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,kEAHO,EAIP,0DAJO,EAKP,6FALO,CADD;AAQRuB,oBAAY,EAAE,CAAC,sEAAD;AARN,OAAT,CAUmC,GAAvBD,uBAAuB,CAAvB","file":"edit-pathology-edit-pathology-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EditPathologyPage } from './edit-pathology.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EditPathologyPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EditPathologyPageRoutingModule {}\n","import { Injectable } from '@angular/core';\n\nimport { Plugins, Capacitor, } from '@capacitor/core';\n\nconst { Storage } = Plugins;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserDataService {\n\n  public userProfileValue = {};\n  private userProfileKey: string = \"userProfile\";\n  public userProfileString: string = \"\";\n\n  public medicalRecordValue = {};\n  private medicalRecordKey:string = \"medicalRecord\";\n\n  constructor() { }\n\n  async loadUserProfile(){\n    const userProfileGet= await Storage.get({ key: this.userProfileKey });\n    this.userProfileValue = JSON.parse(userProfileGet.value) || {};\n    console.log(\"finished loading\");\n  } //load user profile from storage\n\n  saveUserProfile() {\n    Storage.set({\n      key: this.userProfileKey,\n      value: JSON.stringify(this.userProfileValue),\n    })\n  } //save updated user profile to storage\n\n  async loadMedicalRecord(){\n    const medicalRecordGet= await Storage.get({ key: this.medicalRecordKey });\n    this.medicalRecordValue = JSON.parse(medicalRecordGet.value) || {};\n    console.log(\"finished loading\");\n  } //load medical record from storage\n\n  saveMedicalRecord() {\n    Storage.set({\n      key: this.medicalRecordKey,\n      value: JSON.stringify(this.medicalRecordValue),\n    })\n  } //save new medical record to storage\n\n  convertToString() {\n    this.userProfileString = JSON.stringify(this.userProfileValue);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule} from '@angular/forms'\nimport { IonicModule } from '@ionic/angular';\n\nimport { EditPathologyPageRoutingModule } from './edit-pathology-routing.module';\n\nimport { EditPathologyPage } from './edit-pathology.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    EditPathologyPageRoutingModule\n  ],\n  declarations: [EditPathologyPage]\n})\nexport class EditPathologyPageModule {}\n"]}