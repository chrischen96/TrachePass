(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{B9dj:function(t,n,o){"use strict";o.r(n),o.d(n,"PathologyPageModule",function(){return K});var e=o("ofXK"),i=o("3Pt+"),c=o("TEn/"),a=o("tyNb"),b=o("mrSG"),r=o("tWnK"),d=o("fXoL"),l=o("DPk/");function s(t,n){if(1&t&&(d.Lb(0,"ion-card-content"),d.kc(1),d.Kb()),2&t){const t=d.Vb();d.xb(1),d.mc(" ",t.medicalRecord.pathology," ")}}function u(t,n){1&t&&(d.Lb(0,"ion-card-content"),d.kc(1," No content "),d.Kb())}function f(t,n){1&t&&(d.Lb(0,"ion-card-content",6),d.kc(1," No "),d.Kb())}function m(t,n){1&t&&(d.Lb(0,"ion-card-content",6),d.kc(1," Yes "),d.Kb())}function p(t,n){if(1&t&&(d.Lb(0,"div"),d.Lb(1,"ion-list"),d.Lb(2,"ion-item"),d.Lb(3,"ion-label"),d.kc(4,"Airway Grade:"),d.Kb(),d.Lb(5,"ion-label"),d.kc(6),d.Kb(),d.Kb(),d.Lb(7,"ion-item"),d.Lb(8,"ion-label"),d.kc(9,"Endotracheal Tube Size:"),d.Kb(),d.Lb(10,"ion-label"),d.kc(11),d.Kb(),d.Kb(),d.Lb(12,"ion-item",7),d.Lb(13,"ion-label"),d.kc(14,"Details:"),d.Kb(),d.Jb(15,"ion-label"),d.Kb(),d.Lb(16,"ion-card-content"),d.kc(17),d.Kb(),d.Kb(),d.Kb()),2&t){const t=d.Vb();d.xb(6),d.lc(t.medicalRecord.airwayGrade),d.xb(5),d.lc(t.medicalRecord.tubeSize),d.xb(6),d.lc(t.medicalRecord.details)}}const h=[{path:"",component:(()=>{class t{constructor(t,n){this.modalCtrl=t,this.userDataService=n,this.medicalRecord={pathology:"",intubatation:!1,airwayGrade:"",tubeSize:"",details:""}}ngOnInit(){return Object(b.a)(this,void 0,void 0,function*(){yield this.userDataService.loadMedicalRecord(),Object.keys(this.userDataService.medicalRecordValue).forEach(t=>{Object.keys(this.medicalRecord).includes(t)&&(this.medicalRecord[t]=this.userDataService.medicalRecordValue[t]),console.log(t,this.medicalRecord[t])})})}edit(){return Object(b.a)(this,void 0,void 0,function*(){(yield this.modalCtrl.create({component:r.a,backdropDismiss:!1,componentProps:{isModal:!0}})).present()})}}return t.\u0275fac=function(n){return new(n||t)(d.Ib(c.P),d.Ib(l.a))},t.\u0275cmp=d.Cb({type:t,selectors:[["app-pathology"]],decls:23,vars:5,consts:[["slot","start"],["defaultHref","medical-record"],["slot","end"],[3,"click"],[4,"ngIf"],["class","airway",4,"ngIf"],[1,"airway"],["lines","none"]],template:function(t,n){1&t&&(d.Lb(0,"ion-header"),d.Lb(1,"ion-toolbar"),d.Lb(2,"ion-buttons",0),d.Jb(3,"ion-back-button",1),d.Kb(),d.Lb(4,"ion-title"),d.kc(5,"Airway Pathology"),d.Kb(),d.Lb(6,"ion-buttons",2),d.Lb(7,"ion-button",3),d.Tb("click",function(){return n.edit()}),d.kc(8,"Edit"),d.Kb(),d.Kb(),d.Kb(),d.Kb(),d.Lb(9,"ion-content"),d.Lb(10,"ion-card"),d.Lb(11,"ion-card-header"),d.Lb(12,"ion-card-title"),d.kc(13,"Reason for Tracheostomy"),d.Kb(),d.Kb(),d.jc(14,s,2,1,"ion-card-content",4),d.jc(15,u,2,0,"ion-card-content",4),d.Kb(),d.Lb(16,"ion-card"),d.Lb(17,"ion-card-header"),d.Lb(18,"ion-card-title"),d.kc(19,"Is Upper Airway Intubatable?"),d.Kb(),d.Kb(),d.jc(20,f,2,0,"ion-card-content",5),d.jc(21,m,2,0,"ion-card-content",5),d.jc(22,p,18,3,"div",4),d.Kb(),d.Kb()),2&t&&(d.xb(14),d.bc("ngIf",""!=n.medicalRecord.pathology),d.xb(1),d.bc("ngIf",""==n.medicalRecord.pathology),d.xb(5),d.bc("ngIf",0==n.medicalRecord.intubatation),d.xb(1),d.bc("ngIf",1==n.medicalRecord.intubatation),d.xb(1),d.bc("ngIf",1==n.medicalRecord.intubatation))},directives:[c.v,c.M,c.h,c.e,c.f,c.K,c.g,c.p,c.i,c.k,c.m,e.l,c.j,c.B,c.z,c.A],styles:["ion-card-title[_ngcontent-%COMP%]{font-size:medium;font-weight:700;color:#ff7800}ion-card-header[_ngcontent-%COMP%]{padding-top:15px;padding-bottom:10px}ion-card-content[_ngcontent-%COMP%]{padding-top:0;padding-bottom:15px;color:#000}ion-label[_ngcontent-%COMP%]:last-child{position:absolute;right:5%;font-weight:700}.airway[_ngcontent-%COMP%]{font-weight:700}"]}),t})()}];let g=(()=>{class t{}return t.\u0275mod=d.Gb({type:t}),t.\u0275inj=d.Fb({factory:function(n){return new(n||t)},imports:[[a.i.forChild(h)],a.i]}),t})(),K=(()=>{class t{}return t.\u0275mod=d.Gb({type:t}),t.\u0275inj=d.Fb({factory:function(n){return new(n||t)},imports:[[e.b,i.d,c.N,g]]}),t})()}}]);