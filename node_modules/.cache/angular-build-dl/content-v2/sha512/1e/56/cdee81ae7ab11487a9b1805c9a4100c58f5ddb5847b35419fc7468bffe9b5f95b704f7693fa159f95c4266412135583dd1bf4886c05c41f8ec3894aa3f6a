{"version":3,"sources":["./src/app/edit-operative-history/edit-operative-history.module.ts","./src/app/edit-operative-history/edit-operative-history-routing.module.ts","./src/app/services/user-data.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACM;AACN;AAEmD;AAEvB;IAY5D,8BAA8B,SAA9B,8BAA8B;CAAG;AAAjC,8BAA8B;IAV1C,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,kEAAmB;YACnB,0DAAW;YACX,4GAAqC;SACtC;QACD,YAAY,EAAE,CAAC,qFAAwB,CAAC;KACzC,CAAC;GACW,8BAA8B,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;ACpBF;AACc;AAEkB;AAEzE,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qFAAwB;KACpC;CACF,CAAC;IAMW,qCAAqC,SAArC,qCAAqC;CAAG;AAAxC,qCAAqC;IAJjD,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,qCAAqC,CAAG;AAAH;;;;;;;;;;;;;;;;;;;AChBP;AAEW;AAEtD,MAAM,EAAE,OAAO,EAAE,GAAG,uDAAO,CAAC;IAKf,eAAe,SAAf,eAAe;IAS1B;QAPO,qBAAgB,GAAG,EAAE,CAAC;QACrB,mBAAc,GAAW,aAAa,CAAC;QACxC,sBAAiB,GAAW,EAAE,CAAC;QAE/B,uBAAkB,GAAG,EAAE,CAAC;QACvB,qBAAgB,GAAU,eAAe,CAAC;IAElC,CAAC;IAEX,eAAe;;YACnB,MAAM,cAAc,GAAE,MAAM,OAAO,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;YACtE,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;YAC/D,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;QAClC,CAAC;KAAA,CAAC,gCAAgC;IAElC,eAAe;QACb,OAAO,CAAC,GAAG,CAAC;YACV,GAAG,EAAE,IAAI,CAAC,cAAc;YACxB,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC;SAC7C,CAAC;IACJ,CAAC,CAAC,sCAAsC;IAElC,iBAAiB;;YACrB,MAAM,gBAAgB,GAAE,MAAM,OAAO,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC;YAC1E,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;YACnE,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;QAClC,CAAC;KAAA,CAAC,kCAAkC;IAEpC,iBAAiB;QACf,OAAO,CAAC,GAAG,CAAC;YACV,GAAG,EAAE,IAAI,CAAC,gBAAgB;YAC1B,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,kBAAkB,CAAC;SAC/C,CAAC;IACJ,CAAC,CAAC,oCAAoC;IAEtC,eAAe;QACb,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;IACjE,CAAC;CACF;;AAxCY,eAAe;IAH3B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,eAAe,CAwC3B;AAxC2B","file":"edit-operative-history-edit-operative-history-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule} from '@angular/forms'\nimport { IonicModule } from '@ionic/angular';\n\nimport { EditOperativeHistoryPageRoutingModule } from './edit-operative-history-routing.module';\n\nimport { EditOperativeHistoryPage } from './edit-operative-history.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    EditOperativeHistoryPageRoutingModule\n  ],\n  declarations: [EditOperativeHistoryPage]\n})\nexport class EditOperativeHistoryPageModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EditOperativeHistoryPage } from './edit-operative-history.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EditOperativeHistoryPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EditOperativeHistoryPageRoutingModule {}\n","import { Injectable } from '@angular/core';\n\nimport { Plugins, Capacitor, } from '@capacitor/core';\n\nconst { Storage } = Plugins;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserDataService {\n\n  public userProfileValue = {};\n  private userProfileKey: string = \"userProfile\";\n  public userProfileString: string = \"\";\n\n  public medicalRecordValue = {};\n  private medicalRecordKey:string = \"medicalRecord\";\n\n  constructor() { }\n\n  async loadUserProfile(){\n    const userProfileGet= await Storage.get({ key: this.userProfileKey });\n    this.userProfileValue = JSON.parse(userProfileGet.value) || {};\n    console.log(\"finished loading\");\n  } //load user profile from storage\n\n  saveUserProfile() {\n    Storage.set({\n      key: this.userProfileKey,\n      value: JSON.stringify(this.userProfileValue),\n    })\n  } //save updated user profile to storage\n\n  async loadMedicalRecord(){\n    const medicalRecordGet= await Storage.get({ key: this.medicalRecordKey });\n    this.medicalRecordValue = JSON.parse(medicalRecordGet.value) || {};\n    console.log(\"finished loading\");\n  } //load medical record from storage\n\n  saveMedicalRecord() {\n    Storage.set({\n      key: this.medicalRecordKey,\n      value: JSON.stringify(this.medicalRecordValue),\n    })\n  } //save new medical record to storage\n\n  convertToString() {\n    this.userProfileString = JSON.stringify(this.userProfileValue);\n  }\n}\n"],"sourceRoot":"webpack:///"}