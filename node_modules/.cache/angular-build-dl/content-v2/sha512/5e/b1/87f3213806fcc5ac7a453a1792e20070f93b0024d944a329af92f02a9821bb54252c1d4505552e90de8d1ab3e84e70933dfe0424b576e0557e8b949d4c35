{"version":3,"sources":["./src/app/edit-tracheostomy-details/edit-tracheostomy-details.page.scss","./src/app/edit-tracheostomy-details/edit-tracheostomy-details.page.html","./src/app/services/user-data.service.ts","./src/app/edit-tracheostomy-details/edit-tracheostomy-details.page.ts"],"names":[],"mappings":"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","file":"default~edit-tracheostomy-details-edit-tracheostomy-details-module~tracheostomy-details-tracheostomy~a3467248-es2015.js","sourcesContent":["export default \"ion-input:last-child {\\n  text-align: end;\\n}\\n\\nion-input {\\n  color: dodgerblue;\\n}\\n\\nion-select {\\n  max-width: 70%;\\n  padding: 0%;\\n  padding-right: 10px;\\n  color: dodgerblue;\\n}\\n\\nion-label {\\n  padding: 0%;\\n  min-width: 90px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2VkaXQtdHJhY2hlb3N0b215LWRldGFpbHMucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZUFBQTtBQUNKOztBQUVBO0VBQ0ksaUJBQUE7QUFDSjs7QUFFQTtFQUNJLGNBQUE7RUFDQSxXQUFBO0VBQ0EsbUJBQUE7RUFDQSxpQkFBQTtBQUNKOztBQUVBO0VBQ0ksV0FBQTtFQUNBLGVBQUE7QUFDSiIsImZpbGUiOiJlZGl0LXRyYWNoZW9zdG9teS1kZXRhaWxzLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1pbnB1dDpsYXN0LWNoaWxkIHtcbiAgICB0ZXh0LWFsaWduOiBlbmQ7XG59XG5cbmlvbi1pbnB1dCB7XG4gICAgY29sb3I6ZG9kZ2VyYmx1ZTtcbn1cblxuaW9uLXNlbGVjdCB7XG4gICAgbWF4LXdpZHRoOiA3MCU7XG4gICAgcGFkZGluZzogMCU7XG4gICAgcGFkZGluZy1yaWdodDogMTBweDtcbiAgICBjb2xvcjogZG9kZ2VyYmx1ZTtcbn1cblxuaW9uLWxhYmVse1xuICAgIHBhZGRpbmc6IDAlO1xuICAgIG1pbi13aWR0aDogOTBweDtcbn0iXX0= */\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button color=\\\"danger\\\" (click)=\\\"dismiss()\\\">Cancel</ion-button>\\n    </ion-buttons>\\n    <ion-title>Edit</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"save()\\\">Done</ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <form [formGroup]=\\\"form\\\">\\n    <ion-list>\\n      <ion-list-header lines=\\\"full\\\">\\n        <ion-label>\\n          Tracheostomy Details\\n        </ion-label>\\n      </ion-list-header>\\n\\n      <ion-item>\\n        <ion-label>Manual input</ion-label>\\n        <ion-toggle formControlName=\\\"customize\\\" (ionChange)=\\\"toggleCustom()\\\"></ion-toggle>\\n      </ion-item>\\n\\n      <div *ngIf=\\\"!form.value.customize\\\">\\n        <ion-item>\\n          <ion-label>Tube Type: </ion-label>\\n          <ion-select (ionChange)=\\\"selectedTubeType()\\\" formControlName=\\\"tubeType\\\">\\n            <div *ngFor=\\\"let tubetype of tubeTypes | keyvalue\\\">\\n              <!-- <ion-text>{{tubetype.tubeTypeName}}</ion-text> -->\\n              <ion-select-option value=\\\"{{tubetype.key}}\\\">{{tubetype.key}}</ion-select-option>\\n            </div>\\n          </ion-select>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label>Sub Type: </ion-label>\\n          <ion-select (ionChange)=\\\"selectedSubTubeType()\\\" formControlName=\\\"subType\\\">\\n            <div *ngFor=\\\"let subtype of subtypeList | keyvalue\\\">\\n              <!-- <ion-text>{{tubetype.tubeTypeName}}</ion-text> -->\\n              <ion-select-option value=\\\"{{subtype.key}}\\\">{{subtype.key}}</ion-select-option>\\n            </div>\\n          </ion-select>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label>Size - ID (mm): </ion-label>\\n          <ion-select (ionChange)=\\\"selectedSize()\\\" formControlName=\\\"sizeID\\\">\\n            <div *ngFor=\\\"let sizeID of sizeIDList | keyvalue\\\">\\n              <ion-select-option value=\\\"{{sizeID.key}}\\\">{{sizeID.key}}</ion-select-option>\\n            </div>\\n          </ion-select>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label>Shaft Length (mm): </ion-label>\\n          <ion-select formControlName=\\\"shaftLength\\\">\\n            <ng-container>\\n              <ion-select-option value=\\\"{{shaftLength}}\\\">{{shaftLength}}</ion-select-option>\\n            </ng-container>\\n          </ion-select>\\n        </ion-item> \\n      </div>\\n\\n      <div *ngIf=\\\"form.value.customize\\\">\\n        <ion-item>\\n          <ion-label>Tube Type: </ion-label>\\n          <ion-input type=\\\"text\\\" formControlName=\\\"tubeType\\\"></ion-input>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label>Sub Type: </ion-label>\\n          <ion-input type=\\\"text\\\" formControlName=\\\"subType\\\"></ion-input>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label>Size - ID (mm): </ion-label>\\n          <ion-input type=\\\"text\\\" formControlName=\\\"sizeID\\\"></ion-input>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label>Shaft Length (mm): </ion-label>\\n          <ion-input type=\\\"text\\\" formControlName=\\\"shaftLength\\\"></ion-input>\\n        </ion-item>\\n      </div>\\n\\n      <ion-item>\\n        <ion-label>Suction Length (mm): </ion-label>\\n        <ion-input type=\\\"text\\\" formControlName=\\\"suctionLength\\\"></ion-input>\\n      </ion-item>\\n\\n<!--       <ion-item>\\n        <ion-label>Tube Size (mm)</ion-label>\\n        <ion-input placeholder=\\\"Enter size\\\" formControlName=\\\"tubeSize\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label>Tube Type</ion-label>\\n        <ion-input placeholder=\\\"Select Type\\\" (click)=\\\"openPicker()\\\" formControlName=\\\"tubeType\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label>Suction Length (mm)</ion-label>\\n        <ion-input placeholder=\\\"Enter length\\\" formControlName=\\\"suctionLength\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label>Shaft Length (mm)</ion-label>\\n        <ion-input placeholder=\\\"Enter length\\\" formControlName=\\\"shaftLength\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-item lines=\\\"none\\\">\\n        <ion-label>Schedule Date</ion-label>\\n        <ion-datetime placeholder=\\\"Select Date\\\" \\n          display-format=\\\"D MMM YYYY\\\" \\n          picker-format=\\\"D MMM YYYY\\\" \\n          style=\\\"color: dodgerblue;\\\"\\n          formControlName=\\\"scheduleForChange\\\"></ion-datetime>\\n      </ion-item> -->\\n    </ion-list>\\n  </form>\\n</ion-content>\\n\";","import { Injectable } from '@angular/core';\n\nimport { Plugins, Capacitor, } from '@capacitor/core';\n\nconst { Storage } = Plugins;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserDataService {\n\n  public userProfileValue = {};\n  private userProfileKey: string = \"userProfile\";\n  public userProfileString: string = \"\";\n\n  public medicalRecordValue = {};\n  private medicalRecordKey:string = \"medicalRecord\";\n\n  constructor() { }\n\n  async loadUserProfile(){\n    const userProfileGet= await Storage.get({ key: this.userProfileKey });\n    this.userProfileValue = JSON.parse(userProfileGet.value) || {};\n    console.log(\"finished loading\");\n  } //load user profile from storage\n\n  saveUserProfile() {\n    Storage.set({\n      key: this.userProfileKey,\n      value: JSON.stringify(this.userProfileValue),\n    })\n  } //save updated user profile to storage\n\n  async loadMedicalRecord(){\n    const medicalRecordGet= await Storage.get({ key: this.medicalRecordKey });\n    this.medicalRecordValue = JSON.parse(medicalRecordGet.value) || {};\n    console.log(\"finished loading\");\n  } //load medical record from storage\n\n  saveMedicalRecord() {\n    Storage.set({\n      key: this.medicalRecordKey,\n      value: JSON.stringify(this.medicalRecordValue),\n    })\n  } //save new medical record to storage\n\n  convertToString() {\n    this.userProfileString = JSON.stringify(this.userProfileValue);\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { pickerController } from '@ionic/core';\nimport { FormBuilder, FormGroup, FormControl, Validators, ReactiveFormsModule} from '@angular/forms'\nimport { UserDataService } from '../services/user-data.service'; \n\n@Component({\n  selector: 'app-edit-tracheostomy-details',\n  templateUrl: './edit-tracheostomy-details.page.html',\n  styleUrls: ['./edit-tracheostomy-details.page.scss'],\n})\nexport class EditTracheostomyDetailsPage implements OnInit {\n  private form: FormGroup;\n  public subtypeList: Object = {};\n  public sizeIDList: Object =  {};\n  public shaftLength: String = \"\";\n/*   private type = [\n    [\n      'Bivona Uncuffed',\n      'Bivona Fome-Cuf',\n      'Bivona Aire-Cuf',\n      'Bivona TTS cuff',\n      'Bivona Flextend'\n    ],\n    [\n      \"Neo (neonatal)\",\n      \"Ped (paediatric)\",\n      \"Cuffed unfenstrated\",\n      \"Cuffed fenestrated\",\n      \"Uncuffed fenestrated\"\n    ]\n  ]; */\n\n  constructor(\n    private modalCtrl:ModalController,\n    public fb: FormBuilder,\n    public userDataService:UserDataService,\n  ) {\n    this.form = this.fb.group({\n      tubeType: ['', Validators.required],\n      subType: ['', Validators.required],\n      sizeID: ['', Validators.required],\n      shaftLength: ['', Validators.required],\n      suctionLength: ['', Validators.required],\n      scheduleForChange: ['', Validators.required],\n      customize: ['', Validators.required],\n    })\n   }\n\n  async ngOnInit() {\n    await this.userDataService.loadMedicalRecord();\n    Object.keys(this.form.controls).forEach(key => {\n      this.form.get(key).setValue(this.userDataService.medicalRecordValue[key]);\n      if (this.userDataService.medicalRecordValue['customize'] == null){\n        this.form.get('customize').setValue(false);\n      }\n      console.log(key, this.form.get(key).value)\n    });\n    if (this.form.value['customize'] == false) {\n      console.log(this.form.value[\"customize\"]);\n      console.log(this.form.value[\"tubeType\"]);\n      this.subtypeList = this.tubeTypes[this.form.value[\"tubeType\"]];\n      console.log(this.subtypeList);\n      this.sizeIDList = this.subtypeList[this.form.value[\"subType\"]];\n      console.log(this.sizeIDList);\n      this.shaftLength = this.sizeIDList[this.form.value[\"sizeID\"]];\n      console.log(this.shaftLength);\n    }\n  }\n\n  dismiss(){\n    this.modalCtrl.dismiss();\n  }\n\n  save(){\n    Object.keys(this.form.controls).forEach(key => {\n      this.userDataService.medicalRecordValue[key]=this.form.value[key];\n      console.log(key, this.form.get(key).value)\n    });\n    this.userDataService.saveMedicalRecord();\n    this.modalCtrl.dismiss();\n    location.reload();\n  }\n\n  toggleCustom() {\n    this.form.patchValue({\n      tubeType:\"\",\n      subType: \"\",\n      sizeID: \"\",\n      shaftLength:\"\",\n    });\n    console.log(this.form.value['customize']);\n  }\n\n  selectedTubeType() {\n    //console.log(this.tubeTypes[this.form.value.tubeType]);\n    console.log(this.form.value.tubeType);\n    this.subtypeList = this.tubeTypes[this.form.value.tubeType];\n  }\n  selectedSubTubeType(){\n    console.log(this.subtypeList);\n    console.log(this.form.value.subType)\n    this.sizeIDList = this.subtypeList[this.form.value.subType];\n  } \n\n  selectedSize(){\n    this.shaftLength = this.sizeIDList[this.form.value.sizeID];\n  }\n\n  // Bivona Uncuffed, Bivona Fome-Cuf, Bivona Aire-Cuf, Bivona TTS cuff\n  // Bivona Flextend also share the same size\n  public type1 = {\n    /* \"\": {\"\":\"\"}, */\n    \"Neo (neonatal)\":{\n/*       \"2.5\":\"30\",\n      \"3.0\":\"32\",\n      \"3.5\":\"34\", */\n      \"4.0\":\"36\",\n    },\n    \"Ped (paediatric)\": {\n      \"2.5\":\"38\",\n      \"3.0\":\"39\",\n      \"3.5\":\"40\",\n      \"4.0\":\"41\",\n      \"4.5\":\"42\",\n      \"5.0\":\"44\",\n      \"5.5\":\"46\",\n    },\n  }\n  // Bivona Hyperflex\n  public type2 = {\n    /* \"\": {\"\":\"\"}, */\n    \"One Size\": {\n      \"2.5\":\"55\",\n      \"3.0\":\"60\",\n      \"3.5\":\"65\",\n      \"4.0\":\"70\",\n      \"4.5\":\"75\",\n      \"5.0\":\"80\",\n      \"5.5\":\"85\",\n    },\n  }\n\n  //shiley\n  public type3 = {\n    /* \"\": {\"\":\"\"}, */\n    \"Neo (neonatal)\":{\n/*       \"3.0\":\"30\",\n      \"3.5\":\"32\",\n      \"4.0\":\"34\", */\n      \"4.5\":\"36\",\n    },\n    \"Ped (Paediatric)\": {\n      \"3.0\":\"39\",\n      \"3.5\":\"40\",\n      \"4.0\":\"41\",\n      \"4.5\":\"42\",\n      \"5.0\":\"44\",\n      \"5.5\":\"46\",\n    },\n    \"Ped - Long\": {\n      \"5.0\":\"50\",\n      \"5.5\":\"52\",\n      \"6.0\":\"54\",\n      \"6.5\":\"56\",\n    },\n  }\n  //shiley cuffed\n  public type4 = {\n    /* \"\": {\"\":\"\"}, */\n    \"Ped (Paediatric)\": {\n      \"3.0\":\"39\",\n      \"3.5\":\"40\",\n      \"4.0\":\"41\",\n      \"4.5\":\"42\",\n      \"5.0\":\"44\",\n      \"5.5\":\"46\",\n    },\n    \"Ped - Long\": {\n      \"5.0\":\"50\",\n      \"5.5\":\"52\",\n      \"6.0\":\"54\",\n      \"6.5\":\"56\",\n    },\n  }\n\n  //Adul Portex Blue Line Ultra\n  public subtype5 = {\n    \"6.0\":\"64.5\",\n    \"7.0\":\"70\"\n  }\n  public type5 = {\n    \"Cuffed unfenstrated\":this.subtype5,\n    \"Cuffed fenstrated\":this.subtype5,\n    \"Uncuffed fenstrated\":this.subtype5,\n  }\n\n  //Adult Bivona\n  public subtype6 = {\n    \"5.0\":\"60\",\n    \"6.0\":\"70\",\n    \"7.0\":\"80\",\n  }\n  public type6 = {\n    \"Cuffed unfenstrated\":this.subtype6,\n    \"Cuffed fenstrated\":this.subtype6,\n    \"Uncuffed fenstrated\":this.subtype6,\n  }\n  \n  //logic of chain select\n  public tubeTypes = {\n    /* \"\":this.type1, */\n    \"Bivona Uncuffed\": this.type1,\n    \"Bivona Fome-Cuf\": this.type1,\n    \"Bivona Aire-Cuf\": this.type1,\n    \"Bivona TTS cuff\": this.type1,\n    \"Bivona Flextend\": this.type1,\n    \"Bivona Hyperflex\": this.type2,\n    \"Shiley Uncuffed\": this.type3,\n    \"Shiley Cuffed\": this.type4,\n    \"Adult Portex Blue Line Ultra\": this.type5,\n    \"Adult Bivona\": this.type6,\n  }\n\n/*   async openPicker(numColumns = 2, numOptions = 5, columnOptions = this.type){\n    const picker = await pickerController.create({\n      columns: this.getColumns(numColumns, numOptions, columnOptions),\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel'\n        },\n        {\n          text: 'Confirm',\n          handler: (value) => {\n            this.form.controls['tubeType'].setValue(value['col-0']['text']+' '+value['col-1']['text']);\n            console.log(value);\n          }\n        }\n      ]\n    });\n    await picker.present();\n  }\n\n  getColumns(numColumns, numOptions, columnOptions) {\n    let columns = [];\n    for (let i = 0; i < numColumns; i++) {\n      columns.push({\n        name: `col-${i}`,\n        options: this.getColumnOptions(i, numOptions, columnOptions)\n      });\n    }\n    return columns;\n  }\n\n  getColumnOptions(columnIndex, numOptions, columnOptions) {\n    let options = [];\n    for (let i = 0; i < numOptions; i++) {\n      options.push({\n        text: columnOptions[columnIndex][i % numOptions],\n        value: i\n      })\n    }\n    return options;\n  } */\n\n}\n"],"sourceRoot":"webpack:///"}