(function () {
  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  (window["webpackJsonp"] = window["webpackJsonp"] || []).push([["common"], {
    /***/
    "/flB":
    /*!*******************************************************************************!*\
      !*** ./src/app/edit-tracheostomy-details/edit-tracheostomy-details.page.scss ***!
      \*******************************************************************************/

    /*! exports provided: default */

    /***/
    function flB(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "ion-input:last-child {\n  text-align: end;\n}\n\nion-input {\n  color: dodgerblue;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2VkaXQtdHJhY2hlb3N0b215LWRldGFpbHMucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZUFBQTtBQUNKOztBQUVBO0VBQ0ksaUJBQUE7QUFDSiIsImZpbGUiOiJlZGl0LXRyYWNoZW9zdG9teS1kZXRhaWxzLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1pbnB1dDpsYXN0LWNoaWxkIHtcbiAgICB0ZXh0LWFsaWduOiBlbmQ7XG59XG5cbmlvbi1pbnB1dCB7XG4gICAgY29sb3I6ZG9kZ2VyYmx1ZTtcbn0iXX0= */";
      /***/
    },

    /***/
    "0/6H":
    /*!*********************************************************************!*\
      !*** ./node_modules/@ionic/core/dist/esm/button-active-a6787d69.js ***!
      \*********************************************************************/

    /*! exports provided: c */

    /***/
    function H(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "c", function () {
        return createButtonActiveGesture;
      });
      /* harmony import */


      var _index_e806d1f6_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ./index-e806d1f6.js */
      "A36C");
      /* harmony import */


      var _index_f49d994d_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ./index-f49d994d.js */
      "iWo5");
      /* harmony import */


      var _haptic_27b3f981_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./haptic-27b3f981.js */
      "qULd");

      var createButtonActiveGesture = function createButtonActiveGesture(el, isButton) {
        var currentTouchedButton;
        var initialTouchedButton;

        var activateButtonAtPoint = function activateButtonAtPoint(x, y, hapticFeedbackFn) {
          if (typeof document === 'undefined') {
            return;
          }

          var target = document.elementFromPoint(x, y);

          if (!target || !isButton(target)) {
            clearActiveButton();
            return;
          }

          if (target !== currentTouchedButton) {
            clearActiveButton();
            setActiveButton(target, hapticFeedbackFn);
          }
        };

        var setActiveButton = function setActiveButton(button, hapticFeedbackFn) {
          currentTouchedButton = button;

          if (!initialTouchedButton) {
            initialTouchedButton = currentTouchedButton;
          }

          var buttonToModify = currentTouchedButton;
          Object(_index_e806d1f6_js__WEBPACK_IMPORTED_MODULE_0__["c"])(function () {
            return buttonToModify.classList.add('ion-activated');
          });
          hapticFeedbackFn();
        };

        var clearActiveButton = function clearActiveButton() {
          var dispatchClick = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

          if (!currentTouchedButton) {
            return;
          }

          var buttonToModify = currentTouchedButton;
          Object(_index_e806d1f6_js__WEBPACK_IMPORTED_MODULE_0__["c"])(function () {
            return buttonToModify.classList.remove('ion-activated');
          });
          /**
           * Clicking on one button, but releasing on another button
           * does not dispatch a click event in browsers, so we
           * need to do it manually here. Some browsers will
           * dispatch a click if clicking on one button, dragging over
           * another button, and releasing on the original button. In that
           * case, we need to make sure we do not cause a double click there.
           */

          if (dispatchClick && initialTouchedButton !== currentTouchedButton) {
            currentTouchedButton.click();
          }

          currentTouchedButton = undefined;
        };

        return Object(_index_f49d994d_js__WEBPACK_IMPORTED_MODULE_1__["createGesture"])({
          el: el,
          gestureName: 'buttonActiveDrag',
          threshold: 0,
          onStart: function onStart(ev) {
            return activateButtonAtPoint(ev.currentX, ev.currentY, _haptic_27b3f981_js__WEBPACK_IMPORTED_MODULE_2__["a"]);
          },
          onMove: function onMove(ev) {
            return activateButtonAtPoint(ev.currentX, ev.currentY, _haptic_27b3f981_js__WEBPACK_IMPORTED_MODULE_2__["b"]);
          },
          onEnd: function onEnd() {
            clearActiveButton(true);
            Object(_haptic_27b3f981_js__WEBPACK_IMPORTED_MODULE_2__["h"])();
            initialTouchedButton = undefined;
          }
        });
      };
      /***/

    },

    /***/
    "65gq":
    /*!*********************************************************!*\
      !*** ./src/app/edit-pathology/edit-pathology.page.scss ***!
      \*********************************************************/

    /*! exports provided: default */

    /***/
    function gq(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "ion-item {\n  margin-top: 5px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2VkaXQtcGF0aG9sb2d5LnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGVBQUE7QUFDSiIsImZpbGUiOiJlZGl0LXBhdGhvbG9neS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24taXRlbXtcbiAgICBtYXJnaW4tdG9wOiA1cHg7XG59Il19 */";
      /***/
    },

    /***/
    "74mu":
    /*!*************************************************************!*\
      !*** ./node_modules/@ionic/core/dist/esm/theme-ff3fc52f.js ***!
      \*************************************************************/

    /*! exports provided: c, g, h, o */

    /***/
    function mu(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "c", function () {
        return createColorClasses;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "g", function () {
        return getClassMap;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "h", function () {
        return hostContext;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "o", function () {
        return openURL;
      });

      var hostContext = function hostContext(selector, el) {
        return el.closest(selector) !== null;
      };
      /**
       * Create the mode and color classes for the component based on the classes passed in
       */


      var createColorClasses = function createColorClasses(color, cssClassMap) {
        return typeof color === 'string' && color.length > 0 ? Object.assign(_defineProperty({
          'ion-color': true
        }, "ion-color-".concat(color), true), cssClassMap) : cssClassMap;
      };

      var getClassList = function getClassList(classes) {
        if (classes !== undefined) {
          var array = Array.isArray(classes) ? classes : classes.split(' ');
          return array.filter(function (c) {
            return c != null;
          }).map(function (c) {
            return c.trim();
          }).filter(function (c) {
            return c !== '';
          });
        }

        return [];
      };

      var getClassMap = function getClassMap(classes) {
        var map = {};
        getClassList(classes).forEach(function (c) {
          return map[c] = true;
        });
        return map;
      };

      var SCHEME = /^[a-z][a-z0-9+\-.]*:/;

      var openURL = /*#__PURE__*/function () {
        var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(url, ev, direction, animation) {
          var router;
          return regeneratorRuntime.wrap(function _callee$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  if (!(url != null && url[0] !== '#' && !SCHEME.test(url))) {
                    _context.next = 5;
                    break;
                  }

                  router = document.querySelector('ion-router');

                  if (!router) {
                    _context.next = 5;
                    break;
                  }

                  if (ev != null) {
                    ev.preventDefault();
                  }

                  return _context.abrupt("return", router.push(url, direction, animation));

                case 5:
                  return _context.abrupt("return", false);

                case 6:
                case "end":
                  return _context.stop();
              }
            }
          }, _callee);
        }));

        return function openURL(_x, _x2, _x3, _x4) {
          return _ref.apply(this, arguments);
        };
      }();
      /***/

    },

    /***/
    "7Tad":
    /*!*********************************************************************************************************************!*\
      !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/edit-tracheostomy-details/edit-tracheostomy-details.page.html ***!
      \*********************************************************************************************************************/

    /*! exports provided: default */

    /***/
    function Tad(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "<ion-header>\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-button color=\"danger\" (click)=\"dismiss()\">Cancel</ion-button>\n    </ion-buttons>\n    <ion-title>Edit</ion-title>\n    <ion-buttons slot=\"end\">\n      <ion-button (click)=\"save()\">Done</ion-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <form [formGroup]=\"form\">\n    <ion-list>\n      <ion-list-header lines=\"full\">\n        <ion-label>\n          Tracheostomy Details\n        </ion-label>\n      </ion-list-header>\n\n      <ion-item>\n        <ion-label>Tube Size (mm)</ion-label>\n        <ion-input placeholder=\"Enter size\" formControlName=\"tubeSize\"></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label>Tube Type</ion-label>\n        <ion-input placeholder=\"Select Type\" (click)=\"openPicker()\" formControlName=\"tubeType\"></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label>Suction Length (mm)</ion-label>\n        <ion-input placeholder=\"Enter length\" formControlName=\"suctionLength\"></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label>Shaft Length (mm)</ion-label>\n        <ion-input placeholder=\"Enter length\" formControlName=\"shaftLength\"></ion-input>\n      </ion-item>\n\n      <ion-item lines=\"none\">\n        <ion-label>Schedule Date</ion-label>\n        <ion-datetime placeholder=\"Select Date\" \n          display-format=\"D MMM YYYY\" \n          picker-format=\"D MMM YYYY\" \n          style=\"color: dodgerblue;\"\n          formControlName=\"scheduleForChange\"></ion-datetime>\n      </ion-item>\n    </ion-list>\n  </form>\n</ion-content>\n";
      /***/
    },

    /***/
    "8x4H":
    /*!***********************************************************************!*\
      !*** ./src/app/edit-operative-history/edit-operative-history.page.ts ***!
      \***********************************************************************/

    /*! exports provided: EditOperativeHistoryPage */

    /***/
    function x4H(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "EditOperativeHistoryPage", function () {
        return EditOperativeHistoryPage;
      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! tslib */
      "mrSG");
      /* harmony import */


      var _raw_loader_edit_operative_history_page_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! raw-loader!./edit-operative-history.page.html */
      "yr4Q");
      /* harmony import */


      var _edit_operative_history_page_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./edit-operative-history.page.scss */
      "wK3v");
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/core */
      "fXoL");
      /* harmony import */


      var _ionic_angular__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @ionic/angular */
      "TEn/");
      /* harmony import */


      var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! @angular/forms */
      "3Pt+");
      /* harmony import */


      var _services_user_data_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! ../services/user-data.service */
      "DPk/");
      /* harmony import */


      var _ionic_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! @ionic/core */
      "1Bn7");

      var EditOperativeHistoryPage = /*#__PURE__*/function () {
        function EditOperativeHistoryPage(modalCtrl, fb, userDataService) {
          _classCallCheck(this, EditOperativeHistoryPage);

          this.modalCtrl = modalCtrl;
          this.fb = fb;
          this.userDataService = userDataService;
          this.history = {};
          this.tuple = [];
          this.operativeHistoryString = '';
          this.operativeHistoryJSON = {};
          this.x = '0';
          this.typeOptions = [['Surgery', 'MLB']];
          this.form = this.fb.group({
            date: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            type: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            details: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]
          });
        }

        _createClass(EditOperativeHistoryPage, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            this.operativeHistoryString = this.userDataService.medicalRecordValue['operativeHistory'];

            if (this.operativeHistoryString != '' && this.operativeHistoryString != null) {
              this.operativeHistoryJSON = JSON.parse(this.operativeHistoryString);
            }

            if (this.operativeHistoryJSON != null && this.operativeHistoryJSON != {}) {
              this.x = Object.keys(this.operativeHistoryJSON).length.toString();
              console.log(this.x);
            }
          }
        }, {
          key: "dismiss",
          value: function dismiss() {
            this.modalCtrl.dismiss();
          }
        }, {
          key: "save",
          value: function save() {
            var _this = this;

            /*     Object.keys(this.form.controls).forEach(key => {
                  this.userDataService.medicalRecordValue[key]=this.form.value[key];
                  console.log(key, this.form.get(key).value)
                }); */
            Object.keys(this.form.controls).forEach(function (key) {
              _this.history[key] = _this.form.value[key];
              console.log(key, _this.history[key]);
            }); // construct a JSON, then stringify it to store

            this.operativeHistoryJSON[this.x] = JSON.stringify(this.history);
            this.operativeHistoryString = JSON.stringify(this.operativeHistoryJSON);
            this.userDataService.medicalRecordValue['operativeHistory'] = this.operativeHistoryString;
            console.log(this.userDataService.medicalRecordValue['operativeHistory']);
            this.userDataService.saveMedicalRecord();
            this.modalCtrl.dismiss();
            location.reload();
          }
        }, {
          key: "openPicker",
          value: function openPicker() {
            var numColumns = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
            var numOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;
            var columnOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.typeOptions;
            return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {
              var _this2 = this;

              var picker;
              return regeneratorRuntime.wrap(function _callee2$(_context2) {
                while (1) {
                  switch (_context2.prev = _context2.next) {
                    case 0:
                      _context2.next = 2;
                      return _ionic_core__WEBPACK_IMPORTED_MODULE_7__["pickerController"].create({
                        columns: this.getColumns(numColumns, numOptions, columnOptions),
                        buttons: [{
                          text: 'Cancel',
                          role: 'cancel'
                        }, {
                          text: 'Confirm',
                          handler: function handler(value) {
                            console.log(value);

                            _this2.form.controls['type'].setValue(value['col-0']['text']);
                          }
                        }]
                      });

                    case 2:
                      picker = _context2.sent;
                      _context2.next = 5;
                      return picker.present();

                    case 5:
                    case "end":
                      return _context2.stop();
                  }
                }
              }, _callee2, this);
            }));
          }
        }, {
          key: "getColumns",
          value: function getColumns(numColumns, numOptions, columnOptions) {
            var columns = [];

            for (var i = 0; i < numColumns; i++) {
              columns.push({
                name: "col-".concat(i),
                options: this.getColumnOptions(i, numOptions, columnOptions)
              });
            }

            return columns;
          }
        }, {
          key: "getColumnOptions",
          value: function getColumnOptions(columnIndex, numOptions, columnOptions) {
            var options = [];

            for (var i = 0; i < numOptions; i++) {
              options.push({
                text: columnOptions[columnIndex][i % numOptions],
                value: i
              });
            }

            return options;
          }
        }]);

        return EditOperativeHistoryPage;
      }();

      EditOperativeHistoryPage.ctorParameters = function () {
        return [{
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_4__["ModalController"]
        }, {
          type: _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormBuilder"]
        }, {
          type: _services_user_data_service__WEBPACK_IMPORTED_MODULE_6__["UserDataService"]
        }];
      };

      EditOperativeHistoryPage = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Component"])({
        selector: 'app-edit-operative-history',
        template: _raw_loader_edit_operative_history_page_html__WEBPACK_IMPORTED_MODULE_1__["default"],
        styles: [_edit_operative_history_page_scss__WEBPACK_IMPORTED_MODULE_2__["default"]]
      })], EditOperativeHistoryPage);
      /***/
    },

    /***/
    "L1bm":
    /*!***********************************************************************************************!*\
      !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/edit-pathology/edit-pathology.page.html ***!
      \***********************************************************************************************/

    /*! exports provided: default */

    /***/
    function L1bm(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "<ion-header>\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-button color=\"danger\" (click)=\"dismiss()\">Cancel</ion-button>\n    </ion-buttons>\n    <ion-title>Edit</ion-title>\n    <ion-buttons slot=\"end\">\n      <ion-button (click)=\"save()\">Done</ion-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <form [formGroup]=\"form\">\n    <ion-list>\n      <ion-list-header lines=\"full\">\n        <ion-label>\n          Pathology\n        </ion-label>\n      </ion-list-header>\n\n      <ion-item>\n        <ion-label position=\"stacked\">Underlying Airway Pathology</ion-label>\n        <ion-textarea rows=\"6\" \n        placeholder=\"Enter the reason and upper airway conditions\"\n        formControlName=\"pathology\"></ion-textarea>\n      </ion-item>\n\n      <ion-item lines=\"none\">\n        <ion-label position=\"stacked\">Other Medical Conditions</ion-label>\n        <ion-textarea rows=\"6\" \n        placeholder=\"Enter other conditions\"\n        formControlName=\"otherMedicalConditions\"></ion-textarea>\n      </ion-item>\n    </ion-list>\n  </form>\n</ion-content>\n";
      /***/
    },

    /***/
    "Oz3r":
    /*!*************************************************!*\
      !*** ./src/app/services/appointment.service.ts ***!
      \*************************************************/

    /*! exports provided: AppointmentService */

    /***/
    function Oz3r(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "AppointmentService", function () {
        return AppointmentService;
      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! tslib */
      "mrSG");
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/core */
      "fXoL");
      /* harmony import */


      var _capacitor_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @capacitor/core */
      "gcOT");

      var _capacitor_core__WEBP = _capacitor_core__WEBPACK_IMPORTED_MODULE_2__["Plugins"],
          Storage = _capacitor_core__WEBP.Storage,
          LocalNotifications = _capacitor_core__WEBP.LocalNotifications;

      var AppointmentService = /*#__PURE__*/function () {
        function AppointmentService() {
          _classCallCheck(this, AppointmentService);

          this.appiontment = {}; //set the strage key for photos can be changed

          this.APPOINTMENT_STORAGE = "appointment";
        }

        _createClass(AppointmentService, [{
          key: "loadAppointment",
          value: function loadAppointment() {
            return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {
              var appiontmentJSON;
              return regeneratorRuntime.wrap(function _callee3$(_context3) {
                while (1) {
                  switch (_context3.prev = _context3.next) {
                    case 0:
                      _context3.next = 2;
                      return Storage.get({
                        key: this.APPOINTMENT_STORAGE
                      });

                    case 2:
                      appiontmentJSON = _context3.sent;
                      // set the current session value using data from DB, if it doesn't exist it wll initialize a empty array
                      this.appiontment = JSON.parse(appiontmentJSON.value) || {};
                      console.log("finished loading");

                    case 5:
                    case "end":
                      return _context3.stop();
                  }
                }
              }, _callee3, this);
            }));
          }
        }, {
          key: "saveValue",
          value: function saveValue() {
            return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {
              var JSONString;
              return regeneratorRuntime.wrap(function _callee4$(_context4) {
                while (1) {
                  switch (_context4.prev = _context4.next) {
                    case 0:
                      // console.log("setting data")
                      // convert to strig
                      JSONString = JSON.stringify(this.appiontment); // store the value in to the pair

                      Storage.set({
                        key: this.APPOINTMENT_STORAGE,
                        value: JSONString
                      });

                    case 2:
                    case "end":
                      return _context4.stop();
                  }
                }
              }, _callee4, this);
            }));
          }
        }, {
          key: "setReminder",
          value: function setReminder(appointmentTimeStr, appointmentDateStr, reminderTime, doctor, location) {
            return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {
              var notificationTitle, notificationText, pendingList;
              return regeneratorRuntime.wrap(function _callee5$(_context5) {
                while (1) {
                  switch (_context5.prev = _context5.next) {
                    case 0:
                      notificationTitle = "Appointment at " + appointmentTimeStr + ' on ' + appointmentDateStr;
                      notificationText = "You have an appointment at " + appointmentTimeStr + ' on ' + appointmentDateStr + " with Dr. " + doctor + " at " + location; //const pendingList : LocalNotificationPendingList = await LocalNotifications.getPending();
                      //const clear = await LocalNotifications.cancel(pendingList);
                      //console.log("cleared all previous", clear)

                      _context5.next = 4;
                      return LocalNotifications.schedule({
                        notifications: [{
                          id: 1,
                          title: notificationTitle,
                          body: notificationText,
                          schedule: {
                            at: new Date(reminderTime)
                          }
                        }]
                      });

                    case 4:
                      console.log("reminder set");
                      _context5.next = 7;
                      return LocalNotifications.getPending();

                    case 7:
                      pendingList = _context5.sent;
                      console.log(pendingList);

                    case 9:
                    case "end":
                      return _context5.stop();
                  }
                }
              }, _callee5);
            }));
          }
        }]);

        return AppointmentService;
      }();

      AppointmentService.ctorParameters = function () {
        return [];
      };

      AppointmentService = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
      })], AppointmentService);
      /***/
    },

    /***/
    "QQ9l":
    /*!*******************************************************************!*\
      !*** ./src/app/appointment-reminder/appointment-reminder.page.ts ***!
      \*******************************************************************/

    /*! exports provided: AppointmentReminderPage */

    /***/
    function QQ9l(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "AppointmentReminderPage", function () {
        return AppointmentReminderPage;
      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! tslib */
      "mrSG");
      /* harmony import */


      var _raw_loader_appointment_reminder_page_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! raw-loader!./appointment-reminder.page.html */
      "r8bU");
      /* harmony import */


      var _appointment_reminder_page_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./appointment-reminder.page.scss */
      "txDb");
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/core */
      "fXoL");
      /* harmony import */


      var _ionic_angular__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @ionic/angular */
      "TEn/");
      /* harmony import */


      var _capacitor_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! @capacitor/core */
      "gcOT");
      /* harmony import */


      var _angular_forms__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! @angular/forms */
      "3Pt+");
      /* harmony import */


      var _services_appointment_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! ../services/appointment.service */
      "Oz3r");
      /* harmony import */


      var _services_login_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
      /*! ../services/login.service */
      "EFyh");
      /* harmony import */


      var _angular_router__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
      /*! @angular/router */
      "tyNb"); //load browser plugin


      var Browser = _capacitor_core__WEBPACK_IMPORTED_MODULE_5__["Plugins"].Browser;

      var AppointmentReminderPage = /*#__PURE__*/function () {
        function AppointmentReminderPage(formBuilder, appointmentService, loginService, router, modalCtrl) {
          _classCallCheck(this, AppointmentReminderPage);

          this.formBuilder = formBuilder;
          this.appointmentService = appointmentService;
          this.loginService = loginService;
          this.router = router;
          this.modalCtrl = modalCtrl;
          this.today = new Date();
          this.todayString = new Date(this.today.toString().slice(0, 21)).toISOString();
          this.dateNow = this.todayString.slice(0, 10);
          this.timeNow = this.todayString.slice(11, 19);
          this.plus1Year = this.today.getFullYear();
          this.plus1YearString = this.plus1Year + 1;
          this.sceduler = this.formBuilder.group({
            appointmentDate: [this.dateNow],
            appointmentTime: [this.timeNow],
            reminderDate: [this.dateNow],
            reminderTime: [this.timeNow],
            location: [''],
            doctor: ['']
          }); //this.loginService.timeOut();
        }

        _createClass(AppointmentReminderPage, [{
          key: "openMap",
          value: function openMap() {
            return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {
              var link, encoded;
              return regeneratorRuntime.wrap(function _callee6$(_context6) {
                while (1) {
                  switch (_context6.prev = _context6.next) {
                    case 0:
                      link = "https://www.google.com/maps/search/?api=1&query=" + this.appointmentService.appiontment["Location"]; //console.log(link)

                      encoded = encodeURI(link); //console.log(encoded)

                      _context6.next = 4;
                      return Browser.open({
                        url: encoded
                      });

                    case 4:
                    case "end":
                      return _context6.stop();
                  }
                }
              }, _callee6, this);
            }));
          }
        }, {
          key: "logForm",
          value: function logForm() {
            this.appointmentService.appiontment["appointmentDate"] = this.sceduler.value["appointmentDate"];
            this.appointmentService.appiontment["appointmentTime"] = String(this.sceduler.value["appointmentTime"]).slice(0, 5);
            console.log(this.appointmentService.appiontment["appointmentTime"]);
            this.appointmentService.appiontment["reminderDate"] = this.sceduler.value["reminderDate"];
            this.appointmentService.appiontment["reminderTime"] = this.sceduler.value["reminderTime"];
            this.appointmentService.appiontment["Location"] = this.sceduler.value["location"];
            this.appointmentService.appiontment["Doctor"] = this.sceduler.value["doctor"];
            this.appointmentService.appiontment["Reminder"] = new Date(this.sceduler.value["reminder"]).toString().slice(0, 21);
            this.appointmentService.saveValue();
            var isoReminder = this.appointmentService.appiontment["reminderDate"] + 'T' + this.appointmentService.appiontment["reminderTime"];
            console.log(isoReminder);
            var reminderObj = Date.parse(isoReminder);
            console.log(reminderObj);
            this.appointmentService.setReminder(this.appointmentService.appiontment["appointmentTime"], this.appointmentService.appiontment["appointmentDate"], reminderObj, this.appointmentService.appiontment["Doctor"], this.appointmentService.appiontment["Location"]);
            this.isAppointmentSetted = true;
            this.router.navigate(['saved-appointment']);
          }
        }, {
          key: "ngOnInit",
          value: function ngOnInit() {}
        }, {
          key: "dismiss",
          value: function dismiss() {
            this.modalCtrl.dismiss();
          }
        }, {
          key: "save",
          value: function save() {
            this.modalCtrl.dismiss();
          }
        }]);

        return AppointmentReminderPage;
      }();

      AppointmentReminderPage.ctorParameters = function () {
        return [{
          type: _angular_forms__WEBPACK_IMPORTED_MODULE_6__["FormBuilder"]
        }, {
          type: _services_appointment_service__WEBPACK_IMPORTED_MODULE_7__["AppointmentService"]
        }, {
          type: _services_login_service__WEBPACK_IMPORTED_MODULE_8__["LoginService"]
        }, {
          type: _angular_router__WEBPACK_IMPORTED_MODULE_9__["Router"]
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_4__["ModalController"]
        }];
      };

      AppointmentReminderPage = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Component"])({
        selector: 'app-appointment-reminder',
        template: _raw_loader_appointment_reminder_page_html__WEBPACK_IMPORTED_MODULE_1__["default"],
        styles: [_appointment_reminder_page_scss__WEBPACK_IMPORTED_MODULE_2__["default"]]
      })], AppointmentReminderPage);
      /***/
    },

    /***/
    "TKui":
    /*!*****************************************************************************!*\
      !*** ./src/app/edit-tracheostomy-details/edit-tracheostomy-details.page.ts ***!
      \*****************************************************************************/

    /*! exports provided: EditTracheostomyDetailsPage */

    /***/
    function TKui(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "EditTracheostomyDetailsPage", function () {
        return EditTracheostomyDetailsPage;
      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! tslib */
      "mrSG");
      /* harmony import */


      var _raw_loader_edit_tracheostomy_details_page_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! raw-loader!./edit-tracheostomy-details.page.html */
      "7Tad");
      /* harmony import */


      var _edit_tracheostomy_details_page_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./edit-tracheostomy-details.page.scss */
      "/flB");
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/core */
      "fXoL");
      /* harmony import */


      var _ionic_angular__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @ionic/angular */
      "TEn/");
      /* harmony import */


      var _ionic_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! @ionic/core */
      "1Bn7");
      /* harmony import */


      var _angular_forms__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! @angular/forms */
      "3Pt+");
      /* harmony import */


      var _services_user_data_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! ../services/user-data.service */
      "DPk/");

      var EditTracheostomyDetailsPage = /*#__PURE__*/function () {
        function EditTracheostomyDetailsPage(modalCtrl, fb, userDataService) {
          _classCallCheck(this, EditTracheostomyDetailsPage);

          this.modalCtrl = modalCtrl;
          this.fb = fb;
          this.userDataService = userDataService;
          this.type = [['Bivona Uncuffed', 'Bivona Fome-Cuf', 'Bivona Aire-Cuf', 'Bivona TTS cuff', 'Bivona Flextend'], ["Neo (neonatal)", "Ped (paediatric)", "Cuffed unfenstrated", "Cuffed fenestrated", "Uncuffed fenestrated"]];
          this.form = this.fb.group({
            tubeSize: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required],
            tubeType: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required],
            suctionLength: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required],
            shaftLength: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required],
            scheduleForChange: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required]
          });
        }

        _createClass(EditTracheostomyDetailsPage, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {
              var _this3 = this;

              return regeneratorRuntime.wrap(function _callee7$(_context7) {
                while (1) {
                  switch (_context7.prev = _context7.next) {
                    case 0:
                      _context7.next = 2;
                      return this.userDataService.loadMedicalRecord();

                    case 2:
                      Object.keys(this.form.controls).forEach(function (key) {
                        _this3.form.get(key).setValue(_this3.userDataService.medicalRecordValue[key]);

                        console.log(key, _this3.form.get(key).value);
                      });

                    case 3:
                    case "end":
                      return _context7.stop();
                  }
                }
              }, _callee7, this);
            }));
          }
        }, {
          key: "dismiss",
          value: function dismiss() {
            this.modalCtrl.dismiss();
          }
        }, {
          key: "save",
          value: function save() {
            var _this4 = this;

            Object.keys(this.form.controls).forEach(function (key) {
              _this4.userDataService.medicalRecordValue[key] = _this4.form.value[key];
              console.log(key, _this4.form.get(key).value);
            });
            this.userDataService.saveMedicalRecord();
            this.modalCtrl.dismiss();
            location.reload();
          }
        }, {
          key: "openPicker",
          value: function openPicker() {
            var numColumns = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 2;
            var numOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 5;
            var columnOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.type;
            return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {
              var _this5 = this;

              var picker;
              return regeneratorRuntime.wrap(function _callee8$(_context8) {
                while (1) {
                  switch (_context8.prev = _context8.next) {
                    case 0:
                      _context8.next = 2;
                      return _ionic_core__WEBPACK_IMPORTED_MODULE_5__["pickerController"].create({
                        columns: this.getColumns(numColumns, numOptions, columnOptions),
                        buttons: [{
                          text: 'Cancel',
                          role: 'cancel'
                        }, {
                          text: 'Confirm',
                          handler: function handler(value) {
                            _this5.form.controls['tubeType'].setValue(value['col-0']['text'] + ' ' + value['col-1']['text']);

                            console.log(value);
                          }
                        }]
                      });

                    case 2:
                      picker = _context8.sent;
                      _context8.next = 5;
                      return picker.present();

                    case 5:
                    case "end":
                      return _context8.stop();
                  }
                }
              }, _callee8, this);
            }));
          }
        }, {
          key: "getColumns",
          value: function getColumns(numColumns, numOptions, columnOptions) {
            var columns = [];

            for (var i = 0; i < numColumns; i++) {
              columns.push({
                name: "col-".concat(i),
                options: this.getColumnOptions(i, numOptions, columnOptions)
              });
            }

            return columns;
          }
        }, {
          key: "getColumnOptions",
          value: function getColumnOptions(columnIndex, numOptions, columnOptions) {
            var options = [];

            for (var i = 0; i < numOptions; i++) {
              options.push({
                text: columnOptions[columnIndex][i % numOptions],
                value: i
              });
            }

            return options;
          }
        }]);

        return EditTracheostomyDetailsPage;
      }();

      EditTracheostomyDetailsPage.ctorParameters = function () {
        return [{
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_4__["ModalController"]
        }, {
          type: _angular_forms__WEBPACK_IMPORTED_MODULE_6__["FormBuilder"]
        }, {
          type: _services_user_data_service__WEBPACK_IMPORTED_MODULE_7__["UserDataService"]
        }];
      };

      EditTracheostomyDetailsPage = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Component"])({
        selector: 'app-edit-tracheostomy-details',
        template: _raw_loader_edit_tracheostomy_details_page_html__WEBPACK_IMPORTED_MODULE_1__["default"],
        styles: [_edit_tracheostomy_details_page_scss__WEBPACK_IMPORTED_MODULE_2__["default"]]
      })], EditTracheostomyDetailsPage);
      /***/
    },

    /***/
    "ZaV5":
    /*!**************************************************************************!*\
      !*** ./node_modules/@ionic/core/dist/esm/framework-delegate-4584ab5a.js ***!
      \**************************************************************************/

    /*! exports provided: a, d */

    /***/
    function ZaV5(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "a", function () {
        return attachComponent;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "d", function () {
        return detachComponent;
      });

      var attachComponent = /*#__PURE__*/function () {
        var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(delegate, container, component, cssClasses, componentProps) {
          var el;
          return regeneratorRuntime.wrap(function _callee9$(_context9) {
            while (1) {
              switch (_context9.prev = _context9.next) {
                case 0:
                  if (!delegate) {
                    _context9.next = 2;
                    break;
                  }

                  return _context9.abrupt("return", delegate.attachViewToDom(container, component, componentProps, cssClasses));

                case 2:
                  if (!(typeof component !== 'string' && !(component instanceof HTMLElement))) {
                    _context9.next = 4;
                    break;
                  }

                  throw new Error('framework delegate is missing');

                case 4:
                  el = typeof component === 'string' ? container.ownerDocument && container.ownerDocument.createElement(component) : component;

                  if (cssClasses) {
                    cssClasses.forEach(function (c) {
                      return el.classList.add(c);
                    });
                  }

                  if (componentProps) {
                    Object.assign(el, componentProps);
                  }

                  container.appendChild(el);

                  if (!el.componentOnReady) {
                    _context9.next = 11;
                    break;
                  }

                  _context9.next = 11;
                  return el.componentOnReady();

                case 11:
                  return _context9.abrupt("return", el);

                case 12:
                case "end":
                  return _context9.stop();
              }
            }
          }, _callee9);
        }));

        return function attachComponent(_x5, _x6, _x7, _x8, _x9) {
          return _ref2.apply(this, arguments);
        };
      }();

      var detachComponent = function detachComponent(delegate, element) {
        if (element) {
          if (delegate) {
            var container = element.parentElement;
            return delegate.removeViewFromDom(container, element);
          }

          element.remove();
        }

        return Promise.resolve();
      };
      /***/

    },

    /***/
    "h3R7":
    /*!***********************************************************************!*\
      !*** ./node_modules/@ionic/core/dist/esm/spinner-configs-cd7845af.js ***!
      \***********************************************************************/

    /*! exports provided: S */

    /***/
    function h3R7(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "S", function () {
        return SPINNERS;
      });

      var spinners = {
        'bubbles': {
          dur: 1000,
          circles: 9,
          fn: function fn(dur, index, total) {
            var animationDelay = "".concat(dur * index / total - dur, "ms");
            var angle = 2 * Math.PI * index / total;
            return {
              r: 5,
              style: {
                'top': "".concat(9 * Math.sin(angle), "px"),
                'left': "".concat(9 * Math.cos(angle), "px"),
                'animation-delay': animationDelay
              }
            };
          }
        },
        'circles': {
          dur: 1000,
          circles: 8,
          fn: function fn(dur, index, total) {
            var step = index / total;
            var animationDelay = "".concat(dur * step - dur, "ms");
            var angle = 2 * Math.PI * step;
            return {
              r: 5,
              style: {
                'top': "".concat(9 * Math.sin(angle), "px"),
                'left': "".concat(9 * Math.cos(angle), "px"),
                'animation-delay': animationDelay
              }
            };
          }
        },
        'circular': {
          dur: 1400,
          elmDuration: true,
          circles: 1,
          fn: function fn() {
            return {
              r: 20,
              cx: 48,
              cy: 48,
              fill: 'none',
              viewBox: '24 24 48 48',
              transform: 'translate(0,0)',
              style: {}
            };
          }
        },
        'crescent': {
          dur: 750,
          circles: 1,
          fn: function fn() {
            return {
              r: 26,
              style: {}
            };
          }
        },
        'dots': {
          dur: 750,
          circles: 3,
          fn: function fn(_, index) {
            var animationDelay = -(110 * index) + 'ms';
            return {
              r: 6,
              style: {
                'left': "".concat(9 - 9 * index, "px"),
                'animation-delay': animationDelay
              }
            };
          }
        },
        'lines': {
          dur: 1000,
          lines: 12,
          fn: function fn(dur, index, total) {
            var transform = "rotate(".concat(30 * index + (index < 6 ? 180 : -180), "deg)");
            var animationDelay = "".concat(dur * index / total - dur, "ms");
            return {
              y1: 17,
              y2: 29,
              style: {
                'transform': transform,
                'animation-delay': animationDelay
              }
            };
          }
        },
        'lines-small': {
          dur: 1000,
          lines: 12,
          fn: function fn(dur, index, total) {
            var transform = "rotate(".concat(30 * index + (index < 6 ? 180 : -180), "deg)");
            var animationDelay = "".concat(dur * index / total - dur, "ms");
            return {
              y1: 12,
              y2: 20,
              style: {
                'transform': transform,
                'animation-delay': animationDelay
              }
            };
          }
        }
      };
      var SPINNERS = spinners;
      /***/
    },

    /***/
    "qULd":
    /*!**************************************************************!*\
      !*** ./node_modules/@ionic/core/dist/esm/haptic-27b3f981.js ***!
      \**************************************************************/

    /*! exports provided: a, b, c, d, h */

    /***/
    function qULd(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "a", function () {
        return hapticSelectionStart;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "b", function () {
        return hapticSelectionChanged;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "c", function () {
        return hapticSelection;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "d", function () {
        return hapticImpact;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "h", function () {
        return hapticSelectionEnd;
      });

      var HapticEngine = {
        getEngine: function getEngine() {
          var win = window;
          return win.TapticEngine || win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics;
        },
        available: function available() {
          return !!this.getEngine();
        },
        isCordova: function isCordova() {
          return !!window.TapticEngine;
        },
        isCapacitor: function isCapacitor() {
          var win = window;
          return !!win.Capacitor;
        },
        impact: function impact(options) {
          var engine = this.getEngine();

          if (!engine) {
            return;
          }

          var style = this.isCapacitor() ? options.style.toUpperCase() : options.style;
          engine.impact({
            style: style
          });
        },
        notification: function notification(options) {
          var engine = this.getEngine();

          if (!engine) {
            return;
          }

          var style = this.isCapacitor() ? options.style.toUpperCase() : options.style;
          engine.notification({
            style: style
          });
        },
        selection: function selection() {
          this.impact({
            style: 'light'
          });
        },
        selectionStart: function selectionStart() {
          var engine = this.getEngine();

          if (!engine) {
            return;
          }

          if (this.isCapacitor()) {
            engine.selectionStart();
          } else {
            engine.gestureSelectionStart();
          }
        },
        selectionChanged: function selectionChanged() {
          var engine = this.getEngine();

          if (!engine) {
            return;
          }

          if (this.isCapacitor()) {
            engine.selectionChanged();
          } else {
            engine.gestureSelectionChanged();
          }
        },
        selectionEnd: function selectionEnd() {
          var engine = this.getEngine();

          if (!engine) {
            return;
          }

          if (this.isCapacitor()) {
            engine.selectionEnd();
          } else {
            engine.gestureSelectionEnd();
          }
        }
      };
      /**
       * Trigger a selection changed haptic event. Good for one-time events
       * (not for gestures)
       */

      var hapticSelection = function hapticSelection() {
        HapticEngine.selection();
      };
      /**
       * Tell the haptic engine that a gesture for a selection change is starting.
       */


      var hapticSelectionStart = function hapticSelectionStart() {
        HapticEngine.selectionStart();
      };
      /**
       * Tell the haptic engine that a selection changed during a gesture.
       */


      var hapticSelectionChanged = function hapticSelectionChanged() {
        HapticEngine.selectionChanged();
      };
      /**
       * Tell the haptic engine we are done with a gesture. This needs to be
       * called lest resources are not properly recycled.
       */


      var hapticSelectionEnd = function hapticSelectionEnd() {
        HapticEngine.selectionEnd();
      };
      /**
       * Use this to indicate success/failure/warning to the user.
       * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)
       */


      var hapticImpact = function hapticImpact(options) {
        HapticEngine.impact(options);
      };
      /***/

    },

    /***/
    "r8bU":
    /*!***********************************************************************************************************!*\
      !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/appointment-reminder/appointment-reminder.page.html ***!
      \***********************************************************************************************************/

    /*! exports provided: default */

    /***/
    function r8bU(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "<ion-header>\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-button color=\"danger\" (click)=\"dismiss()\">Cancel</ion-button>\n    </ion-buttons>\n    <ion-title>New Appointment</ion-title>\n    <ion-buttons slot=\"end\">\n      <ion-button (click)=\"save()\">Done</ion-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <form [formGroup]=\"sceduler\" (ngSubmit)=\"logForm()\">\n    <ion-list-header>\n      <ion-label>New Appiontment</ion-label>\n    </ion-list-header>\n    <ion-item>\n      <ion-label>Date</ion-label>\n      <ion-datetime formControlName=\"appointmentDate\" display-format=\"YYYY-MM-DD\" picker-format=\"YYYY-MM-DD\" [min]=\"this.dateNow\"></ion-datetime>\n    </ion-item>\n    <ion-item>\n      <ion-label>Time</ion-label>\n      <ion-datetime formControlName=\"appointmentTime\" display-format=\"HH:mm\" picker-format=\"HH:mm\"></ion-datetime>\n    </ion-item>\n    <ion-list-header>\n      <ion-label>Notification Time</ion-label>\n    </ion-list-header>\n    <ion-item>\n      <ion-label>Date</ion-label>\n      <ion-datetime formControlName=\"reminderDate\" display-format=\"YYYY-MM-DD\" picker-format=\"YYYY-MM-DD\" [min]=\"this.dateNow\"></ion-datetime>\n    </ion-item>\n    <ion-item>\n      <ion-label>Time</ion-label>\n      <ion-datetime formControlName=\"reminderTime\" display-format=\"HH:mm\" picker-format=\"HH:mm\"></ion-datetime>\n    </ion-item>\n    <ion-list-header>\n      <ion-label>Details</ion-label>\n    </ion-list-header>\n    <ion-item>\n      <ion-label>Locaton</ion-label>\n      <ion-input type=\"text\" formControlName=\"location\"></ion-input>\n    </ion-item>\n    <ion-item>\n      <ion-label>Doctor</ion-label>\n      <ion-input type=\"text\" formControlName=\"doctor\"></ion-input>\n    </ion-item>\n    <ion-button expand=\"block\" type=\"submit\" [disabled]=\"!sceduler.valid\">\n      Submit\n    </ion-button>\n    <ion-item lines=\"none\" *ngIf=\"isAppointmentSetted\">\n      <ion-icon color=\"success\" slot=\"start\" name=\"checkmark-circle-outline\"></ion-icon>\n      <ion-text color=\"success\" class=\"form-error\">\n        Appointment Saved and Reminder Scheduled.\n      </ion-text>\n    </ion-item>\n  </form>\n</ion-content>";
      /***/
    },

    /***/
    "tWnK":
    /*!*******************************************************!*\
      !*** ./src/app/edit-pathology/edit-pathology.page.ts ***!
      \*******************************************************/

    /*! exports provided: EditPathologyPage */

    /***/
    function tWnK(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "EditPathologyPage", function () {
        return EditPathologyPage;
      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! tslib */
      "mrSG");
      /* harmony import */


      var _raw_loader_edit_pathology_page_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! raw-loader!./edit-pathology.page.html */
      "L1bm");
      /* harmony import */


      var _edit_pathology_page_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./edit-pathology.page.scss */
      "65gq");
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/core */
      "fXoL");
      /* harmony import */


      var _ionic_angular__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @ionic/angular */
      "TEn/");
      /* harmony import */


      var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! @angular/forms */
      "3Pt+");
      /* harmony import */


      var _services_user_data_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! ../services/user-data.service */
      "DPk/");

      var EditPathologyPage = /*#__PURE__*/function () {
        function EditPathologyPage(modalCtrl, fb, userDataService) {
          _classCallCheck(this, EditPathologyPage);

          this.modalCtrl = modalCtrl;
          this.fb = fb;
          this.userDataService = userDataService;
          this.form = this.fb.group({
            pathology: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required],
            otherMedicalConditions: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]
          });
        }

        _createClass(EditPathologyPage, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee10() {
              var _this6 = this;

              return regeneratorRuntime.wrap(function _callee10$(_context10) {
                while (1) {
                  switch (_context10.prev = _context10.next) {
                    case 0:
                      _context10.next = 2;
                      return this.userDataService.loadMedicalRecord();

                    case 2:
                      Object.keys(this.form.controls).forEach(function (key) {
                        _this6.form.get(key).setValue(_this6.userDataService.medicalRecordValue[key]);

                        console.log(key, _this6.form.get(key).value);
                      });

                    case 3:
                    case "end":
                      return _context10.stop();
                  }
                }
              }, _callee10, this);
            }));
          }
        }, {
          key: "dismiss",
          value: function dismiss() {
            this.modalCtrl.dismiss();
          }
        }, {
          key: "save",
          value: function save() {
            var _this7 = this;

            Object.keys(this.form.controls).forEach(function (key) {
              _this7.userDataService.medicalRecordValue[key] = _this7.form.value[key];
              console.log(key, _this7.form.get(key).value);
            });
            this.userDataService.saveMedicalRecord();
            this.modalCtrl.dismiss();
            location.reload();
          }
        }]);

        return EditPathologyPage;
      }();

      EditPathologyPage.ctorParameters = function () {
        return [{
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_4__["ModalController"]
        }, {
          type: _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormBuilder"]
        }, {
          type: _services_user_data_service__WEBPACK_IMPORTED_MODULE_6__["UserDataService"]
        }];
      };

      EditPathologyPage.propDecorators = {
        isModal: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
        }]
      };
      EditPathologyPage = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Component"])({
        selector: 'app-edit-pathology',
        template: _raw_loader_edit_pathology_page_html__WEBPACK_IMPORTED_MODULE_1__["default"],
        styles: [_edit_pathology_page_scss__WEBPACK_IMPORTED_MODULE_2__["default"]]
      })], EditPathologyPage);
      /***/
    },

    /***/
    "txDb":
    /*!*********************************************************************!*\
      !*** ./src/app/appointment-reminder/appointment-reminder.page.scss ***!
      \*********************************************************************/

    /*! exports provided: default */

    /***/
    function txDb(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "ion-button {\n  width: 90%;\n  margin: auto;\n  margin-top: 10%;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2FwcG9pbnRtZW50LXJlbWluZGVyLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFVBQUE7RUFDQSxZQUFBO0VBQ0EsZUFBQTtBQUNKIiwiZmlsZSI6ImFwcG9pbnRtZW50LXJlbWluZGVyLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1idXR0b24ge1xuICAgIHdpZHRoOiA5MCU7XG4gICAgbWFyZ2luOiBhdXRvO1xuICAgIG1hcmdpbi10b3A6IDEwJTtcbn0iXX0= */";
      /***/
    },

    /***/
    "wK3v":
    /*!*************************************************************************!*\
      !*** ./src/app/edit-operative-history/edit-operative-history.page.scss ***!
      \*************************************************************************/

    /*! exports provided: default */

    /***/
    function wK3v(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJlZGl0LW9wZXJhdGl2ZS1oaXN0b3J5LnBhZ2Uuc2NzcyJ9 */";
      /***/
    },

    /***/
    "yr4Q":
    /*!***************************************************************************************************************!*\
      !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/edit-operative-history/edit-operative-history.page.html ***!
      \***************************************************************************************************************/

    /*! exports provided: default */

    /***/
    function yr4Q(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "<ion-header>\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-button color=\"danger\" (click)=\"dismiss()\">Cancel</ion-button>\n    </ion-buttons>\n    <ion-title>Add New Record</ion-title>\n    <ion-buttons slot=\"end\">\n      <ion-button (click)=\"save()\">Done</ion-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <form [formGroup]=\"form\">\n    <ion-list>\n      <ion-list-header lines=\"full\">\n        <ion-label>\n          Operative History\n        </ion-label>\n      </ion-list-header>\n\n      <ion-item>\n        <ion-label>Date</ion-label>\n        <ion-datetime placeholder=\"Select Date\"\n        display-format=\"D MMM YYYY\" \n        picker-format=\"D MMM YYYY\" \n        formControlName=\"date\" \n        style=\"color: dodgerblue;\"></ion-datetime>\n      </ion-item>\n\n      <ion-item>\n        <ion-label>Type</ion-label>\n        <ion-input \n          formControlName=\"type\" \n          (click)=\"openPicker()\" \n          placeholder=\"Select Type\"\n          style=\"color: dodgerblue; text-align: end;\">\n        </ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label position=\"stacked\">Details</ion-label>\n        <ion-textarea rows=\"6\" placeholder=\"Enter Details\" formControlName=\"details\"></ion-textarea>\n      </ion-item>\n    </ion-list>\n  </form>\n</ion-content>\n";
      /***/
    }
  }]);
})();
//# sourceMappingURL=common-es5.js.map