{"version":3,"sources":["webpack:///src/app/services/appointment.service.ts","webpack:///src/app/appointment-reminder/appointment-reminder-routing.module.ts","webpack:///src/app/appointment-reminder/appointment-reminder.module.ts"],"names":["Storage","LocalNotifications","AppointmentService","appointments","APPOINTMENT_STORAGE","get","key","appiontmentGet","JSON","parse","value","console","log","requestPermission","getPending","JSONString","stringify","set","appointment","id","date","slice","time","alarm","title","doctor","location","notificationTitle","appointmentDateTime","Date","displayTime","displayDate","notificationText","schedule","notifications","body","at","getTime","sound","attachments","actionTypeId","extra","notifs","providedIn","routes","path","component","AppointmentReminderPageRoutingModule","imports","forChild","exports","AppointmentReminderPageModule","declarations"],"mappings":"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","file":"appointment-reminder-appointment-reminder-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\n//import { LocalNotifications } from '@ionic-native/local-notifications/ngx';\nimport { LocalNotification, LocalNotificationsPlugin, Plugins } from '@capacitor/core';\n//import { LocalNotification, LocalNotificationPendingList, Plugins, } from '@capacitor/core';\nconst { Storage, LocalNotifications } = Plugins;\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppointmentService {\n  public appointments = {};\n  //set the strage key for photos can be changed\n  private APPOINTMENT_STORAGE: string = \"appointment\";\n\n  constructor(\n  ) { }\n\n  async loadAppointment(){\n    // create a promise that load the data from database\n    const appiontmentGet = await Storage.get({ key: this.APPOINTMENT_STORAGE });\n    // set the current session value using data from DB, if it doesn't exist it wll initialize a empty array\n    this.appointments = JSON.parse(appiontmentGet.value) || {};\n    console.log(this.appointments);\n    console.log(\"finished loading\");\n    await LocalNotifications.requestPermission();\n    console.log(LocalNotifications.getPending());\n  }\n\n  saveValue() {\n    const JSONString = JSON.stringify(this.appointments);\n    // store the value in to the pair\n    Storage.set({\n      key: this.APPOINTMENT_STORAGE,\n      value: JSONString\n    })\n  }\n\n  public async setReminder(appointment:{}, id:number) {\n    const date = appointment[\"appointmentDate\"].slice(0,10);\n    const time = appointment[\"appointmentDate\"].slice(11);\n    const alarm = appointment[\"alarmDateTime\"];\n    const title = appointment[\"title\"];\n    const doctor = appointment[\"doctor\"];\n    const location = appointment[\"location\"];\n\n    const notificationTitle = title;\n    const appointmentDateTime = new Date(appointment['appointmentDate']);\n    const displayTime = time.slice(0, 5)\n    const displayDate = date.slice(8) + '/' + date.slice(5, 7) + '/' + date.slice(0, 4)\n    const notificationText  = \"You have an appointment at \" + displayTime + \" on \" + displayDate + \" with \" + doctor + \" at \" + location;\n    \n    console.log(appointment);\n    console.log(id);\n    const notifs = await LocalNotifications.schedule({\n      notifications: [\n        {\n          title: notificationTitle,\n          body: notificationText,\n          id: id,\n          schedule: { at: new Date(appointmentDateTime.getTime() - alarm) },\n          sound: 'default',\n          attachments: null,\n          actionTypeId: \"\",\n          extra: null,\n        }\n      ]\n    });\n    console.log(LocalNotifications.getPending());\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AppointmentReminderPage } from './appointment-reminder.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AppointmentReminderPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AppointmentReminderPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n// must import this two module in the form page and add to @NgModule\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { AppointmentReminderPageRoutingModule } from './appointment-reminder-routing.module';\nimport { AppointmentReminderPage } from './appointment-reminder.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AppointmentReminderPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [AppointmentReminderPage]\n})\nexport class AppointmentReminderPageModule {}\n"]}