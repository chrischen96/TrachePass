/**
 * @fileoverview added by tsickle
 * Generated from: lib/viewer-modal/viewer-modal.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, Input, ViewChild } from '@angular/core';
import { ModalController, IonSlides } from '@ionic/angular';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@ionic/angular';
import * as ɵngcc2 from '@angular/common';

var _c0 = ["sliderRef"];
var _c1 = function (a0) { return { "no-title": a0 }; };
var _c2 = function (a0) { return { "no-text": a0 }; };
var ViewerModalComponent = /** @class */ (function () {
    function ViewerModalComponent(modalController) {
        this.modalController = modalController;
        // tslint:disable: no-inferrable-types
        this.alt = '';
        this.scheme = 'auto';
        this.slideOptions = {};
        this.srcFallback = '';
        this.srcHighRes = '';
        this.swipeToClose = true;
        this.text = '';
        this.title = '';
        this.titleSize = '';
        // tslint:enable: no-inferrable-types
        this.defaultSlideOptions = {
            centeredSlides: true,
            passiveListeners: false,
            zoom: {
                enabled: true,
            },
        };
        this.options = {};
        this.swipeState = {
            phase: 'init',
            direction: 'none',
            swipeType: 'none',
            startX: 0,
            startY: 0,
            distance: 0,
            distanceX: 0,
            distanceY: 0,
            threshold: 150,
            // required min distance traveled to be considered swipe
            restraint: 100,
            // maximum distance allowed at the same time in perpendicular direction
            allowedTime: 500,
            // maximum time allowed to travel that distance
            elapsedTime: 0,
            startTime: 0,
        };
    }
    /**
     * @return {?}
     */
    ViewerModalComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var swiper;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.options = tslib_1.__assign({}, this.defaultSlideOptions, this.slideOptions);
                        this.src = this.srcHighRes || this.src;
                        this.setStyle();
                        this.setScheme(this.scheme);
                        this.initSwipeToClose(this.swipeToClose);
                        return [4 /*yield*/, this.slides.getSwiper()];
                    case 1:
                        swiper = _a.sent();
                        swiper.appendSlide("<ion-slide><img alt=\"" + this.alt + "\" src=\"" + this.src + "\" onerror=\"this.src='" + this.srcFallback + "'\"/></ion-slide>");
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * @return {?}
     */
    ViewerModalComponent.prototype.setStyle = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var el = document.querySelector('.ion-img-viewer');
        el.style.setProperty('--height', '100%');
        el.style.setProperty('--width', '100%');
        el.style.setProperty('--border-radius', '0');
    };
    /**
     * @param {?} scheme
     * @return {?}
     */
    ViewerModalComponent.prototype.setScheme = /**
     * @param {?} scheme
     * @return {?}
     */
    function (scheme) {
        if (scheme === 'auto') {
            return;
        }
        /** @type {?} */
        var el = document.querySelector('.ion-img-viewer');
        if (this.scheme === 'light') {
            el.style.setProperty('--ion-background-color', '#ffffff');
            el.style.setProperty('--ion-background-color-rgb', '255, 255, 255');
            el.style.setProperty('--ion-text-color', '#000');
            el.style.setProperty('--ion-text-color-rgb', '0,0,0');
        }
        if (this.scheme === 'dark') {
            if (el.classList.contains('ios')) {
                el.style.setProperty('--ion-background-color', '#000000');
                el.style.setProperty('--ion-background-color-rgb', '0, 0, 0');
            }
            else {
                el.style.setProperty('--ion-background-color', '#121212');
                el.style.setProperty('--ion-background-color-rgb', '18,18,18');
            }
            el.style.setProperty('--ion-text-color', '#ffffff');
            el.style.setProperty('--ion-text-color-rgb', '255,255,255');
        }
    };
    /**
     * @see http://www.javascriptkit.com/javatutors/touchevents3.shtml
     */
    /**
     * @see http://www.javascriptkit.com/javatutors/touchevents3.shtml
     * @param {?=} isActive
     * @return {?}
     */
    ViewerModalComponent.prototype.initSwipeToClose = /**
     * @see http://www.javascriptkit.com/javatutors/touchevents3.shtml
     * @param {?=} isActive
     * @return {?}
     */
    function (isActive) {
        var _this = this;
        if (isActive === void 0) { isActive = true; }
        if (!isActive) {
            return;
        }
        /** @type {?} */
        var el = document.querySelector('ion-modal');
        el.addEventListener('mousedown', (/**
         * @param {?} event
         * @return {?}
         */
        function (event) { return _this.swipeStart(event); }), true);
        el.addEventListener('mousemove', (/**
         * @param {?} event
         * @return {?}
         */
        function (event) { return _this.swipeMove(event); }), true);
        el.addEventListener('mouseup', (/**
         * @param {?} event
         * @return {?}
         */
        function (event) { return _this.swipeEnd(event); }), true);
        el.addEventListener('touchstart', (/**
         * @param {?} event
         * @return {?}
         */
        function (event) { return _this.swipeStart(event); }), true);
        el.addEventListener('touchmove', (/**
         * @param {?} event
         * @return {?}
         */
        function (event) { return _this.swipeMove(event); }), true);
        el.addEventListener('touchend', (/**
         * @param {?} event
         * @return {?}
         */
        function (event) { return _this.swipeEnd(event); }), true);
        this.modalController.getTop().then((/**
         * @param {?} modal
         * @return {?}
         */
        function (modal) {
            modal.onWillDismiss().then((/**
             * @return {?}
             */
            function () {
                document.removeEventListener('mousedown', _this.swipeStart, true);
                document.removeEventListener('mousemove', _this.swipeMove, true);
                document.removeEventListener('mouseup', _this.swipeMove, true);
                document.removeEventListener('touchstart', _this.swipeStart, true);
                document.removeEventListener('touchmove', _this.swipeMove, true);
                document.removeEventListener('touchend', _this.swipeMove, true);
            }));
        }));
    };
    /**
     * @param {?} event
     * @return {?}
     */
    ViewerModalComponent.prototype.swipeStart = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        var _a = event.type === 'touchstart' ? event.changedTouches[0] : event, pageX = _a.pageX, pageY = _a.pageY;
        this.swipeState = tslib_1.__assign({}, this.swipeState, { phase: 'start', direction: 'none', distance: 0, startX: pageX, startY: pageY, startTime: new Date().getTime() });
    };
    /**
     * @param {?} event
     * @return {?}
     */
    ViewerModalComponent.prototype.swipeMove = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (this.swipeState.phase === 'none') {
            return;
        }
        var _a = event.type === 'touchmove' ? event.changedTouches[0] : event, pageX = _a.pageX, pageY = _a.pageY;
        // get horizontal dist traveled by finger while in contact with surface
        /** @type {?} */
        var distanceX = pageX - this.swipeState.startX;
        // get vertical dist traveled by finger while in contact with surface
        /** @type {?} */
        var distanceY = pageY - this.swipeState.startY;
        /** @type {?} */
        var direction;
        /** @type {?} */
        var distance;
        if (Math.abs(distanceX) > Math.abs(distanceY)) {
            // if distance traveled horizontally is greater than vertically, consider this a horizontal swipe
            direction = distanceX < 0 ? 'left' : 'right';
            distance = distanceX;
        }
        else {
            // else consider this a vertical swipe
            direction = distanceY < 0 ? 'up' : 'down';
            distance = distanceY;
        }
        this.swipeState = tslib_1.__assign({}, this.swipeState, { phase: 'move', direction: direction,
            distance: distance,
            distanceX: distanceX,
            distanceY: distanceY });
        event.preventDefault();
    };
    /**
     * @param {?} event
     * @return {?}
     */
    ViewerModalComponent.prototype.swipeEnd = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (this.swipeState.phase === 'none') {
            return;
        }
        var _a = this.swipeState, allowedTime = _a.allowedTime, direction = _a.direction, restraint = _a.restraint, startTime = _a.startTime, threshold = _a.threshold, distanceX = _a.distanceX, distanceY = _a.distanceY;
        /** @type {?} */
        var swipeType;
        /** @type {?} */
        var elapsedTime = new Date().getTime() - startTime;
        if (elapsedTime <= allowedTime) {
            // first condition for a swipe met
            if (Math.abs(distanceX) >= threshold && Math.abs(distanceY) <= restraint) {
                // 2nd condition for horizontal swipe met
                swipeType = direction; // set swipeType to either "left" or "right"
            }
            else if (Math.abs(distanceY) >= threshold && Math.abs(distanceX) <= restraint) {
                // 2nd condition for vertical swipe met
                swipeType = direction; // set swipeType to either "top" or "down"
            }
        }
        this.swipeState = tslib_1.__assign({}, this.swipeState, { phase: 'end', swipeType: swipeType });
        if (swipeType === 'down') {
            return this.closeModal();
        }
    };
    /**
     * @return {?}
     */
    ViewerModalComponent.prototype.closeModal = /**
     * @return {?}
     */
    function () {
        this.modalController.dismiss();
    };
    /** @nocollapse */
    ViewerModalComponent.ctorParameters = function () { return [
        { type: ModalController }
    ]; };
    ViewerModalComponent.propDecorators = {
        alt: [{ type: Input }],
        scheme: [{ type: Input }],
        slideOptions: [{ type: Input }],
        src: [{ type: Input }],
        srcFallback: [{ type: Input }],
        srcHighRes: [{ type: Input }],
        swipeToClose: [{ type: Input }],
        text: [{ type: Input }],
        title: [{ type: Input }],
        titleSize: [{ type: Input }],
        slides: [{ type: ViewChild, args: ['sliderRef', { static: true },] }]
    };
ViewerModalComponent.ɵfac = function ViewerModalComponent_Factory(t) { return new (t || ViewerModalComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ModalController)); };
ViewerModalComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ViewerModalComponent, selectors: [["ion-viewer-modal"]], viewQuery: function ViewerModalComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(_c0, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.slides = _t.first);
    } }, inputs: { alt: "alt", scheme: "scheme", slideOptions: "slideOptions", srcFallback: "srcFallback", srcHighRes: "srcHighRes", swipeToClose: "swipeToClose", text: "text", title: "title", titleSize: "titleSize", src: "src" }, decls: 14, vars: 11, consts: [[3, "ngClass"], ["slot", "primary"], [3, "click"], ["slot", "icon-only", "name", "close"], [3, "size"], [3, "forceOverscroll"], [3, "options"], ["sliderRef", ""], [1, "ion-text-center"]], template: function ViewerModalComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "ion-header", 0);
        ɵngcc0.ɵɵelementStart(1, "ion-toolbar");
        ɵngcc0.ɵɵelementStart(2, "ion-buttons", 1);
        ɵngcc0.ɵɵelementStart(3, "ion-button", 2);
        ɵngcc0.ɵɵlistener("click", function ViewerModalComponent_Template_ion_button_click_3_listener() { return ctx.closeModal(); });
        ɵngcc0.ɵɵelement(4, "ion-icon", 3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(5, "ion-title", 4);
        ɵngcc0.ɵɵtext(6);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(7, "ion-content", 5);
        ɵngcc0.ɵɵelement(8, "ion-slides", 6, 7);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(10, "ion-footer", 0);
        ɵngcc0.ɵɵelementStart(11, "ion-toolbar", 8);
        ɵngcc0.ɵɵelementStart(12, "ion-text");
        ɵngcc0.ɵɵtext(13);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(7, _c1, ctx.title.length <= 0));
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵproperty("size", ctx.titleSize);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate(ctx.title);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("forceOverscroll", false);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("options", ctx.options);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(9, _c2, ctx.text.length <= 0));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ctx.text);
    } }, directives: [ɵngcc1.IonHeader, ɵngcc2.NgClass, ɵngcc1.IonToolbar, ɵngcc1.IonButtons, ɵngcc1.IonButton, ɵngcc1.IonIcon, ɵngcc1.IonTitle, ɵngcc1.IonContent, ɵngcc1.IonSlides, ɵngcc1.IonFooter, ɵngcc1.IonText], styles: ["ion-slides[_ngcontent-%COMP%]{--height:100%;height:100%}ion-toolbar[_ngcontent-%COMP%]{--border-style:none;--background:rgba(var(--ion-background-color-rgb, (255, 255, 255)), 0.6);background:rgba(var(--ion-background-color-rgb,255,255,255),.6)}ion-header[_ngcontent-%COMP%]{opacity:1;position:absolute}ion-header.no-title[_ngcontent-%COMP%]:after{content:none}ion-header.no-title[_ngcontent-%COMP%]   ion-toolbar[_ngcontent-%COMP%]{--background:rgba(0, 0, 0, 0);background:rgba(0,0,0,0)}ion-footer[_ngcontent-%COMP%]{position:absolute;bottom:0}ion-footer.no-text[_ngcontent-%COMP%]:before{content:none}ion-footer.no-text[_ngcontent-%COMP%]   ion-toolbar[_ngcontent-%COMP%]{--background:rgba(0, 0, 0, 0);background:rgba(0,0,0,0)}"] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ViewerModalComponent, [{
        type: Component,
        args: [{
                selector: 'ion-viewer-modal',
                template: "<ion-header [ngClass]=\"{ 'no-title': title.length <= 0 }\">\n  <ion-toolbar>\n    <ion-buttons slot=\"primary\">\n      <ion-button (click)=\"closeModal()\">\n        <ion-icon slot=\"icon-only\" name=\"close\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n    <ion-title [size]=\"titleSize\">{{ title }}</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content [forceOverscroll]=\"false\">\n  <ion-slides [options]=\"options\" #sliderRef>\n    <!-- <ion-slide>\n      <div class=\"swiper-zoom-container\">\n        <img [alt]=\"this.alt\" [src]=\"this.src\" (error)=\"onError($event)\" />\n      </div>\n    </ion-slide> -->\n  </ion-slides>\n</ion-content>\n\n<ion-footer [ngClass]=\"{ 'no-text': text.length <= 0 }\">\n  <ion-toolbar class=\"ion-text-center\">\n    <ion-text>{{ text }}</ion-text>\n  </ion-toolbar>\n</ion-footer>\n",
                styles: ["ion-slides{--height:100%;height:100%}ion-toolbar{--border-style:none;--background:rgba(var(--ion-background-color-rgb, (255, 255, 255)), 0.6);background:rgba(var(--ion-background-color-rgb,255,255,255),.6)}ion-header{opacity:1;position:absolute}ion-header.no-title:after{content:none}ion-header.no-title ion-toolbar{--background:rgba(0, 0, 0, 0);background:rgba(0,0,0,0)}ion-footer{position:absolute;bottom:0}ion-footer.no-text:before{content:none}ion-footer.no-text ion-toolbar{--background:rgba(0, 0, 0, 0);background:rgba(0,0,0,0)}"]
            }]
    }], function () { return [{ type: ɵngcc1.ModalController }]; }, { alt: [{
            type: Input
        }], scheme: [{
            type: Input
        }], slideOptions: [{
            type: Input
        }], srcFallback: [{
            type: Input
        }], srcHighRes: [{
            type: Input
        }], swipeToClose: [{
            type: Input
        }], text: [{
            type: Input
        }], title: [{
            type: Input
        }], titleSize: [{
            type: Input
        }], src: [{
            type: Input
        }], slides: [{
            type: ViewChild,
            args: ['sliderRef', { static: true }]
        }] }); })();
    return ViewerModalComponent;
}());
export { ViewerModalComponent };
if (false) {
    /** @type {?} */
    ViewerModalComponent.prototype.alt;
    /** @type {?} */
    ViewerModalComponent.prototype.scheme;
    /** @type {?} */
    ViewerModalComponent.prototype.slideOptions;
    /** @type {?} */
    ViewerModalComponent.prototype.src;
    /** @type {?} */
    ViewerModalComponent.prototype.srcFallback;
    /** @type {?} */
    ViewerModalComponent.prototype.srcHighRes;
    /** @type {?} */
    ViewerModalComponent.prototype.swipeToClose;
    /** @type {?} */
    ViewerModalComponent.prototype.text;
    /** @type {?} */
    ViewerModalComponent.prototype.title;
    /** @type {?} */
    ViewerModalComponent.prototype.titleSize;
    /** @type {?} */
    ViewerModalComponent.prototype.defaultSlideOptions;
    /** @type {?} */
    ViewerModalComponent.prototype.options;
    /** @type {?} */
    ViewerModalComponent.prototype.swipeState;
    /** @type {?} */
    ViewerModalComponent.prototype.slides;
    /**
     * @type {?}
     * @private
     */
    ViewerModalComponent.prototype.modalController;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,