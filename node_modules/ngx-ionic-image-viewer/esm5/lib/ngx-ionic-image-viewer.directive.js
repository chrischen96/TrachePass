/**
 * @fileoverview added by tsickle
 * Generated from: lib/ngx-ionic-image-viewer.directive.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Directive, ElementRef, HostListener, Input, Renderer2 } from '@angular/core';
import { ModalController } from '@ionic/angular';
import { ViewerModalComponent } from './viewer-modal/viewer-modal.component';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@ionic/angular';
var NgxIonicImageViewerDirective = /** @class */ (function () {
    function NgxIonicImageViewerDirective(el, renderer, modalController) {
        this.el = el;
        this.renderer = renderer;
        this.modalController = modalController;
    }
    /**
     * @return {?}
     */
    NgxIonicImageViewerDirective.prototype.onClick = /**
     * @return {?}
     */
    function () {
        this.viewImage(this.src, this.srcFallback, this.srcHighRes, this.title, this.titleSize, this.text, this.scheme, this.slideOptions, this.swipeToClose);
    };
    /**
     * @param {?} error
     * @return {?}
     */
    NgxIonicImageViewerDirective.prototype.onError = /**
     * @param {?} error
     * @return {?}
     */
    function (error) {
        if (this.src !== this.el.nativeElement.src) {
            this.src = this.el.nativeElement.src;
        }
        if (this.srcFallback) {
            this.renderer.setAttribute(this.el.nativeElement, 'src', this.srcFallback);
        }
    };
    /**
     * @return {?}
     */
    NgxIonicImageViewerDirective.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        if (!this.el.nativeElement.hasAttribute('src')) {
            this.renderer.setAttribute(this.el.nativeElement, 'src', this.src);
        }
    };
    /**
     * @param {?} src
     * @param {?=} srcFallback
     * @param {?=} srcHighRes
     * @param {?=} title
     * @param {?=} titleSize
     * @param {?=} text
     * @param {?=} scheme
     * @param {?=} slideOptions
     * @param {?=} swipeToClose
     * @return {?}
     */
    NgxIonicImageViewerDirective.prototype.viewImage = /**
     * @param {?} src
     * @param {?=} srcFallback
     * @param {?=} srcHighRes
     * @param {?=} title
     * @param {?=} titleSize
     * @param {?=} text
     * @param {?=} scheme
     * @param {?=} slideOptions
     * @param {?=} swipeToClose
     * @return {?}
     */
    function (src, srcFallback, srcHighRes, title, titleSize, text, scheme, slideOptions, swipeToClose) {
        if (srcFallback === void 0) { srcFallback = ''; }
        if (srcHighRes === void 0) { srcHighRes = ''; }
        if (title === void 0) { title = ''; }
        if (titleSize === void 0) { titleSize = ''; }
        if (text === void 0) { text = ''; }
        if (scheme === void 0) { scheme = 'auto'; }
        if (slideOptions === void 0) { slideOptions = {}; }
        if (swipeToClose === void 0) { swipeToClose = true; }
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var modal;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.modalController.create({
                            component: ViewerModalComponent,
                            componentProps: {
                                src: src,
                                srcFallback: srcFallback,
                                srcHighRes: srcHighRes,
                                title: title,
                                titleSize: titleSize,
                                text: text,
                                scheme: scheme,
                                slideOptions: slideOptions,
                                swipeToClose: swipeToClose
                            },
                            cssClass: this.cssClass instanceof Array ? tslib_1.__spread(['ion-img-viewer'], this.cssClass) : ['ion-img-viewer', this.cssClass],
                            keyboardClose: true,
                            showBackdrop: true
                        })];
                    case 1:
                        modal = _a.sent();
                        return [4 /*yield*/, modal.present()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /** @nocollapse */
    NgxIonicImageViewerDirective.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 },
        { type: ModalController }
    ]; };
    NgxIonicImageViewerDirective.propDecorators = {
        cssClass: [{ type: Input }],
        scheme: [{ type: Input }],
        slideOptions: [{ type: Input }],
        src: [{ type: Input }],
        srcFallback: [{ type: Input }],
        srcHighRes: [{ type: Input }],
        swipeToClose: [{ type: Input }],
        text: [{ type: Input }],
        title: [{ type: Input }],
        titleSize: [{ type: Input }],
        onClick: [{ type: HostListener, args: ['click',] }],
        onError: [{ type: HostListener, args: ['error', ['$event'],] }]
    };
NgxIonicImageViewerDirective.ɵfac = function NgxIonicImageViewerDirective_Factory(t) { return new (t || NgxIonicImageViewerDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ModalController)); };
NgxIonicImageViewerDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgxIonicImageViewerDirective, selectors: [["", "ionImgViewer", ""]], hostBindings: function NgxIonicImageViewerDirective_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function NgxIonicImageViewerDirective_click_HostBindingHandler() { return ctx.onClick(); })("error", function NgxIonicImageViewerDirective_error_HostBindingHandler($event) { return ctx.onError($event); });
    } }, inputs: { src: "src", cssClass: "cssClass", scheme: "scheme", slideOptions: "slideOptions", srcFallback: "srcFallback", srcHighRes: "srcHighRes", swipeToClose: "swipeToClose", text: "text", title: "title", titleSize: "titleSize" } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxIonicImageViewerDirective, [{
        type: Directive,
        args: [{
                selector: '[ionImgViewer]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc1.ModalController }]; }, { onClick: [{
            type: HostListener,
            args: ['click']
        }], onError: [{
            type: HostListener,
            args: ['error', ['$event']]
        }], src: [{
            type: Input
        }], cssClass: [{
            type: Input
        }], scheme: [{
            type: Input
        }], slideOptions: [{
            type: Input
        }], srcFallback: [{
            type: Input
        }], srcHighRes: [{
            type: Input
        }], swipeToClose: [{
            type: Input
        }], text: [{
            type: Input
        }], title: [{
            type: Input
        }], titleSize: [{
            type: Input
        }] }); })();
    return NgxIonicImageViewerDirective;
}());
export { NgxIonicImageViewerDirective };
if (false) {
    /** @type {?} */
    NgxIonicImageViewerDirective.prototype.cssClass;
    /** @type {?} */
    NgxIonicImageViewerDirective.prototype.scheme;
    /** @type {?} */
    NgxIonicImageViewerDirective.prototype.slideOptions;
    /** @type {?} */
    NgxIonicImageViewerDirective.prototype.src;
    /** @type {?} */
    NgxIonicImageViewerDirective.prototype.srcFallback;
    /** @type {?} */
    NgxIonicImageViewerDirective.prototype.srcHighRes;
    /** @type {?} */
    NgxIonicImageViewerDirective.prototype.swipeToClose;
    /** @type {?} */
    NgxIonicImageViewerDirective.prototype.text;
    /** @type {?} */
    NgxIonicImageViewerDirective.prototype.title;
    /** @type {?} */
    NgxIonicImageViewerDirective.prototype.titleSize;
    /**
     * @type {?}
     * @private
     */
    NgxIonicImageViewerDirective.prototype.el;
    /**
     * @type {?}
     * @private
     */
    NgxIonicImageViewerDirective.prototype.renderer;
    /** @type {?} */
    NgxIonicImageViewerDirective.prototype.modalController;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWlvbmljLWltYWdlLXZpZXdlci5kaXJlY3RpdmUuanMiLCJzb3VyY2VzIjpbIm5neC1pb25pYy1pbWFnZS12aWV3ZXIvbGliL25neC1pb25pYy1pbWFnZS12aWV3ZXIuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBQzlGLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNqRCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQzs7O0FBRTdFO0FBR21CLElBQ2pCLHNDQUFvQixFQUFjLEVBQVUsUUFBbUIsRUFBUyxlQUFnQztBQUFJLFFBQXhGLE9BQUUsR0FBRixFQUFFLENBQVk7QUFBQyxRQUFTLGFBQVEsR0FBUixRQUFRLENBQVc7QUFBQyxRQUFRLG9CQUFlLEdBQWYsZUFBZSxDQUFpQjtBQUFDLElBQUUsQ0FBQztBQUM5RztBQUNPO0FBQW1CO0FBQVEsSUFXVCw4Q0FBTztBQUM5QjtBQUNEO0FBQVEsSUFGUDtBQUFjLFFBQ1osSUFBSSxDQUFDLFNBQVMsQ0FDWixJQUFJLENBQUMsR0FBRyxFQUNSLElBQUksQ0FBQyxXQUFXLEVBQ2hCLElBQUksQ0FBQyxVQUFVLEVBQ2YsSUFBSSxDQUFDLEtBQUssRUFDVixJQUFJLENBQUMsU0FBUyxFQUNkLElBQUksQ0FBQyxJQUFJLEVBQ1QsSUFBSSxDQUFDLE1BQU0sRUFDWCxJQUFJLENBQUMsWUFBWSxFQUNqQixJQUFJLENBQUMsWUFBWSxDQUNsQixDQUFDO0FBQ04sSUFBRSxDQUFDO0FBRUg7QUFBUTtBQUF3QjtBQUFtQjtBQUM5QyxJQURnQyw4Q0FBTztBQUFPO0FBQzlCO0FBQW1CO0FBQVEsSUFEOUMsVUFBMkMsS0FBSztBQUNsRCxRQUFJLElBQUksSUFBSSxDQUFDLEdBQUcsS0FBSyxJQUFJ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O0FBQUksZ0JBQ3pELGVBQWU7QUFBRztBQUFVO0FBQ0UsMkJBUXBDLEtBQUs7QUFBSyx5QkFDVixLQUFLO0FBQUssK0JBQ1YsS0FBSztBQUFLLHNCQUNWLEtBQUs7QUFBSyw4QkFDVixLQUFLO0FBQUssNkJBQ1YsS0FBSztBQUFLLCtCQUNWLEtBQUs7QUFBSyx1QkFDVixLQUFLO0FBQUssd0JBQ1YsS0FBSztBQUFLLDRCQUNWLEtBQUs7QUFBSywwQkFFVixZQUFZLFNBQUMsT0FBTztBQUFPLDBCQWMzQixZQUFZLFNBQUMsT0FBTyxFQUFFLENBQUMsUUFBUSxDQUFDO0FBQU07Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztvQkFBTTtBQUFDLElBOENoRCxtQ0FBQztBQUNBLENBREEsQUE3RUQsSUE2RUM7QUFDRCxTQTNFYSw0QkFBNEI7QUFBSTtBQUFhO0FBQ3pDLElBRWYsZ0RBQXNDO0FBQ3hDO0FBQXFCLElBQW5CLDhDQUF5QjtBQUMzQjtBQUFxQixJQUFuQixvREFBK0I7QUFDakM7QUFBcUIsSUFBbkIsMkNBQXFCO0FBQ3ZCO0FBQXFCLElBQW5CLG1EQUE4QjtBQUNoQztBQUFxQixJQUFuQixrREFBNkI7QUFDL0I7QUFBcUIsSUFBbkIsb0RBQWdDO0FBQ2xDO0FBQXFCLElBQW5CLDRDQUF1QjtBQUN6QjtBQUFxQixJQUFuQiw2Q0FBd0I7QUFDMUI7QUFBcUIsSUFBbkIsaURBQTRCO0FBQzlCO0FBQ087QUFBaUI7QUFDckI7QUFBUSxJQWRHLDBDQUFzQjtBQUFDO0FBQVE7QUFBaUI7QUFBZ0I7QUFBUSxJQUFoRCxnREFBMkI7QUFBQztBQUFxQixJQUFwQix1REFBdUM7QUFBQztBQUFFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBFbGVtZW50UmVmLCBIb3N0TGlzdGVuZXIsIElucHV0LCBSZW5kZXJlcjIsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTW9kYWxDb250cm9sbGVyIH0gZnJvbSAnQGlvbmljL2FuZ3VsYXInO1xuaW1wb3J0IHsgVmlld2VyTW9kYWxDb21wb25lbnQgfSBmcm9tICcuL3ZpZXdlci1tb2RhbC92aWV3ZXItbW9kYWwuY29tcG9uZW50JztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW2lvbkltZ1ZpZXdlcl0nXG59KVxuZXhwb3J0IGNsYXNzIE5neElvbmljSW1hZ2VWaWV3ZXJEaXJlY3RpdmUgaW1wbGVtZW50cyBPbkluaXQge1xuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGVsOiBFbGVtZW50UmVmLCBwcml2YXRlIHJlbmRlcmVyOiBSZW5kZXJlcjIsIHB1YmxpYyBtb2RhbENvbnRyb2xsZXI6IE1vZGFsQ29udHJvbGxlcikge31cblxuICBASW5wdXQoKSBjc3NDbGFzcz86IHN0cmluZyB8IHN0cmluZ1tdO1xuICBASW5wdXQoKSBzY2hlbWU/OiBzdHJpbmc7XG4gIEBJbnB1dCgpIHNsaWRlT3B0aW9ucz86IG9iamVjdDtcbiAgQElucHV0KCkgc3JjOiBzdHJpbmc7XG4gIEBJbnB1dCgpIHNyY0ZhbGxiYWNrPzogc3RyaW5nO1xuICBASW5wdXQoKSBzcmNIaWdoUmVzPzogc3RyaW5nO1xuICBASW5wdXQoKSBzd2lwZVRvQ2xvc2U/OiBib29sZWFuO1xuICBASW5wdXQoKSB0ZXh0Pzogc3RyaW5nO1xuICBASW5wdXQoKSB0aXRsZT86IHN0cmluZztcbiAgQElucHV0KCkgdGl0bGVTaXplPzogc3RyaW5nO1xuXG4gIEBIb3N0TGlzdGVuZXIoJ2NsaWNrJykgb25DbGljaygpIHtcbiAgICB0aGlzLnZpZXdJbWFnZShcbiAgICAgIHRoaXMuc3JjLFxuICAgICAgdGhpcy5zcmNGYWxsYmFjayxcbiAgICAgIHRoaXMuc3JjSGlnaFJlcyxcbiAgICAgIHRoaXMudGl0bGUsXG4gICAgICB0aGlzLnRpdGxlU2l6ZSxcbiAgICAgIHRoaXMudGV4dCxcbiAgICAgIHRoaXMuc2NoZW1lLFxuICAgICAgdGhpcy5zbGlkZU9wdGlvbnMsXG4gICAgICB0aGlzLnN3aXBlVG9DbG9zZVxuICAgICk7XG4gIH1cblxuICBASG9zdExpc3RlbmVyKCdlcnJvcicsIFsnJGV2ZW50J10pIG9uRXJyb3IoZXJyb3IpIHtcbiAgICBpZiAodGhpcy5zcmMgIT09IHRoaXMuZWwubmF0aXZlRWxlbWVudC5zcmMpIHtcbiAgICAgIHRoaXMuc3JjID0gdGhpcy5lbC5uYXRpdmVFbGVtZW50LnNyYztcbiAgICB9XG4gICAgaWYgKHRoaXMuc3JjRmFsbGJhY2spIHtcbiAgICAgIHRoaXMucmVuZGVyZXIuc2V0QXR0cmlidXRlKHRoaXMuZWwubmF0aXZlRWxlbWVudCwgJ3NyYycsIHRoaXMuc3JjRmFsbGJhY2spO1xuICAgIH1cbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIGlmICghdGhpcy5lbC5uYXRpdmVFbGVtZW50Lmhhc0F0dHJpYnV0ZSgnc3JjJykpIHtcbiAgICAgIHRoaXMucmVuZGVyZXIuc2V0QXR0cmlidXRlKHRoaXMuZWwubmF0aXZlRWxlbWVudCwgJ3NyYycsIHRoaXMuc3JjKTtcbiAgICB9XG4gIH1cblxuICBhc3luYyB2aWV3SW1hZ2UoXG4gICAgc3JjOiBzdHJpbmcsXG4gICAgc3JjRmFsbGJhY2s6IHN0cmluZyA9ICcnLFxuICAgIHNyY0hpZ2hSZXM6IHN0cmluZyA9ICcnLFxuICAgIHRpdGxlOiBzdHJpbmcgPSAnJyxcbiAgICB0aXRsZVNpemU6IHN0cmluZyA9ICcnLFxuICAgIHRleHQ6IHN0cmluZyA9ICcnLFxuICAgIHNjaGVtZTogc3RyaW5nID0gJ2F1dG8nLFxuICAgIHNsaWRlT3B0aW9uczogb2JqZWN0ID0ge30sXG4gICAgc3dpcGVUb0Nsb3NlOiBib29sZWFuID0gdHJ1ZVxuICApIHtcbiAgICBjb25zdCBtb2RhbCA9IGF3YWl0IHRoaXMubW9kYWxDb250cm9sbGVyLmNyZWF0ZSh7XG4gICAgICBjb21wb25lbnQ6IFZpZXdlck1vZGFsQ29tcG9uZW50LFxuICAgICAgY29tcG9uZW50UHJvcHM6IHtcbiAgICAgICAgc3JjLFxuICAgICAgICBzcmNGYWxsYmFjayxcbiAgICAgICAgc3JjSGlnaFJlcyxcbiAgICAgICAgdGl0bGUsXG4gICAgICAgIHRpdGxlU2l6ZSxcbiAgICAgICAgdGV4dCxcbiAgICAgICAgc2NoZW1lLFxuICAgICAgICBzbGlkZU9wdGlvbnMsXG4gICAgICAgIHN3aXBlVG9DbG9zZVxuICAgICAgfSxcbiAgICAgIGNzc0NsYXNzOiB0aGlzLmNzc0NsYXNzIGluc3RhbmNlb2YgQXJyYXkgPyBbJ2lvbi1pbWctdmlld2VyJywgLi4udGhpcy5jc3NDbGFzc10gOiBbJ2lvbi1pbWctdmlld2VyJywgdGhpcy5jc3NDbGFzc10sXG4gICAgICBrZXlib2FyZENsb3NlOiB0cnVlLFxuICAgICAgc2hvd0JhY2tkcm9wOiB0cnVlXG4gICAgfSk7XG5cbiAgICByZXR1cm4gYXdhaXQgbW9kYWwucHJlc2VudCgpO1xuICB9XG59XG4iXX0=