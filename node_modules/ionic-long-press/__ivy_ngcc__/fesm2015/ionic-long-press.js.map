{"version":3,"file":"ionic-long-press.js","sources":["ionic-long-press/directives/long-press.directive.ts","ionic-long-press/long-press.module.ts","ionic-long-press/ionic-long-press.ts"],"names":["Hammer.Manager","Hammer.Pan","Hammer.DIRECTION_VERTICAL","Hammer.Press","Hammer.Tap","tslib_1.__decorate"],"mappings":"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","sourcesContent":["import { Directive, ElementRef, EventEmitter, Input, NgZone, OnDestroy, OnInit, Output } from '@angular/core'\nimport * as Hammer from 'hammerjs'\n\n// const LONG_PRESS_DEFAULT_TIMEOUT = 500;\n\n// const MIN_LONG_PRESS_TIMEOUT = 40;\n\n@Directive({\n  selector: '[ion-long-press]',\n})\nexport class LongPressDirective implements OnInit, OnDestroy {\n  @Input() interval: number\n\n  @Output() pressed: EventEmitter<any> = new EventEmitter()\n  @Output() longPressed: EventEmitter<any> = new EventEmitter()\n  @Output() pressEnded: EventEmitter<any> = new EventEmitter()\n\n  private readonly el: HTMLElement\n  private _hammer: HammerManager\n  private int: number\n\n  constructor(public zone: NgZone, el: ElementRef) {\n    this.el = el.nativeElement\n  }\n\n  ngOnInit(): void {\n    if (!this.interval) this.interval = 500\n    if (this.interval < 40) {\n      throw new Error(\n        \"A limit of 40ms is imposed so you don't destroy device performance. If you need less than a 40ms interval, please file an issue explaining your use case.\"\n      )\n    }\n\n    this._hammer = new Hammer.Manager(this.el, {\n      recognizers: [[Hammer.Pan, { direction: Hammer.DIRECTION_VERTICAL }], [Hammer.Press], [Hammer.Tap]],\n    })\n\n    this._hammer.on('pan', (e: any) => {\n      this.onPressEnd()\n    })\n\n    this._hammer.on('press', (e: any) => {\n      this.pressed.emit(e)\n      this.clearInt()\n      this.int = setInterval(() => {\n        this.longPressed.emit()\n      }, this.interval) as any\n    })\n\n    this._hammer.on('pressup', (e: any) => {\n      this.onPressEnd()\n    })\n\n    this._hammer.on('release', (e: any) => {\n      this.onPressEnd()\n    })\n\n    this.el.addEventListener('mouseleave', (e: any) => {\n      this.onPressEnd()\n    })\n\n    this.el.addEventListener('mouseout', (e: any) => {\n      this.onPressEnd()\n    })\n  }\n\n  clearInt(): void {\n    if (this.int !== undefined) {\n      clearInterval(this.int)\n      this.int = undefined\n    }\n  }\n\n  onPressEnd(): void {\n    this.clearInt()\n    this.pressEnded.emit()\n  }\n\n  ngOnDestroy(): void {\n    this.onPressEnd()\n    if (this._hammer) {\n      this._hammer.destroy()\n      this._hammer = null\n    }\n  }\n}\n","import { CommonModule } from '@angular/common'\nimport { NgModule } from '@angular/core'\nimport { LongPressDirective } from './directives/long-press.directive'\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [LongPressDirective],\n  exports: [LongPressDirective],\n})\nexport class LongPressModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}