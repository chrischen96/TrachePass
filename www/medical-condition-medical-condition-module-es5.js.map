{"version":3,"sources":["webpack:///src/app/services/user-data.service.ts","webpack:///src/app/medical-condition/medical-condition.page.html","webpack:///src/app/medical-condition/medical-condition.page.scss","webpack:///src/app/medical-condition/medical-condition-routing.module.ts","webpack:///src/app/medical-condition/medical-condition.page.ts","webpack:///src/app/medical-condition/medical-condition.module.ts"],"names":["Storage","UserDataService","userProfileValue","userProfileKey","userProfileString","medicalRecordValue","medicalRecordKey","medicalRecordString","versionHistoryValue","versionHistoryKey","exporter","exporterString","JSON","stringify","userProfile","medicalRecord","get","key","userProfileGet","parse","value","console","log","versionHistoryGet","oldDataGet","oldDataValue","toSave","time","Date","toISOString","slice","type","saveVersion","set","medicalRecordGet","unshift","length","providedIn","routes","path","component","MedicalConditionPageRoutingModule","imports","forChild","exports","MedicalConditionPage","modalCtrl","userDataService","allergies","medications","otherMedicalConditions","loadMedicalRecord","Object","keys","forEach","includes","create","backdropDismiss","componentProps","modal","present","selector","template","MedicalConditionPageModule","declarations"],"mappings":"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","file":"medical-condition-medical-condition-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { Plugins, Capacitor, } from '@capacitor/core';\n\nconst { Storage } = Plugins;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserDataService {\n\n  public userProfileValue = {};\n  public userProfileKey: string = \"userProfile\";\n  public userProfileString: string = \"\";\n\n  public medicalRecordValue = {};\n  public medicalRecordKey:string = \"medicalRecord\";\n  public medicalRecordString: string = \"\";\n\n  public versionHistoryValue = [];\n  public versionHistoryKey:string = 'versionHistory';\n\n  public exporter = {};\n  public exporterString = \"\";\n\n  constructor() { }\n  async exportData() {\n    this.userProfileString = JSON.stringify(this.userProfileValue);\n    this.medicalRecordString = JSON.stringify(this.medicalRecordValue);\n\n    this.exporter = {\n      userProfile: this.userProfileString,\n      medicalRecord: this.medicalRecordString,\n    }\n    this.exporterString = JSON.stringify(this.exporter);\n  }\n\n  async loadUserProfile(){\n    const userProfileGet= await Storage.get({ key: this.userProfileKey });\n    this.userProfileValue = JSON.parse(userProfileGet.value) || {};\n    console.log(\"finished loading\");\n    const versionHistoryGet = await Storage.get({ key: this.versionHistoryKey });\n    this.versionHistoryValue = JSON.parse(versionHistoryGet.value) || [];\n  } //load user profile from storage\n\n  async saveUserProfile() {\n    const oldDataGet = await Storage.get({ key: this.userProfileKey});\n    const oldDataValue = JSON.parse(oldDataGet.value) || {};\n    console.log(oldDataValue);\n    const toSave = {\n      time: new Date().toISOString().slice(0,16),\n      type: 'User Profile',\n      value: oldDataValue,\n    }\n    this.saveVersion(toSave);\n    Storage.set({\n      key: this.userProfileKey,\n      value: JSON.stringify(this.userProfileValue),\n    })\n  } //save updated user profile to storage\n\n  async loadMedicalRecord(){\n    const medicalRecordGet= await Storage.get({ key: this.medicalRecordKey });\n    this.medicalRecordValue = JSON.parse(medicalRecordGet.value) || {};\n    console.log(\"finished loading\");\n    const versionHistoryGet = await Storage.get({ key: this.versionHistoryKey });\n    this.versionHistoryValue = JSON.parse(versionHistoryGet.value) || [];\n  } //load medical record from storage\n\n  async saveMedicalRecord() {\n    const oldDataGet = await Storage.get({ key: this.medicalRecordKey});\n    const oldDataValue = JSON.parse(oldDataGet.value) || {};\n    const toSave = {\n      time: new Date().toISOString().slice(0,16),\n      type: 'Medical Record',\n      value: oldDataValue,\n    }\n    this.saveVersion(toSave);\n    Storage.set({\n      key: this.medicalRecordKey,\n      value: JSON.stringify(this.medicalRecordValue),\n    })\n  } //save new medical record to storage\n\n  saveVersion(toSave: any){\n    this.versionHistoryValue.unshift(toSave);\n    console.log(this.versionHistoryValue);\n    console.log(this.versionHistoryValue.length);\n    if (this.versionHistoryValue.length > 10) {\n      console.log(\"too long\")\n      this.versionHistoryValue = this.versionHistoryValue.slice(0,10);\n      console.log(this.versionHistoryValue);\n    }\n    Storage.set({\n      key: this.versionHistoryKey,\n      value: JSON.stringify(this.versionHistoryValue)\n    })\n  }\n\n  convertToString() {\n    this.userProfileString = JSON.stringify(this.userProfileValue);\n  }\n}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"medical-record\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Medical Conditions</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"edit()\\\">Edit</ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-card>\\n    <ion-card-header>\\n      <ion-card-title>Allergies</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content *ngIf=\\\"medicalRecord.allergies!=''\\\">\\n      {{medicalRecord.allergies}}\\n    </ion-card-content>\\n    <ion-card-content *ngIf=\\\"medicalRecord.allergies==''\\\">\\n      No content\\n    </ion-card-content>\\n  </ion-card>\\n\\n  <ion-card>\\n    <ion-card-header>\\n      <ion-card-title>Medications</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content *ngIf=\\\"medicalRecord.medications!=''\\\">\\n      {{medicalRecord.medications}}\\n    </ion-card-content>\\n    <ion-card-content *ngIf=\\\"medicalRecord.medications==''\\\">\\n      No content\\n    </ion-card-content>\\n  </ion-card>\\n\\n  <ion-card>\\n    <ion-card-header>\\n      <ion-card-title>Other Medical Conditions</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content *ngIf=\\\"medicalRecord.otherMedicalConditions!=''\\\">\\n      {{medicalRecord.otherMedicalConditions}}\\n    </ion-card-content>\\n    <ion-card-content *ngIf=\\\"medicalRecord.otherMedicalConditions==''\\\">\\n      No content\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\";","export default \"ion-card-title {\\n  font-size: medium;\\n  font-weight: bold;\\n  color: #ff5a00;\\n}\\n\\nion-card-header {\\n  padding-top: 15px;\\n  padding-bottom: 10px;\\n}\\n\\nion-card-content {\\n  padding-top: 0px;\\n  padding-bottom: 15px;\\n  color: black;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL21lZGljYWwtY29uZGl0aW9uLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGlCQUFBO0VBQ0EsaUJBQUE7RUFDQSxjQUFBO0FBQ0o7O0FBRUE7RUFDSSxpQkFBQTtFQUNBLG9CQUFBO0FBQ0o7O0FBRUE7RUFDSSxnQkFBQTtFQUNBLG9CQUFBO0VBQ0EsWUFBQTtBQUNKIiwiZmlsZSI6Im1lZGljYWwtY29uZGl0aW9uLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1jYXJkLXRpdGxlIHtcbiAgICBmb250LXNpemU6bWVkaXVtO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIGNvbG9yOnJnYigyNTUsIDkwLCAwKTtcbn1cblxuaW9uLWNhcmQtaGVhZGVyIHtcbiAgICBwYWRkaW5nLXRvcDogMTVweDtcbiAgICBwYWRkaW5nLWJvdHRvbTogMTBweDtcbn1cblxuaW9uLWNhcmQtY29udGVudHtcbiAgICBwYWRkaW5nLXRvcDogMHB4O1xuICAgIHBhZGRpbmctYm90dG9tOiAxNXB4O1xuICAgIGNvbG9yOiBibGFjaztcbiAgICAvL2ZvbnQtc2l6ZTogMTRweDtcbn0iXX0= */\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MedicalConditionPage } from './medical-condition.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MedicalConditionPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MedicalConditionPageRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { UserDataService } from '../services/user-data.service';\nimport {EditMedicalConditionsPage} from '../edit-medical-conditions/edit-medical-conditions.page'\n\n@Component({\n  selector: 'app-medical-condition',\n  templateUrl: './medical-condition.page.html',\n  styleUrls: ['./medical-condition.page.scss'],\n})\nexport class MedicalConditionPage implements OnInit {\n  public medicalRecord = {\n    allergies : '',\n    medications : '',\n    otherMedicalConditions : '',\n  }\n\n  constructor(\n    private modalCtrl:ModalController,\n    public userDataService: UserDataService,\n  ) { }\n\n  async ngOnInit() {\n    await this.userDataService.loadMedicalRecord();\n    Object.keys(this.userDataService.medicalRecordValue).forEach(key => {\n      if(Object.keys(this.medicalRecord).includes(key)){\n        this.medicalRecord[key]=this.userDataService.medicalRecordValue[key];\n      }\n      console.log(key, this.medicalRecord[key]);\n    })\n  }\n\n  async edit(){\n    const modal = await this.modalCtrl.create({\n      component: EditMedicalConditionsPage,\n      backdropDismiss: false,\n      componentProps: {\n      },\n    });\n    modal.present();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MedicalConditionPageRoutingModule } from './medical-condition-routing.module';\n\nimport { MedicalConditionPage } from './medical-condition.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MedicalConditionPageRoutingModule\n  ],\n  declarations: [MedicalConditionPage]\n})\nexport class MedicalConditionPageModule {}\n"]}