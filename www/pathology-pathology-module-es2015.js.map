{"version":3,"sources":["./src/app/pathology/pathology.page.ts","./src/app/pathology/pathology.module.ts","./src/app/services/user-data.service.ts","./src/app/pathology/pathology.page.html","./src/app/pathology/pathology-routing.module.ts","./src/app/pathology/pathology.page.scss"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAkD;AACD;AACyB;AACX;IAOlD,aAAa,SAAb,aAAa;IASxB,YACU,SAAyB,EAC1B,eAAgC;QAD/B,cAAS,GAAT,SAAS,CAAgB;QAC1B,oBAAe,GAAf,eAAe,CAAiB;QAVlC,kBAAa,GAAG;YACrB,SAAS,EAAE,EAAE;YACb,YAAY,EAAE,KAAK;YACnB,WAAW,EAAE,EAAE;YACf,QAAQ,EAAE,EAAE;YACZ,OAAO,EAAE,EAAE;SACZ;IAMD,CAAC;IAEK,QAAQ;;YACZ,MAAM,IAAI,CAAC,eAAe,CAAC,iBAAiB,EAAE,CAAC;YAC/C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;gBACjE,IAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAC;oBAC/C,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,GAAC,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;iBACtE;gBACD,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC;YAC5C,CAAC,CAAC;QACJ,CAAC;KAAA;IAEK,IAAI;;YACR,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gBACxC,SAAS,EAAE,qFAAiB;gBAC5B,eAAe,EAAE,KAAK;gBACtB,cAAc,EAAE;oBACd,OAAO,EAAE,IAAI;iBACd;aACF,CAAC,CAAC;YACH,KAAK,CAAC,OAAO,EAAE,CAAC;QAClB,CAAC;KAAA;CACF;;YA5CQ,8DAAe;YAEf,2EAAe;;AAOX,aAAa;IALzB,+DAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,iFAAoC;;KAErC,CAAC;GACW,aAAa,CAmCzB;AAnCyB;;;;;;;;;;;;;;;;;;;;;;;ACVe;AACM;AACF;AAEA;AAE2B;AAEvB;IAWpC,mBAAmB,SAAnB,mBAAmB;CAAG;AAAtB,mBAAmB;IAT/B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,oFAA0B;SAC3B;QACD,YAAY,EAAE,CAAC,6DAAa,CAAC;KAC9B,CAAC;GACW,mBAAmB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;ACnBW;AAEW;AAEtD,MAAM,EAAE,OAAO,EAAE,GAAG,uDAAO,CAAC;IAKf,eAAe,SAAf,eAAe;IAgB1B;QAdO,qBAAgB,GAAG,EAAE,CAAC;QACtB,mBAAc,GAAW,aAAa,CAAC;QACvC,sBAAiB,GAAW,EAAE,CAAC;QAE/B,uBAAkB,GAAG,EAAE,CAAC;QACxB,qBAAgB,GAAU,eAAe,CAAC;QAC1C,wBAAmB,GAAW,EAAE,CAAC;QAEjC,wBAAmB,GAAG,EAAE,CAAC;QACzB,sBAAiB,GAAU,gBAAgB,CAAC;QAE5C,aAAQ,GAAG,EAAE,CAAC;QACd,mBAAc,GAAG,EAAE,CAAC;IAEX,CAAC;IACX,UAAU;;YACd,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;YAC/D,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YAEnE,IAAI,CAAC,QAAQ,GAAG;gBACd,WAAW,EAAE,IAAI,CAAC,iBAAiB;gBACnC,aAAa,EAAE,IAAI,CAAC,mBAAmB;aACxC;YACD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACtD,CAAC;KAAA;IAEK,eAAe;;YACnB,MAAM,cAAc,GAAE,MAAM,OAAO,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;YACtE,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;YAC/D,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;YAChC,MAAM,iBAAiB,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;YAC7E,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;QACvE,CAAC;KAAA,CAAC,gCAAgC;IAE5B,eAAe;;YACnB,MAAM,UAAU,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,cAAc,EAAC,CAAC,CAAC;YAClE,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;YACxD,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;YAC1B,MAAM,MAAM,GAAG;gBACb,IAAI,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,EAAC,EAAE,CAAC;gBAC1C,IAAI,EAAE,cAAc;gBACpB,KAAK,EAAE,YAAY;aACpB;YACD,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;YACzB,OAAO,CAAC,GAAG,CAAC;gBACV,GAAG,EAAE,IAAI,CAAC,cAAc;gBACxB,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC;aAC7C,CAAC;QACJ,CAAC;KAAA,CAAC,sCAAsC;IAElC,iBAAiB;;YACrB,MAAM,gBAAgB,GAAE,MAAM,OAAO,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC;YAC1E,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;YACnE,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;YAChC,MAAM,iBAAiB,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;YAC7E,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;QACvE,CAAC;KAAA,CAAC,kCAAkC;IAE9B,iBAAiB;;YACrB,MAAM,UAAU,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,gBAAgB,EAAC,CAAC,CAAC;YACpE,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;YACxD,MAAM,MAAM,GAAG;gBACb,IAAI,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,EAAC,EAAE,CAAC;gBAC1C,IAAI,EAAE,gBAAgB;gBACtB,KAAK,EAAE,YAAY;aACpB;YACD,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;YACzB,OAAO,CAAC,GAAG,CAAC;gBACV,GAAG,EAAE,IAAI,CAAC,gBAAgB;gBAC1B,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,kBAAkB,CAAC;aAC/C,CAAC;QACJ,CAAC;KAAA,CAAC,oCAAoC;IAEtC,WAAW,CAAC,MAAW;QACrB,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACzC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QACtC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;QAC7C,IAAI,IAAI,CAAC,mBAAmB,CAAC,MAAM,GAAG,EAAE,EAAE;YACxC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;YACvB,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,EAAC,EAAE,CAAC,CAAC;YAChE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;SACvC;QACD,OAAO,CAAC,GAAG,CAAC;YACV,GAAG,EAAE,IAAI,CAAC,iBAAiB;YAC3B,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,mBAAmB,CAAC;SAChD,CAAC;IACJ,CAAC;IAED,eAAe;QACb,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;IACjE,CAAC;CACF;;AA7FY,eAAe;IAH3B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,eAAe,CA6F3B;AA7F2B;;;;;;;;;;;;;ACT5B;AAAe,6mBAA8iB,yBAAyB,0qBAA0qB,2BAA2B,wIAAwI,wBAAwB,uMAAuM,uBAAuB,wFAAwF,E;;;;;;;;;;;;;;;;;;;ACAxsD;AACc;AAEN;AAEjD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,6DAAa;KACzB;CACF,CAAC;IAMW,0BAA0B,SAA1B,0BAA0B;CAAG;AAA7B,0BAA0B;IAJtC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,0BAA0B,CAAG;AAAH;;;;;;;;;;;;;AChBvC;AAAe,gFAAiB,sBAAsB,sBAAsB,mBAAmB,GAAG,qBAAqB,sBAAsB,yBAAyB,GAAG,sBAAsB,qBAAqB,yBAAyB,iBAAiB,GAAG,0BAA0B,uBAAuB,cAAc,sBAAsB,GAAG,aAAa,sBAAsB,GAAG,6CAA6C,+9BAA+9B,E","file":"pathology-pathology-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { EditPathologyPage } from '../edit-pathology/edit-pathology.page';\nimport { UserDataService } from '../services/user-data.service'\n\n@Component({\n  selector: 'app-pathology',\n  templateUrl: './pathology.page.html',\n  styleUrls: ['./pathology.page.scss'],\n})\nexport class PathologyPage implements OnInit {\n  public medicalRecord = {\n    pathology: '',\n    intubatation: false,\n    airwayGrade: '',\n    tubeSize: '',\n    details: '',\n  }\n  \n  constructor(\n    private modalCtrl:ModalController,\n    public userDataService: UserDataService,\n  ) { \n  }\n\n  async ngOnInit() {\n    await this.userDataService.loadMedicalRecord();\n    Object.keys(this.userDataService.medicalRecordValue).forEach(key => {\n      if(Object.keys(this.medicalRecord).includes(key)){\n        this.medicalRecord[key]=this.userDataService.medicalRecordValue[key];\n      }\n      console.log(key, this.medicalRecord[key]);\n    })\n  }\n\n  async edit(){\n    const modal = await this.modalCtrl.create({\n      component: EditPathologyPage,\n      backdropDismiss: false,\n      componentProps: {\n        isModal: true,\n      },\n    });\n    modal.present();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PathologyPageRoutingModule } from './pathology-routing.module';\n\nimport { PathologyPage } from './pathology.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PathologyPageRoutingModule\n  ],\n  declarations: [PathologyPage]\n})\nexport class PathologyPageModule {}\n","import { Injectable } from '@angular/core';\n\nimport { Plugins, Capacitor, } from '@capacitor/core';\n\nconst { Storage } = Plugins;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserDataService {\n\n  public userProfileValue = {};\n  public userProfileKey: string = \"userProfile\";\n  public userProfileString: string = \"\";\n\n  public medicalRecordValue = {};\n  public medicalRecordKey:string = \"medicalRecord\";\n  public medicalRecordString: string = \"\";\n\n  public versionHistoryValue = [];\n  public versionHistoryKey:string = 'versionHistory';\n\n  public exporter = {};\n  public exporterString = \"\";\n\n  constructor() { }\n  async exportData() {\n    this.userProfileString = JSON.stringify(this.userProfileValue);\n    this.medicalRecordString = JSON.stringify(this.medicalRecordValue);\n\n    this.exporter = {\n      userProfile: this.userProfileString,\n      medicalRecord: this.medicalRecordString,\n    }\n    this.exporterString = JSON.stringify(this.exporter);\n  }\n\n  async loadUserProfile(){\n    const userProfileGet= await Storage.get({ key: this.userProfileKey });\n    this.userProfileValue = JSON.parse(userProfileGet.value) || {};\n    console.log(\"finished loading\");\n    const versionHistoryGet = await Storage.get({ key: this.versionHistoryKey });\n    this.versionHistoryValue = JSON.parse(versionHistoryGet.value) || [];\n  } //load user profile from storage\n\n  async saveUserProfile() {\n    const oldDataGet = await Storage.get({ key: this.userProfileKey});\n    const oldDataValue = JSON.parse(oldDataGet.value) || {};\n    console.log(oldDataValue);\n    const toSave = {\n      time: new Date().toISOString().slice(0,16),\n      type: 'User Profile',\n      value: oldDataValue,\n    }\n    this.saveVersion(toSave);\n    Storage.set({\n      key: this.userProfileKey,\n      value: JSON.stringify(this.userProfileValue),\n    })\n  } //save updated user profile to storage\n\n  async loadMedicalRecord(){\n    const medicalRecordGet= await Storage.get({ key: this.medicalRecordKey });\n    this.medicalRecordValue = JSON.parse(medicalRecordGet.value) || {};\n    console.log(\"finished loading\");\n    const versionHistoryGet = await Storage.get({ key: this.versionHistoryKey });\n    this.versionHistoryValue = JSON.parse(versionHistoryGet.value) || [];\n  } //load medical record from storage\n\n  async saveMedicalRecord() {\n    const oldDataGet = await Storage.get({ key: this.medicalRecordKey});\n    const oldDataValue = JSON.parse(oldDataGet.value) || {};\n    const toSave = {\n      time: new Date().toISOString().slice(0,16),\n      type: 'Medical Record',\n      value: oldDataValue,\n    }\n    this.saveVersion(toSave);\n    Storage.set({\n      key: this.medicalRecordKey,\n      value: JSON.stringify(this.medicalRecordValue),\n    })\n  } //save new medical record to storage\n\n  saveVersion(toSave: any){\n    this.versionHistoryValue.unshift(toSave);\n    console.log(this.versionHistoryValue);\n    console.log(this.versionHistoryValue.length);\n    if (this.versionHistoryValue.length > 10) {\n      console.log(\"too long\")\n      this.versionHistoryValue = this.versionHistoryValue.slice(0,10);\n      console.log(this.versionHistoryValue);\n    }\n    Storage.set({\n      key: this.versionHistoryKey,\n      value: JSON.stringify(this.versionHistoryValue)\n    })\n  }\n\n  convertToString() {\n    this.userProfileString = JSON.stringify(this.userProfileValue);\n  }\n}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"medical-record\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Airway Pathology</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"edit()\\\">Edit</ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-card>\\n    <ion-card-header>\\n      <ion-card-title>Reason for Tracheostomy</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content *ngIf=\\\"medicalRecord.pathology!=''\\\">\\n      {{medicalRecord.pathology}}\\n    </ion-card-content>\\n    <ion-card-content *ngIf=\\\"medicalRecord.pathology==''\\\">\\n      No content\\n    </ion-card-content>\\n  </ion-card>\\n\\n  <ion-card>\\n    <ion-card-header>\\n      <ion-card-title>Is Upper Airway Intubatable?</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content class=\\\"airway\\\" *ngIf=\\\"medicalRecord.intubatation==false\\\">\\n      No\\n    </ion-card-content>\\n    <ion-card-content class=\\\"airway\\\" *ngIf=\\\"medicalRecord.intubatation==true\\\">\\n      Yes\\n    </ion-card-content>\\n    <div *ngIf=\\\"medicalRecord.intubatation==true\\\">\\n      <ion-list>\\n        <ion-item>\\n          <ion-label>Airway Grade:</ion-label>\\n          <ion-label>{{medicalRecord.airwayGrade}}</ion-label>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label>Endotracheal Tube Size:</ion-label>\\n          <ion-label>{{medicalRecord.tubeSize}}</ion-label>\\n        </ion-item>\\n        <ion-item lines=\\\"none\\\">\\n          <ion-label>Details:</ion-label> \\n          <ion-label></ion-label> \\n        </ion-item>\\n        <ion-card-content>{{medicalRecord.details}}</ion-card-content>\\n      </ion-list>\\n    </div>\\n\\n  </ion-card>\\n\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PathologyPage } from './pathology.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PathologyPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PathologyPageRoutingModule {}\n","export default \"ion-card-title {\\n  font-size: medium;\\n  font-weight: bold;\\n  color: #ff7800;\\n}\\n\\nion-card-header {\\n  padding-top: 15px;\\n  padding-bottom: 10px;\\n}\\n\\nion-card-content {\\n  padding-top: 0px;\\n  padding-bottom: 15px;\\n  color: black;\\n}\\n\\nion-label:last-child {\\n  position: absolute;\\n  right: 5%;\\n  font-weight: bold;\\n}\\n\\n.airway {\\n  font-weight: bold;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3BhdGhvbG9neS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxpQkFBQTtFQUNBLGlCQUFBO0VBQ0EsY0FBQTtBQUNKOztBQUVBO0VBQ0ksaUJBQUE7RUFDQSxvQkFBQTtBQUNKOztBQUVBO0VBQ0ksZ0JBQUE7RUFDQSxvQkFBQTtFQUNBLFlBQUE7QUFDSjs7QUFHQTtFQUNJLGtCQUFBO0VBQ0EsU0FBQTtFQUNBLGlCQUFBO0FBQUo7O0FBR0E7RUFDSSxpQkFBQTtBQUFKIiwiZmlsZSI6InBhdGhvbG9neS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tY2FyZC10aXRsZSB7XG4gICAgZm9udC1zaXplOm1lZGl1bTtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBjb2xvcjpyZ2IoMjU1LCAxMjAsIDApO1xufVxuXG5pb24tY2FyZC1oZWFkZXIge1xuICAgIHBhZGRpbmctdG9wOiAxNXB4O1xuICAgIHBhZGRpbmctYm90dG9tOiAxMHB4O1xufVxuXG5pb24tY2FyZC1jb250ZW50e1xuICAgIHBhZGRpbmctdG9wOiAwcHg7XG4gICAgcGFkZGluZy1ib3R0b206IDE1cHg7XG4gICAgY29sb3I6IGJsYWNrO1xuICAgIC8vZm9udC1zaXplOiAxNnB4O1xufVxuXG5pb24tbGFiZWw6bGFzdC1jaGlsZCB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHJpZ2h0OiA1JTtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLmFpcndheSB7XG4gICAgZm9udC13ZWlnaHQ6Ym9sZDtcbn0iXX0= */\";"],"sourceRoot":"webpack:///"}